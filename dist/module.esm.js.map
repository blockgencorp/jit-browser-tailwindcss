{
  "version": 3,
  "sources": ["../node_modules/@alloc/quick-lru/index.js", "../node_modules/tailwindcss/src/value-parser/parse.js", "../node_modules/tailwindcss/src/value-parser/walk.js", "../node_modules/tailwindcss/src/value-parser/stringify.js", "../node_modules/tailwindcss/src/value-parser/unit.js", "../node_modules/tailwindcss/src/value-parser/index.js", "../node_modules/tailwindcss/stubs/config.full.js", "../src/index.ts", "../src/stubs/tailwindcss/utils/log.ts", "../node_modules/tailwindcss/src/lib/normalizeTailwindDirectives.js", "../src/stubs/fs.ts", "../node_modules/tailwindcss/src/lib/expandTailwindAtRules.js", "../node_modules/tailwindcss/src/lib/sharedState.js", "../node_modules/tailwindcss/src/lib/generateRules.js", "../node_modules/tailwindcss/src/util/parseObjectStyles.js", "../node_modules/tailwindcss/src/util/isPlainObject.js", "../node_modules/tailwindcss/src/util/prefixSelector.js", "../node_modules/tailwindcss/src/util/escapeCommas.js", "../node_modules/tailwindcss/src/util/colorNames.js", "../node_modules/tailwindcss/src/util/color.js", "../node_modules/tailwindcss/src/util/withAlphaVariable.js", "../node_modules/tailwindcss/src/util/splitAtTopLevelOnly.js", "../node_modules/tailwindcss/src/util/parseBoxShadowValue.js", "../node_modules/tailwindcss/src/util/dataTypes.js", "../node_modules/tailwindcss/src/util/negateValue.js", "../node_modules/tailwindcss/src/util/validateFormalSyntax.js", "../src/stubs/picocolors.ts", "../node_modules/tailwindcss/src/featureFlags.js", "../node_modules/tailwindcss/src/util/pluginUtils.js", "../node_modules/tailwindcss/src/util/formatVariantSelector.js", "../node_modules/tailwindcss/src/util/escapeClassName.js", "../node_modules/tailwindcss/src/util/pseudoElements.js", "../node_modules/tailwindcss/src/util/nameClass.js", "../node_modules/tailwindcss/src/lib/setupContextUtils.js", "../node_modules/tailwindcss/src/util/transformThemeValue.js", "../src/stubs/path.ts", "../node_modules/tailwindcss/src/corePlugins.js", "../node_modules/tailwindcss/src/util/createUtilityPlugin.js", "../node_modules/tailwindcss/src/util/buildMediaQuery.js", "../node_modules/tailwindcss/src/util/parseAnimationValue.js", "../node_modules/tailwindcss/src/util/flattenColorPalette.js", "../node_modules/tailwindcss/src/util/toColorValue.js", "../node_modules/tailwindcss/src/util/normalizeScreens.js", "../node_modules/tailwindcss/src/util/removeAlphaVariables.js", "../node_modules/tailwindcss/src/util/toPath.js", "../node_modules/tailwindcss/src/util/isSyntacticallyValidPropertyValue.js", "../node_modules/tailwindcss/src/util/bigSign.js", "../node_modules/tailwindcss/src/lib/remap-bitfield.js", "../node_modules/tailwindcss/src/lib/offsets.js", "../node_modules/tailwindcss/src/util/applyImportantSelector.js", "../node_modules/tailwindcss/src/util/cloneNodes.js", "../node_modules/tailwindcss/src/lib/regex.js", "../node_modules/tailwindcss/src/lib/defaultExtractor.js", "../node_modules/tailwindcss/src/lib/expandApplyAtRules.js", "../node_modules/tailwindcss/src/lib/evaluateTailwindFunctions.js", "../node_modules/tailwindcss/src/lib/substituteScreenAtRules.js", "../node_modules/tailwindcss/src/lib/resolveDefaultsAtRules.js", "../node_modules/tailwindcss/src/lib/collapseAdjacentRules.js", "../node_modules/tailwindcss/src/lib/collapseDuplicateDeclarations.js", "../node_modules/tailwindcss/src/lib/partitionApplyAtRules.js", "../node_modules/tailwindcss/src/lib/detectNesting.js", "../node_modules/tailwindcss/src/processTailwindFeatures.js", "../node_modules/tailwindcss/src/corePluginList.js", "../node_modules/tailwindcss/src/util/configurePlugins.js", "../node_modules/tailwindcss/src/public/colors.js", "../node_modules/tailwindcss/src/util/defaults.js", "../node_modules/tailwindcss/src/util/normalizeConfig.js", "../node_modules/tailwindcss/src/util/cloneDeep.js", "../node_modules/tailwindcss/src/util/resolveConfig.js", "../node_modules/tailwindcss/src/util/getAllConfigs.js", "../node_modules/tailwindcss/src/public/resolve-config.js"],
  "sourcesContent": ["'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Infinity;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge === Infinity ? undefined : Date.now() + this.maxAge} = {}) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\tmaxAge\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry: maxAge});\n\t\t}\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\t\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n}\n\nmodule.exports = QuickLRU;\n", "var openParentheses = '('.charCodeAt(0)\nvar closeParentheses = ')'.charCodeAt(0)\nvar singleQuote = \"'\".charCodeAt(0)\nvar doubleQuote = '\"'.charCodeAt(0)\nvar backslash = '\\\\'.charCodeAt(0)\nvar slash = '/'.charCodeAt(0)\nvar comma = ','.charCodeAt(0)\nvar colon = ':'.charCodeAt(0)\nvar star = '*'.charCodeAt(0)\nvar uLower = 'u'.charCodeAt(0)\nvar uUpper = 'U'.charCodeAt(0)\nvar plus = '+'.charCodeAt(0)\nvar isUnicodeRange = /^[a-f0-9?-]+$/i\n\nmodule.exports = function (input) {\n  var tokens = []\n  var value = input\n\n  var next, quote, prev, token, escape, escapePos, whitespacePos, parenthesesOpenPos\n  var pos = 0\n  var code = value.charCodeAt(pos)\n  var max = value.length\n  var stack = [{ nodes: tokens }]\n  var balanced = 0\n  var parent\n\n  var name = ''\n  var before = ''\n  var after = ''\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos\n      do {\n        next += 1\n        code = value.charCodeAt(next)\n      } while (code <= 32)\n      token = value.slice(pos, next)\n\n      prev = tokens[tokens.length - 1]\n      if (code === closeParentheses && balanced) {\n        after = token\n      } else if (prev && prev.type === 'div') {\n        prev.after = token\n        prev.sourceEndIndex += token.length\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent || (parent && parent.type === 'function' && false)))\n      ) {\n        before = token\n      } else {\n        tokens.push({\n          type: 'space',\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token,\n        })\n      }\n\n      pos = next\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos\n      quote = code === singleQuote ? \"'\" : '\"'\n      token = {\n        type: 'string',\n        sourceIndex: pos,\n        quote: quote,\n      }\n      do {\n        escape = false\n        next = value.indexOf(quote, next + 1)\n        if (~next) {\n          escapePos = next\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1\n            escape = !escape\n          }\n        } else {\n          value += quote\n          next = value.length - 1\n          token.unclosed = true\n        }\n      } while (escape)\n      token.value = value.slice(pos + 1, next)\n      token.sourceEndIndex = token.unclosed ? next : next + 1\n      tokens.push(token)\n      pos = next + 1\n      code = value.charCodeAt(pos)\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf('*/', pos)\n\n      token = {\n        type: 'comment',\n        sourceIndex: pos,\n        sourceEndIndex: next + 2,\n      }\n\n      if (next === -1) {\n        token.unclosed = true\n        next = value.length\n        token.sourceEndIndex = next\n      }\n\n      token.value = value.slice(pos + 2, next)\n      tokens.push(token)\n\n      pos = next + 2\n      code = value.charCodeAt(pos)\n\n      // Operation within calc\n    } else if ((code === slash || code === star) && parent && parent.type === 'function' && true) {\n      token = value[pos]\n      tokens.push({\n        type: 'word',\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n      })\n      pos += 1\n      code = value.charCodeAt(pos)\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos]\n\n      tokens.push({\n        type: 'div',\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: '',\n      })\n      before = ''\n\n      pos += 1\n      code = value.charCodeAt(pos)\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos\n      do {\n        next += 1\n        code = value.charCodeAt(next)\n      } while (code <= 32)\n      parenthesesOpenPos = pos\n      token = {\n        type: 'function',\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next),\n      }\n      pos = next\n\n      if (name === 'url' && code !== singleQuote && code !== doubleQuote) {\n        next -= 1\n        do {\n          escape = false\n          next = value.indexOf(')', next + 1)\n          if (~next) {\n            escapePos = next\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1\n              escape = !escape\n            }\n          } else {\n            value += ')'\n            next = value.length - 1\n            token.unclosed = true\n          }\n        } while (escape)\n        // Whitespaces before closed\n        whitespacePos = next\n        do {\n          whitespacePos -= 1\n          code = value.charCodeAt(whitespacePos)\n        } while (code <= 32)\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: 'word',\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1),\n              },\n            ]\n          } else {\n            token.nodes = []\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = ''\n            token.nodes.push({\n              type: 'space',\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next),\n            })\n          } else {\n            token.after = value.slice(whitespacePos + 1, next)\n            token.sourceEndIndex = next\n          }\n        } else {\n          token.after = ''\n          token.nodes = []\n        }\n        pos = next + 1\n        token.sourceEndIndex = token.unclosed ? next : pos\n        code = value.charCodeAt(pos)\n        tokens.push(token)\n      } else {\n        balanced += 1\n        token.after = ''\n        token.sourceEndIndex = pos + 1\n        tokens.push(token)\n        stack.push(token)\n        tokens = token.nodes = []\n        parent = token\n      }\n      name = ''\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1\n      code = value.charCodeAt(pos)\n\n      parent.after = after\n      parent.sourceEndIndex += after.length\n      after = ''\n      balanced -= 1\n      stack[stack.length - 1].sourceEndIndex = pos\n      stack.pop()\n      parent = stack[balanced]\n      tokens = parent.nodes\n\n      // Words\n    } else {\n      next = pos\n      do {\n        if (code === backslash) {\n          next += 1\n        }\n        next += 1\n        code = value.charCodeAt(next)\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star && parent && parent.type === 'function' && true) ||\n          (code === slash && parent.type === 'function' && true) ||\n          (code === closeParentheses && balanced)\n        )\n      )\n      token = value.slice(pos, next)\n\n      if (openParentheses === code) {\n        name = token\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: 'unicode-range',\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token,\n        })\n      } else {\n        tokens.push({\n          type: 'word',\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token,\n        })\n      }\n\n      pos = next\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true\n    stack[pos].sourceEndIndex = value.length\n  }\n\n  return stack[0].nodes\n}\n", "module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i]\n    if (!bubble) {\n      result = cb(node, i, nodes)\n    }\n\n    if (result !== false && node.type === 'function' && Array.isArray(node.nodes)) {\n      walk(node.nodes, cb, bubble)\n    }\n\n    if (bubble) {\n      cb(node, i, nodes)\n    }\n  }\n}\n", "function stringifyNode(node, custom) {\n  var type = node.type\n  var value = node.value\n  var buf\n  var customResult\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult\n  } else if (type === 'word' || type === 'space') {\n    return value\n  } else if (type === 'string') {\n    buf = node.quote || ''\n    return buf + value + (node.unclosed ? '' : buf)\n  } else if (type === 'comment') {\n    return '/*' + value + (node.unclosed ? '' : '*/')\n  } else if (type === 'div') {\n    return (node.before || '') + value + (node.after || '')\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom)\n    if (type !== 'function') {\n      return buf\n    }\n    return value + '(' + (node.before || '') + buf + (node.after || '') + (node.unclosed ? '' : ')')\n  }\n  return value\n}\n\nfunction stringify(nodes, custom) {\n  var result, i\n\n  if (Array.isArray(nodes)) {\n    result = ''\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result\n    }\n    return result\n  }\n  return stringifyNode(nodes, custom)\n}\n\nmodule.exports = stringify\n", "var minus = '-'.charCodeAt(0)\nvar plus = '+'.charCodeAt(0)\nvar dot = '.'.charCodeAt(0)\nvar exp = 'e'.charCodeAt(0)\nvar EXP = 'E'.charCodeAt(0)\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0)\n  var nextCode\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1)\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true\n    }\n\n    var nextNextCode = value.charCodeAt(2)\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true\n    }\n\n    return false\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1)\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true\n    }\n\n    return false\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true\n  }\n\n  return false\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function (value) {\n  var pos = 0\n  var length = value.length\n  var code\n  var nextCode\n  var nextNextCode\n\n  if (length === 0 || !likeNumber(value)) {\n    return false\n  }\n\n  code = value.charCodeAt(pos)\n\n  if (code === plus || code === minus) {\n    pos++\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos)\n\n    if (code < 48 || code > 57) {\n      break\n    }\n\n    pos += 1\n  }\n\n  code = value.charCodeAt(pos)\n  nextCode = value.charCodeAt(pos + 1)\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2\n\n    while (pos < length) {\n      code = value.charCodeAt(pos)\n\n      if (code < 48 || code > 57) {\n        break\n      }\n\n      pos += 1\n    }\n  }\n\n  code = value.charCodeAt(pos)\n  nextCode = value.charCodeAt(pos + 1)\n  nextNextCode = value.charCodeAt(pos + 2)\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2\n\n    while (pos < length) {\n      code = value.charCodeAt(pos)\n\n      if (code < 48 || code > 57) {\n        break\n      }\n\n      pos += 1\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos),\n  }\n}\n", "var parse = require('./parse')\nvar walk = require('./walk')\nvar stringify = require('./stringify')\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value)\n    return this\n  }\n  return new ValueParser(value)\n}\n\nValueParser.prototype.toString = function () {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : ''\n}\n\nValueParser.prototype.walk = function (cb, bubble) {\n  walk(this.nodes, cb, bubble)\n  return this\n}\n\nValueParser.unit = require('./unit')\n\nValueParser.walk = walk\n\nValueParser.stringify = stringify\n\nmodule.exports = ValueParser\n", "module.exports = {\n  content: [],\n  presets: [],\n  darkMode: 'media', // or 'class'\n  theme: {\n    accentColor: ({ theme }) => ({\n      ...theme('colors'),\n      auto: 'auto',\n    }),\n    animation: {\n      none: 'none',\n      spin: 'spin 1s linear infinite',\n      ping: 'ping 1s cubic-bezier(0, 0, 0.2, 1) infinite',\n      pulse: 'pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n      bounce: 'bounce 1s infinite',\n    },\n    aria: {\n      busy: 'busy=\"true\"',\n      checked: 'checked=\"true\"',\n      disabled: 'disabled=\"true\"',\n      expanded: 'expanded=\"true\"',\n      hidden: 'hidden=\"true\"',\n      pressed: 'pressed=\"true\"',\n      readonly: 'readonly=\"true\"',\n      required: 'required=\"true\"',\n      selected: 'selected=\"true\"',\n    },\n    aspectRatio: {\n      auto: 'auto',\n      square: '1 / 1',\n      video: '16 / 9',\n    },\n    backdropBlur: ({ theme }) => theme('blur'),\n    backdropBrightness: ({ theme }) => theme('brightness'),\n    backdropContrast: ({ theme }) => theme('contrast'),\n    backdropGrayscale: ({ theme }) => theme('grayscale'),\n    backdropHueRotate: ({ theme }) => theme('hueRotate'),\n    backdropInvert: ({ theme }) => theme('invert'),\n    backdropOpacity: ({ theme }) => theme('opacity'),\n    backdropSaturate: ({ theme }) => theme('saturate'),\n    backdropSepia: ({ theme }) => theme('sepia'),\n    backgroundColor: ({ theme }) => theme('colors'),\n    backgroundImage: {\n      none: 'none',\n      'gradient-to-t': 'linear-gradient(to top, var(--tw-gradient-stops))',\n      'gradient-to-tr': 'linear-gradient(to top right, var(--tw-gradient-stops))',\n      'gradient-to-r': 'linear-gradient(to right, var(--tw-gradient-stops))',\n      'gradient-to-br': 'linear-gradient(to bottom right, var(--tw-gradient-stops))',\n      'gradient-to-b': 'linear-gradient(to bottom, var(--tw-gradient-stops))',\n      'gradient-to-bl': 'linear-gradient(to bottom left, var(--tw-gradient-stops))',\n      'gradient-to-l': 'linear-gradient(to left, var(--tw-gradient-stops))',\n      'gradient-to-tl': 'linear-gradient(to top left, var(--tw-gradient-stops))',\n    },\n    backgroundOpacity: ({ theme }) => theme('opacity'),\n    backgroundPosition: {\n      bottom: 'bottom',\n      center: 'center',\n      left: 'left',\n      'left-bottom': 'left bottom',\n      'left-top': 'left top',\n      right: 'right',\n      'right-bottom': 'right bottom',\n      'right-top': 'right top',\n      top: 'top',\n    },\n    backgroundSize: {\n      auto: 'auto',\n      cover: 'cover',\n      contain: 'contain',\n    },\n    blur: {\n      0: '0',\n      none: '0',\n      sm: '4px',\n      DEFAULT: '8px',\n      md: '12px',\n      lg: '16px',\n      xl: '24px',\n      '2xl': '40px',\n      '3xl': '64px',\n    },\n    borderColor: ({ theme }) => ({\n      ...theme('colors'),\n      DEFAULT: theme('colors.gray.200', 'currentColor'),\n    }),\n    borderOpacity: ({ theme }) => theme('opacity'),\n    borderRadius: {\n      none: '0px',\n      sm: '0.125rem',\n      DEFAULT: '0.25rem',\n      md: '0.375rem',\n      lg: '0.5rem',\n      xl: '0.75rem',\n      '2xl': '1rem',\n      '3xl': '1.5rem',\n      full: '9999px',\n    },\n    borderSpacing: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    borderWidth: {\n      DEFAULT: '1px',\n      0: '0px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    boxShadow: {\n      sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n      DEFAULT: '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',\n      md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n      lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',\n      xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',\n      '2xl': '0 25px 50px -12px rgb(0 0 0 / 0.25)',\n      inner: 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)',\n      none: 'none',\n    },\n    boxShadowColor: ({ theme }) => theme('colors'),\n    brightness: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      90: '.9',\n      95: '.95',\n      100: '1',\n      105: '1.05',\n      110: '1.1',\n      125: '1.25',\n      150: '1.5',\n      200: '2',\n    },\n    caretColor: ({ theme }) => theme('colors'),\n    colors: ({ colors }) => ({\n      inherit: colors.inherit,\n      current: colors.current,\n      transparent: colors.transparent,\n      black: colors.black,\n      white: colors.white,\n      slate: colors.slate,\n      gray: colors.gray,\n      zinc: colors.zinc,\n      neutral: colors.neutral,\n      stone: colors.stone,\n      red: colors.red,\n      orange: colors.orange,\n      amber: colors.amber,\n      yellow: colors.yellow,\n      lime: colors.lime,\n      green: colors.green,\n      emerald: colors.emerald,\n      teal: colors.teal,\n      cyan: colors.cyan,\n      sky: colors.sky,\n      blue: colors.blue,\n      indigo: colors.indigo,\n      violet: colors.violet,\n      purple: colors.purple,\n      fuchsia: colors.fuchsia,\n      pink: colors.pink,\n      rose: colors.rose,\n    }),\n    columns: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      '3xs': '16rem',\n      '2xs': '18rem',\n      xs: '20rem',\n      sm: '24rem',\n      md: '28rem',\n      lg: '32rem',\n      xl: '36rem',\n      '2xl': '42rem',\n      '3xl': '48rem',\n      '4xl': '56rem',\n      '5xl': '64rem',\n      '6xl': '72rem',\n      '7xl': '80rem',\n    },\n    container: {},\n    content: {\n      none: 'none',\n    },\n    contrast: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      100: '1',\n      125: '1.25',\n      150: '1.5',\n      200: '2',\n    },\n    cursor: {\n      auto: 'auto',\n      default: 'default',\n      pointer: 'pointer',\n      wait: 'wait',\n      text: 'text',\n      move: 'move',\n      help: 'help',\n      'not-allowed': 'not-allowed',\n      none: 'none',\n      'context-menu': 'context-menu',\n      progress: 'progress',\n      cell: 'cell',\n      crosshair: 'crosshair',\n      'vertical-text': 'vertical-text',\n      alias: 'alias',\n      copy: 'copy',\n      'no-drop': 'no-drop',\n      grab: 'grab',\n      grabbing: 'grabbing',\n      'all-scroll': 'all-scroll',\n      'col-resize': 'col-resize',\n      'row-resize': 'row-resize',\n      'n-resize': 'n-resize',\n      'e-resize': 'e-resize',\n      's-resize': 's-resize',\n      'w-resize': 'w-resize',\n      'ne-resize': 'ne-resize',\n      'nw-resize': 'nw-resize',\n      'se-resize': 'se-resize',\n      'sw-resize': 'sw-resize',\n      'ew-resize': 'ew-resize',\n      'ns-resize': 'ns-resize',\n      'nesw-resize': 'nesw-resize',\n      'nwse-resize': 'nwse-resize',\n      'zoom-in': 'zoom-in',\n      'zoom-out': 'zoom-out',\n    },\n    divideColor: ({ theme }) => theme('borderColor'),\n    divideOpacity: ({ theme }) => theme('borderOpacity'),\n    divideWidth: ({ theme }) => theme('borderWidth'),\n    dropShadow: {\n      sm: '0 1px 1px rgb(0 0 0 / 0.05)',\n      DEFAULT: ['0 1px 2px rgb(0 0 0 / 0.1)', '0 1px 1px rgb(0 0 0 / 0.06)'],\n      md: ['0 4px 3px rgb(0 0 0 / 0.07)', '0 2px 2px rgb(0 0 0 / 0.06)'],\n      lg: ['0 10px 8px rgb(0 0 0 / 0.04)', '0 4px 3px rgb(0 0 0 / 0.1)'],\n      xl: ['0 20px 13px rgb(0 0 0 / 0.03)', '0 8px 5px rgb(0 0 0 / 0.08)'],\n      '2xl': '0 25px 25px rgb(0 0 0 / 0.15)',\n      none: '0 0 #0000',\n    },\n    fill: ({ theme }) => ({\n      none: 'none',\n      ...theme('colors'),\n    }),\n    flex: {\n      1: '1 1 0%',\n      auto: '1 1 auto',\n      initial: '0 1 auto',\n      none: 'none',\n    },\n    flexBasis: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      '1/12': '8.333333%',\n      '2/12': '16.666667%',\n      '3/12': '25%',\n      '4/12': '33.333333%',\n      '5/12': '41.666667%',\n      '6/12': '50%',\n      '7/12': '58.333333%',\n      '8/12': '66.666667%',\n      '9/12': '75%',\n      '10/12': '83.333333%',\n      '11/12': '91.666667%',\n      full: '100%',\n    }),\n    flexGrow: {\n      0: '0',\n      DEFAULT: '1',\n    },\n    flexShrink: {\n      0: '0',\n      DEFAULT: '1',\n    },\n    fontFamily: {\n      sans: [\n        'ui-sans-serif',\n        'system-ui',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n        '\"Noto Color Emoji\"',\n      ],\n      serif: ['ui-serif', 'Georgia', 'Cambria', '\"Times New Roman\"', 'Times', 'serif'],\n      mono: [\n        'ui-monospace',\n        'SFMono-Regular',\n        'Menlo',\n        'Monaco',\n        'Consolas',\n        '\"Liberation Mono\"',\n        '\"Courier New\"',\n        'monospace',\n      ],\n    },\n    fontSize: {\n      xs: ['0.75rem', { lineHeight: '1rem' }],\n      sm: ['0.875rem', { lineHeight: '1.25rem' }],\n      base: ['1rem', { lineHeight: '1.5rem' }],\n      lg: ['1.125rem', { lineHeight: '1.75rem' }],\n      xl: ['1.25rem', { lineHeight: '1.75rem' }],\n      '2xl': ['1.5rem', { lineHeight: '2rem' }],\n      '3xl': ['1.875rem', { lineHeight: '2.25rem' }],\n      '4xl': ['2.25rem', { lineHeight: '2.5rem' }],\n      '5xl': ['3rem', { lineHeight: '1' }],\n      '6xl': ['3.75rem', { lineHeight: '1' }],\n      '7xl': ['4.5rem', { lineHeight: '1' }],\n      '8xl': ['6rem', { lineHeight: '1' }],\n      '9xl': ['8rem', { lineHeight: '1' }],\n    },\n    fontWeight: {\n      thin: '100',\n      extralight: '200',\n      light: '300',\n      normal: '400',\n      medium: '500',\n      semibold: '600',\n      bold: '700',\n      extrabold: '800',\n      black: '900',\n    },\n    gap: ({ theme }) => theme('spacing'),\n    gradientColorStops: ({ theme }) => theme('colors'),\n    gradientColorStopPositions: {\n      '0%': '0%',\n      '5%': '5%',\n      '10%': '10%',\n      '15%': '15%',\n      '20%': '20%',\n      '25%': '25%',\n      '30%': '30%',\n      '35%': '35%',\n      '40%': '40%',\n      '45%': '45%',\n      '50%': '50%',\n      '55%': '55%',\n      '60%': '60%',\n      '65%': '65%',\n      '70%': '70%',\n      '75%': '75%',\n      '80%': '80%',\n      '85%': '85%',\n      '90%': '90%',\n      '95%': '95%',\n      '100%': '100%',\n    },\n    grayscale: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    gridAutoColumns: {\n      auto: 'auto',\n      min: 'min-content',\n      max: 'max-content',\n      fr: 'minmax(0, 1fr)',\n    },\n    gridAutoRows: {\n      auto: 'auto',\n      min: 'min-content',\n      max: 'max-content',\n      fr: 'minmax(0, 1fr)',\n    },\n    gridColumn: {\n      auto: 'auto',\n      'span-1': 'span 1 / span 1',\n      'span-2': 'span 2 / span 2',\n      'span-3': 'span 3 / span 3',\n      'span-4': 'span 4 / span 4',\n      'span-5': 'span 5 / span 5',\n      'span-6': 'span 6 / span 6',\n      'span-7': 'span 7 / span 7',\n      'span-8': 'span 8 / span 8',\n      'span-9': 'span 9 / span 9',\n      'span-10': 'span 10 / span 10',\n      'span-11': 'span 11 / span 11',\n      'span-12': 'span 12 / span 12',\n      'span-full': '1 / -1',\n    },\n    gridColumnEnd: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridColumnStart: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridRow: {\n      auto: 'auto',\n      'span-1': 'span 1 / span 1',\n      'span-2': 'span 2 / span 2',\n      'span-3': 'span 3 / span 3',\n      'span-4': 'span 4 / span 4',\n      'span-5': 'span 5 / span 5',\n      'span-6': 'span 6 / span 6',\n      'span-7': 'span 7 / span 7',\n      'span-8': 'span 8 / span 8',\n      'span-9': 'span 9 / span 9',\n      'span-10': 'span 10 / span 10',\n      'span-11': 'span 11 / span 11',\n      'span-12': 'span 12 / span 12',\n      'span-full': '1 / -1',\n    },\n    gridRowEnd: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridRowStart: {\n      auto: 'auto',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n      13: '13',\n    },\n    gridTemplateColumns: {\n      none: 'none',\n      subgrid: 'subgrid',\n      1: 'repeat(1, minmax(0, 1fr))',\n      2: 'repeat(2, minmax(0, 1fr))',\n      3: 'repeat(3, minmax(0, 1fr))',\n      4: 'repeat(4, minmax(0, 1fr))',\n      5: 'repeat(5, minmax(0, 1fr))',\n      6: 'repeat(6, minmax(0, 1fr))',\n      7: 'repeat(7, minmax(0, 1fr))',\n      8: 'repeat(8, minmax(0, 1fr))',\n      9: 'repeat(9, minmax(0, 1fr))',\n      10: 'repeat(10, minmax(0, 1fr))',\n      11: 'repeat(11, minmax(0, 1fr))',\n      12: 'repeat(12, minmax(0, 1fr))',\n    },\n    gridTemplateRows: {\n      none: 'none',\n      subgrid: 'subgrid',\n      1: 'repeat(1, minmax(0, 1fr))',\n      2: 'repeat(2, minmax(0, 1fr))',\n      3: 'repeat(3, minmax(0, 1fr))',\n      4: 'repeat(4, minmax(0, 1fr))',\n      5: 'repeat(5, minmax(0, 1fr))',\n      6: 'repeat(6, minmax(0, 1fr))',\n      7: 'repeat(7, minmax(0, 1fr))',\n      8: 'repeat(8, minmax(0, 1fr))',\n      9: 'repeat(9, minmax(0, 1fr))',\n      10: 'repeat(10, minmax(0, 1fr))',\n      11: 'repeat(11, minmax(0, 1fr))',\n      12: 'repeat(12, minmax(0, 1fr))',\n    },\n    height: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      full: '100%',\n      screen: '100vh',\n      svh: '100svh',\n      lvh: '100lvh',\n      dvh: '100dvh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    hueRotate: {\n      0: '0deg',\n      15: '15deg',\n      30: '30deg',\n      60: '60deg',\n      90: '90deg',\n      180: '180deg',\n    },\n    inset: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      full: '100%',\n    }),\n    invert: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    keyframes: {\n      spin: {\n        to: {\n          transform: 'rotate(360deg)',\n        },\n      },\n      ping: {\n        '75%, 100%': {\n          transform: 'scale(2)',\n          opacity: '0',\n        },\n      },\n      pulse: {\n        '50%': {\n          opacity: '.5',\n        },\n      },\n      bounce: {\n        '0%, 100%': {\n          transform: 'translateY(-25%)',\n          animationTimingFunction: 'cubic-bezier(0.8,0,1,1)',\n        },\n        '50%': {\n          transform: 'none',\n          animationTimingFunction: 'cubic-bezier(0,0,0.2,1)',\n        },\n      },\n    },\n    letterSpacing: {\n      tighter: '-0.05em',\n      tight: '-0.025em',\n      normal: '0em',\n      wide: '0.025em',\n      wider: '0.05em',\n      widest: '0.1em',\n    },\n    lineHeight: {\n      none: '1',\n      tight: '1.25',\n      snug: '1.375',\n      normal: '1.5',\n      relaxed: '1.625',\n      loose: '2',\n      3: '.75rem',\n      4: '1rem',\n      5: '1.25rem',\n      6: '1.5rem',\n      7: '1.75rem',\n      8: '2rem',\n      9: '2.25rem',\n      10: '2.5rem',\n    },\n    listStyleType: {\n      none: 'none',\n      disc: 'disc',\n      decimal: 'decimal',\n    },\n    listStyleImage: {\n      none: 'none',\n    },\n    margin: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n    }),\n    lineClamp: {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n    },\n    maxHeight: ({ theme }) => ({\n      ...theme('spacing'),\n      none: 'none',\n      full: '100%',\n      screen: '100vh',\n      svh: '100svh',\n      lvh: '100lvh',\n      dvh: '100dvh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    maxWidth: ({ theme, breakpoints }) => ({\n      ...theme('spacing'),\n      none: 'none',\n      xs: '20rem',\n      sm: '24rem',\n      md: '28rem',\n      lg: '32rem',\n      xl: '36rem',\n      '2xl': '42rem',\n      '3xl': '48rem',\n      '4xl': '56rem',\n      '5xl': '64rem',\n      '6xl': '72rem',\n      '7xl': '80rem',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n      prose: '65ch',\n      ...breakpoints(theme('screens')),\n    }),\n    minHeight: ({ theme }) => ({\n      ...theme('spacing'),\n      full: '100%',\n      screen: '100vh',\n      svh: '100svh',\n      lvh: '100lvh',\n      dvh: '100dvh',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    minWidth: ({ theme }) => ({\n      ...theme('spacing'),\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    objectPosition: {\n      bottom: 'bottom',\n      center: 'center',\n      left: 'left',\n      'left-bottom': 'left bottom',\n      'left-top': 'left top',\n      right: 'right',\n      'right-bottom': 'right bottom',\n      'right-top': 'right top',\n      top: 'top',\n    },\n    opacity: {\n      0: '0',\n      5: '0.05',\n      10: '0.1',\n      15: '0.15',\n      20: '0.2',\n      25: '0.25',\n      30: '0.3',\n      35: '0.35',\n      40: '0.4',\n      45: '0.45',\n      50: '0.5',\n      55: '0.55',\n      60: '0.6',\n      65: '0.65',\n      70: '0.7',\n      75: '0.75',\n      80: '0.8',\n      85: '0.85',\n      90: '0.9',\n      95: '0.95',\n      100: '1',\n    },\n    order: {\n      first: '-9999',\n      last: '9999',\n      none: '0',\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5',\n      6: '6',\n      7: '7',\n      8: '8',\n      9: '9',\n      10: '10',\n      11: '11',\n      12: '12',\n    },\n    outlineColor: ({ theme }) => theme('colors'),\n    outlineOffset: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    outlineWidth: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    padding: ({ theme }) => theme('spacing'),\n    placeholderColor: ({ theme }) => theme('colors'),\n    placeholderOpacity: ({ theme }) => theme('opacity'),\n    ringColor: ({ theme }) => ({\n      DEFAULT: theme('colors.blue.500', '#3b82f6'),\n      ...theme('colors'),\n    }),\n    ringOffsetColor: ({ theme }) => theme('colors'),\n    ringOffsetWidth: {\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    ringOpacity: ({ theme }) => ({\n      DEFAULT: '0.5',\n      ...theme('opacity'),\n    }),\n    ringWidth: {\n      DEFAULT: '3px',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    rotate: {\n      0: '0deg',\n      1: '1deg',\n      2: '2deg',\n      3: '3deg',\n      6: '6deg',\n      12: '12deg',\n      45: '45deg',\n      90: '90deg',\n      180: '180deg',\n    },\n    saturate: {\n      0: '0',\n      50: '.5',\n      100: '1',\n      150: '1.5',\n      200: '2',\n    },\n    scale: {\n      0: '0',\n      50: '.5',\n      75: '.75',\n      90: '.9',\n      95: '.95',\n      100: '1',\n      105: '1.05',\n      110: '1.1',\n      125: '1.25',\n      150: '1.5',\n    },\n    screens: {\n      sm: '640px',\n      md: '768px',\n      lg: '1024px',\n      xl: '1280px',\n      '2xl': '1536px',\n    },\n    scrollMargin: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    scrollPadding: ({ theme }) => theme('spacing'),\n    sepia: {\n      0: '0',\n      DEFAULT: '100%',\n    },\n    skew: {\n      0: '0deg',\n      1: '1deg',\n      2: '2deg',\n      3: '3deg',\n      6: '6deg',\n      12: '12deg',\n    },\n    space: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    spacing: {\n      px: '1px',\n      0: '0px',\n      0.5: '0.125rem',\n      1: '0.25rem',\n      1.5: '0.375rem',\n      2: '0.5rem',\n      2.5: '0.625rem',\n      3: '0.75rem',\n      3.5: '0.875rem',\n      4: '1rem',\n      5: '1.25rem',\n      6: '1.5rem',\n      7: '1.75rem',\n      8: '2rem',\n      9: '2.25rem',\n      10: '2.5rem',\n      11: '2.75rem',\n      12: '3rem',\n      14: '3.5rem',\n      16: '4rem',\n      20: '5rem',\n      24: '6rem',\n      28: '7rem',\n      32: '8rem',\n      36: '9rem',\n      40: '10rem',\n      44: '11rem',\n      48: '12rem',\n      52: '13rem',\n      56: '14rem',\n      60: '15rem',\n      64: '16rem',\n      72: '18rem',\n      80: '20rem',\n      96: '24rem',\n    },\n    stroke: ({ theme }) => ({\n      none: 'none',\n      ...theme('colors'),\n    }),\n    strokeWidth: {\n      0: '0',\n      1: '1',\n      2: '2',\n    },\n    supports: {},\n    data: {},\n    textColor: ({ theme }) => theme('colors'),\n    textDecorationColor: ({ theme }) => theme('colors'),\n    textDecorationThickness: {\n      auto: 'auto',\n      'from-font': 'from-font',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    textIndent: ({ theme }) => ({\n      ...theme('spacing'),\n    }),\n    textOpacity: ({ theme }) => theme('opacity'),\n    textUnderlineOffset: {\n      auto: 'auto',\n      0: '0px',\n      1: '1px',\n      2: '2px',\n      4: '4px',\n      8: '8px',\n    },\n    transformOrigin: {\n      center: 'center',\n      top: 'top',\n      'top-right': 'top right',\n      right: 'right',\n      'bottom-right': 'bottom right',\n      bottom: 'bottom',\n      'bottom-left': 'bottom left',\n      left: 'left',\n      'top-left': 'top left',\n    },\n    transitionDelay: {\n      0: '0s',\n      75: '75ms',\n      100: '100ms',\n      150: '150ms',\n      200: '200ms',\n      300: '300ms',\n      500: '500ms',\n      700: '700ms',\n      1000: '1000ms',\n    },\n    transitionDuration: {\n      DEFAULT: '150ms',\n      0: '0s',\n      75: '75ms',\n      100: '100ms',\n      150: '150ms',\n      200: '200ms',\n      300: '300ms',\n      500: '500ms',\n      700: '700ms',\n      1000: '1000ms',\n    },\n    transitionProperty: {\n      none: 'none',\n      all: 'all',\n      DEFAULT:\n        'color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter',\n      colors: 'color, background-color, border-color, text-decoration-color, fill, stroke',\n      opacity: 'opacity',\n      shadow: 'box-shadow',\n      transform: 'transform',\n    },\n    transitionTimingFunction: {\n      DEFAULT: 'cubic-bezier(0.4, 0, 0.2, 1)',\n      linear: 'linear',\n      in: 'cubic-bezier(0.4, 0, 1, 1)',\n      out: 'cubic-bezier(0, 0, 0.2, 1)',\n      'in-out': 'cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n    translate: ({ theme }) => ({\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      full: '100%',\n    }),\n    size: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      '1/12': '8.333333%',\n      '2/12': '16.666667%',\n      '3/12': '25%',\n      '4/12': '33.333333%',\n      '5/12': '41.666667%',\n      '6/12': '50%',\n      '7/12': '58.333333%',\n      '8/12': '66.666667%',\n      '9/12': '75%',\n      '10/12': '83.333333%',\n      '11/12': '91.666667%',\n      full: '100%',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    width: ({ theme }) => ({\n      auto: 'auto',\n      ...theme('spacing'),\n      '1/2': '50%',\n      '1/3': '33.333333%',\n      '2/3': '66.666667%',\n      '1/4': '25%',\n      '2/4': '50%',\n      '3/4': '75%',\n      '1/5': '20%',\n      '2/5': '40%',\n      '3/5': '60%',\n      '4/5': '80%',\n      '1/6': '16.666667%',\n      '2/6': '33.333333%',\n      '3/6': '50%',\n      '4/6': '66.666667%',\n      '5/6': '83.333333%',\n      '1/12': '8.333333%',\n      '2/12': '16.666667%',\n      '3/12': '25%',\n      '4/12': '33.333333%',\n      '5/12': '41.666667%',\n      '6/12': '50%',\n      '7/12': '58.333333%',\n      '8/12': '66.666667%',\n      '9/12': '75%',\n      '10/12': '83.333333%',\n      '11/12': '91.666667%',\n      full: '100%',\n      screen: '100vw',\n      svw: '100svw',\n      lvw: '100lvw',\n      dvw: '100dvw',\n      min: 'min-content',\n      max: 'max-content',\n      fit: 'fit-content',\n    }),\n    willChange: {\n      auto: 'auto',\n      scroll: 'scroll-position',\n      contents: 'contents',\n      transform: 'transform',\n    },\n    zIndex: {\n      auto: 'auto',\n      0: '0',\n      10: '10',\n      20: '20',\n      30: '30',\n      40: '40',\n      50: '50',\n    },\n  },\n  plugins: [],\n}\n", "import postcss from 'postcss';\nimport processTailwindFeatures from 'tailwindcss/src/processTailwindFeatures.js';\nimport resolveConfig from 'tailwindcss/src/public/resolve-config.js';\n\nexport const createTailwindcss: typeof import('..').createTailwindcss = (\n  { tailwindConfig } = {},\n) => {\n\n  let currentTailwindConfig = tailwindConfig;\n\n  return {\n    setTailwindConfig(newTailwindConfig) {\n      currentTailwindConfig = newTailwindConfig;\n    },\n\n    async generateStylesFromContent(css, content) {\n      const tailwindcssPlugin = createTailwindcssPlugin({ tailwindConfig: currentTailwindConfig, content });\n      const processor = postcss([tailwindcssPlugin]);\n      const result = await processor.process(css, { from: undefined });\n      return result.css;\n    }\n  }\n};\n\nexport const createTailwindcssPlugin: typeof import('..').createTailwindcssPlugin = ({ tailwindConfig, content: contentCollection }) => {\n  const config = resolveConfig(tailwindConfig ?? {});\n  const tailwindcssPlugin = processTailwindFeatures(\n    (processOptions) => () => processOptions.createContext(\n      config,\n      contentCollection.map((content) => (typeof content === 'string' ? { content } : content))\n    ),\n  );\n  return tailwindcssPlugin;\n}\n\nexport const jitBrowserTailwindcss: typeof import('..').default = (tailwindMainCss, jitContent, userTailwindConfig = {}) => {\n  const tailwindcss = createTailwindcss({tailwindConfig: userTailwindConfig})\n  return tailwindcss.generateStylesFromContent(tailwindMainCss, [jitContent])\n}\n\nexport default jitBrowserTailwindcss;\n", "// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function log(): void {}\n\nexport function dim(input: string): string {\n  return input;\n}\n\nexport default {\n  info: log,\n  warn: log,\n  risk: log,\n};\n", "import log from '../util/log'\n\nexport default function normalizeTailwindDirectives(root) {\n  let tailwindDirectives = new Set()\n  let layerDirectives = new Set()\n  let applyDirectives = new Set()\n\n  root.walkAtRules((atRule) => {\n    if (atRule.name === 'apply') {\n      applyDirectives.add(atRule)\n    }\n\n    if (atRule.name === 'import') {\n      if (atRule.params === '\"tailwindcss/base\"' || atRule.params === \"'tailwindcss/base'\") {\n        atRule.name = 'tailwind'\n        atRule.params = 'base'\n      } else if (\n        atRule.params === '\"tailwindcss/components\"' ||\n        atRule.params === \"'tailwindcss/components'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'components'\n      } else if (\n        atRule.params === '\"tailwindcss/utilities\"' ||\n        atRule.params === \"'tailwindcss/utilities'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'utilities'\n      } else if (\n        atRule.params === '\"tailwindcss/screens\"' ||\n        atRule.params === \"'tailwindcss/screens'\" ||\n        atRule.params === '\"tailwindcss/variants\"' ||\n        atRule.params === \"'tailwindcss/variants'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'variants'\n      }\n    }\n\n    if (atRule.name === 'tailwind') {\n      if (atRule.params === 'screens') {\n        atRule.params = 'variants'\n      }\n      tailwindDirectives.add(atRule.params)\n    }\n\n    if (['layer', 'responsive', 'variants'].includes(atRule.name)) {\n      if (['responsive', 'variants'].includes(atRule.name)) {\n        log.warn(`${atRule.name}-at-rule-deprecated`, [\n          `The \\`@${atRule.name}\\` directive has been deprecated in Tailwind CSS v3.0.`,\n          `Use \\`@layer utilities\\` or \\`@layer components\\` instead.`,\n          'https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer',\n        ])\n      }\n      layerDirectives.add(atRule)\n    }\n  })\n\n  if (\n    !tailwindDirectives.has('base') ||\n    !tailwindDirectives.has('components') ||\n    !tailwindDirectives.has('utilities')\n  ) {\n    for (let rule of layerDirectives) {\n      if (rule.name === 'layer' && ['base', 'components', 'utilities'].includes(rule.params)) {\n        if (!tailwindDirectives.has(rule.params)) {\n          throw rule.error(\n            `\\`@layer ${rule.params}\\` is used but no matching \\`@tailwind ${rule.params}\\` directive is present.`\n          )\n        }\n      } else if (rule.name === 'responsive') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@responsive` is used but `@tailwind utilities` is missing.')\n        }\n      } else if (rule.name === 'variants') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@variants` is used but `@tailwind utilities` is missing.')\n        }\n      }\n    }\n  }\n\n  return { tailwindDirectives, applyDirectives }\n}\n", "import preflight from 'tailwindcss/src/css/preflight.css';\n\nexport default {\n  // Reading the preflight CSS is the only use of fs at the moment of writing.\n  readFileSync: () => preflight,\n};\n", "import fs from 'fs'\nimport LRU from '@alloc/quick-lru'\nimport * as sharedState from './sharedState'\nimport { generateRules } from './generateRules'\nimport log from '../util/log'\nimport cloneNodes from '../util/cloneNodes'\nimport { defaultExtractor } from './defaultExtractor'\n\nlet env = sharedState.env\n\nconst builtInExtractors = {\n  DEFAULT: defaultExtractor,\n}\n\nconst builtInTransformers = {\n  DEFAULT: (content) => content,\n  svelte: (content) => content.replace(/(?:^|\\s)class:/g, ' '),\n}\n\nfunction getExtractor(context, fileExtension) {\n  let extractors = context.tailwindConfig.content.extract\n\n  return (\n    extractors[fileExtension] ||\n    extractors.DEFAULT ||\n    builtInExtractors[fileExtension] ||\n    builtInExtractors.DEFAULT(context)\n  )\n}\n\nfunction getTransformer(tailwindConfig, fileExtension) {\n  let transformers = tailwindConfig.content.transform\n\n  return (\n    transformers[fileExtension] ||\n    transformers.DEFAULT ||\n    builtInTransformers[fileExtension] ||\n    builtInTransformers.DEFAULT\n  )\n}\n\nlet extractorCache = new WeakMap()\n\n// Scans template contents for possible classes. This is a hot path on initial build but\n// not too important for subsequent builds. The faster the better though \u2014 if we can speed\n// up these regexes by 50% that could cut initial build time by like 20%.\nfunction getClassCandidates(content, extractor, candidates, seen) {\n  if (!extractorCache.has(extractor)) {\n    extractorCache.set(extractor, new LRU({ maxSize: 25000 }))\n  }\n\n  for (let line of content.split('\\n')) {\n    line = line.trim()\n\n    if (seen.has(line)) {\n      continue\n    }\n    seen.add(line)\n\n    if (extractorCache.get(extractor).has(line)) {\n      for (let match of extractorCache.get(extractor).get(line)) {\n        candidates.add(match)\n      }\n    } else {\n      let extractorMatches = extractor(line).filter((s) => s !== '!*')\n      let lineMatchesSet = new Set(extractorMatches)\n\n      for (let match of lineMatchesSet) {\n        candidates.add(match)\n      }\n\n      extractorCache.get(extractor).set(line, lineMatchesSet)\n    }\n  }\n}\n\n/**\n *\n * @param {[import('./offsets.js').RuleOffset, import('postcss').Node][]} rules\n * @param {*} context\n */\nfunction buildStylesheet(rules, context) {\n  let sortedRules = context.offsets.sort(rules)\n\n  let returnValue = {\n    base: new Set(),\n    defaults: new Set(),\n    components: new Set(),\n    utilities: new Set(),\n    variants: new Set(),\n  }\n\n  for (let [sort, rule] of sortedRules) {\n    returnValue[sort.layer].add(rule)\n  }\n\n  return returnValue\n}\n\nexport default function expandTailwindAtRules(context) {\n  return async (root) => {\n    let layerNodes = {\n      base: null,\n      components: null,\n      utilities: null,\n      variants: null,\n    }\n\n    root.walkAtRules((rule) => {\n      // Make sure this file contains Tailwind directives. If not, we can save\n      // a lot of work and bail early. Also we don't have to register our touch\n      // file as a dependency since the output of this CSS does not depend on\n      // the source of any templates. Think Vue <style> blocks for example.\n      if (rule.name === 'tailwind') {\n        if (Object.keys(layerNodes).includes(rule.params)) {\n          layerNodes[rule.params] = rule\n        }\n      }\n    })\n\n    if (Object.values(layerNodes).every((n) => n === null)) {\n      return root\n    }\n\n    // ---\n\n    // Find potential rules in changed files\n    let candidates = new Set([...(context.candidates ?? []), sharedState.NOT_ON_DEMAND])\n    let seen = new Set()\n\n    env.DEBUG && console.time('Reading changed files')\n\n    if (__OXIDE__) {\n      // TODO: Pass through or implement `extractor`\n      for (let candidate of require('@tailwindcss/oxide').parseCandidateStringsFromFiles(\n        context.changedContent\n        // Object.assign({}, builtInTransformers, context.tailwindConfig.content.transform)\n      )) {\n        candidates.add(candidate)\n      }\n\n      // for (let { file, content, extension } of context.changedContent) {\n      //   let transformer = getTransformer(context.tailwindConfig, extension)\n      //   let extractor = getExtractor(context, extension)\n      //   getClassCandidatesOxide(file, transformer(content), extractor, candidates, seen)\n      // }\n    } else {\n      /** @type {[item: {file?: string, content?: string}, meta: {transformer: any, extractor: any}][]} */\n      let regexParserContent = []\n\n      for (let item of context.changedContent) {\n        let transformer = getTransformer(context.tailwindConfig, item.extension)\n        let extractor = getExtractor(context, item.extension)\n        regexParserContent.push([item, { transformer, extractor }])\n      }\n\n      const BATCH_SIZE = 500\n\n      for (let i = 0; i < regexParserContent.length; i += BATCH_SIZE) {\n        let batch = regexParserContent.slice(i, i + BATCH_SIZE)\n        await Promise.all(\n          batch.map(async ([{ file, content }, { transformer, extractor }]) => {\n            content = file ? await fs.promises.readFile(file, 'utf8') : content\n            getClassCandidates(transformer(content), extractor, candidates, seen)\n          })\n        )\n      }\n    }\n\n    env.DEBUG && console.timeEnd('Reading changed files')\n\n    // ---\n\n    // Generate the actual CSS\n    let classCacheCount = context.classCache.size\n\n    env.DEBUG && console.time('Generate rules')\n    env.DEBUG && console.time('Sorting candidates')\n    let sortedCandidates = __OXIDE__\n      ? candidates\n      : new Set(\n          [...candidates].sort((a, z) => {\n            if (a === z) return 0\n            if (a < z) return -1\n            return 1\n          })\n        )\n    env.DEBUG && console.timeEnd('Sorting candidates')\n    generateRules(sortedCandidates, context)\n    env.DEBUG && console.timeEnd('Generate rules')\n\n    // We only ever add to the classCache, so if it didn't grow, there is nothing new.\n    env.DEBUG && console.time('Build stylesheet')\n    if (context.stylesheetCache === null || context.classCache.size !== classCacheCount) {\n      context.stylesheetCache = buildStylesheet([...context.ruleCache], context)\n    }\n    env.DEBUG && console.timeEnd('Build stylesheet')\n\n    let {\n      defaults: defaultNodes,\n      base: baseNodes,\n      components: componentNodes,\n      utilities: utilityNodes,\n      variants: screenNodes,\n    } = context.stylesheetCache\n\n    // ---\n\n    // Replace any Tailwind directives with generated CSS\n\n    if (layerNodes.base) {\n      layerNodes.base.before(\n        cloneNodes([...baseNodes, ...defaultNodes], layerNodes.base.source, {\n          layer: 'base',\n        })\n      )\n      layerNodes.base.remove()\n    }\n\n    if (layerNodes.components) {\n      layerNodes.components.before(\n        cloneNodes([...componentNodes], layerNodes.components.source, {\n          layer: 'components',\n        })\n      )\n      layerNodes.components.remove()\n    }\n\n    if (layerNodes.utilities) {\n      layerNodes.utilities.before(\n        cloneNodes([...utilityNodes], layerNodes.utilities.source, {\n          layer: 'utilities',\n        })\n      )\n      layerNodes.utilities.remove()\n    }\n\n    // We do post-filtering to not alter the emitted order of the variants\n    const variantNodes = Array.from(screenNodes).filter((node) => {\n      const parentLayer = node.raws.tailwind?.parentLayer\n\n      if (parentLayer === 'components') {\n        return layerNodes.components !== null\n      }\n\n      if (parentLayer === 'utilities') {\n        return layerNodes.utilities !== null\n      }\n\n      return true\n    })\n\n    if (layerNodes.variants) {\n      layerNodes.variants.before(\n        cloneNodes(variantNodes, layerNodes.variants.source, {\n          layer: 'variants',\n        })\n      )\n      layerNodes.variants.remove()\n    } else if (variantNodes.length > 0) {\n      root.append(\n        cloneNodes(variantNodes, root.source, {\n          layer: 'variants',\n        })\n      )\n    }\n\n    // TODO: Why is the root node having no source location for `end` possible?\n    root.source.end = root.source.end ?? root.source.start\n\n    // If we've got a utility layer and no utilities are generated there's likely something wrong\n    const hasUtilityVariants = variantNodes.some(\n      (node) => node.raws.tailwind?.parentLayer === 'utilities'\n    )\n\n    if (layerNodes.utilities && utilityNodes.size === 0 && !hasUtilityVariants) {\n      log.warn('content-problems', [\n        'No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.',\n        'https://tailwindcss.com/docs/content-configuration',\n      ])\n    }\n\n    // ---\n\n    if (env.DEBUG) {\n      console.log('Potential classes: ', candidates.size)\n      console.log('Active contexts: ', sharedState.contextSourcesMap.size)\n    }\n\n    // Clear the cache for the changed files\n    context.changedContent = []\n\n    // Cleanup any leftover @layer atrules\n    root.walkAtRules('layer', (rule) => {\n      if (Object.keys(layerNodes).includes(rule.params)) {\n        rule.remove()\n      }\n    })\n  }\n}\n", "import pkg from '../../package.json'\n\nexport const env =\n  typeof process !== 'undefined'\n    ? {\n        NODE_ENV: process.env.NODE_ENV,\n        DEBUG: resolveDebug(process.env.DEBUG),\n        ENGINE: pkg.tailwindcss.engine,\n      }\n    : {\n        NODE_ENV: 'production',\n        DEBUG: false,\n        ENGINE: pkg.tailwindcss.engine,\n      }\n\nexport const contextMap = new Map()\nexport const configContextMap = new Map()\nexport const contextSourcesMap = new Map()\nexport const sourceHashMap = new Map()\nexport const NOT_ON_DEMAND = new String('*')\n\nexport const NONE = Symbol('__NONE__')\n\nexport function resolveDebug(debug) {\n  if (debug === undefined) {\n    return false\n  }\n\n  // Environment variables are strings, so convert to boolean\n  if (debug === 'true' || debug === '1') {\n    return true\n  }\n\n  if (debug === 'false' || debug === '0') {\n    return false\n  }\n\n  // Keep the debug convention into account:\n  // DEBUG=* -> This enables all debug modes\n  // DEBUG=projectA,projectB,projectC -> This enables debug for projectA, projectB and projectC\n  // DEBUG=projectA:* -> This enables all debug modes for projectA (if you have sub-types)\n  // DEBUG=projectA,-projectB -> This enables debug for projectA and explicitly disables it for projectB\n\n  if (debug === '*') {\n    return true\n  }\n\n  let debuggers = debug.split(',').map((d) => d.split(':')[0])\n\n  // Ignoring tailwindcss\n  if (debuggers.includes('-tailwindcss')) {\n    return false\n  }\n\n  // Including tailwindcss\n  if (debuggers.includes('tailwindcss')) {\n    return true\n  }\n\n  return false\n}\n", "import postcss from 'postcss'\nimport selectorParser from 'postcss-selector-parser'\nimport parseObjectStyles from '../util/parseObjectStyles'\nimport isPlainObject from '../util/isPlainObject'\nimport prefixSelector from '../util/prefixSelector'\nimport { updateAllClasses, getMatchingTypes } from '../util/pluginUtils'\nimport log from '../util/log'\nimport * as sharedState from './sharedState'\nimport {\n  formatVariantSelector,\n  finalizeSelector,\n  eliminateIrrelevantSelectors,\n} from '../util/formatVariantSelector'\nimport { asClass } from '../util/nameClass'\nimport { normalize } from '../util/dataTypes'\nimport { isValidVariantFormatString, parseVariant, INTERNAL_FEATURES } from './setupContextUtils'\nimport isValidArbitraryValue from '../util/isSyntacticallyValidPropertyValue'\nimport { splitAtTopLevelOnly } from '../util/splitAtTopLevelOnly.js'\nimport { flagEnabled } from '../featureFlags'\nimport { applyImportantSelector } from '../util/applyImportantSelector'\n\nlet classNameParser = selectorParser((selectors) => {\n  return selectors.first.filter(({ type }) => type === 'class').pop().value\n})\n\nexport function getClassNameFromSelector(selector) {\n  return classNameParser.transformSync(selector)\n}\n\n// Generate match permutations for a class candidate, like:\n// ['ring-offset-blue', '100']\n// ['ring-offset', 'blue-100']\n// ['ring', 'offset-blue-100']\n// Example with dynamic classes:\n// ['grid-cols', '[[linename],1fr,auto]']\n// ['grid', 'cols-[[linename],1fr,auto]']\nfunction* candidatePermutations(candidate) {\n  let lastIndex = Infinity\n\n  while (lastIndex >= 0) {\n    let dashIdx\n    let wasSlash = false\n\n    if (lastIndex === Infinity && candidate.endsWith(']')) {\n      let bracketIdx = candidate.indexOf('[')\n\n      // If character before `[` isn't a dash or a slash, this isn't a dynamic class\n      // eg. string[]\n      if (candidate[bracketIdx - 1] === '-') {\n        dashIdx = bracketIdx - 1\n      } else if (candidate[bracketIdx - 1] === '/') {\n        dashIdx = bracketIdx - 1\n        wasSlash = true\n      } else {\n        dashIdx = -1\n      }\n    } else if (lastIndex === Infinity && candidate.includes('/')) {\n      dashIdx = candidate.lastIndexOf('/')\n      wasSlash = true\n    } else {\n      dashIdx = candidate.lastIndexOf('-', lastIndex)\n    }\n\n    if (dashIdx < 0) {\n      break\n    }\n\n    let prefix = candidate.slice(0, dashIdx)\n    let modifier = candidate.slice(wasSlash ? dashIdx : dashIdx + 1)\n\n    lastIndex = dashIdx - 1\n\n    // TODO: This feels a bit hacky\n    if (prefix === '' || modifier === '/') {\n      continue\n    }\n\n    yield [prefix, modifier]\n  }\n}\n\nfunction applyPrefix(matches, context) {\n  if (matches.length === 0 || context.tailwindConfig.prefix === '') {\n    return matches\n  }\n\n  for (let match of matches) {\n    let [meta] = match\n    if (meta.options.respectPrefix) {\n      let container = postcss.root({ nodes: [match[1].clone()] })\n      let classCandidate = match[1].raws.tailwind.classCandidate\n\n      container.walkRules((r) => {\n        // If this is a negative utility with a dash *before* the prefix we\n        // have to ensure that the generated selector matches the candidate\n\n        // Not doing this will cause `-tw-top-1` to generate the class `.tw--top-1`\n        // The disconnect between candidate <-> class can cause @apply to hard crash.\n        let shouldPrependNegative = classCandidate.startsWith('-')\n\n        r.selector = prefixSelector(\n          context.tailwindConfig.prefix,\n          r.selector,\n          shouldPrependNegative\n        )\n      })\n\n      match[1] = container.nodes[0]\n    }\n  }\n\n  return matches\n}\n\nfunction applyImportant(matches, classCandidate) {\n  if (matches.length === 0) {\n    return matches\n  }\n\n  let result = []\n\n  function isInKeyframes(rule) {\n    return rule.parent && rule.parent.type === 'atrule' && rule.parent.name === 'keyframes'\n  }\n\n  for (let [meta, rule] of matches) {\n    let container = postcss.root({ nodes: [rule.clone()] })\n\n    container.walkRules((r) => {\n      // Declarations inside keyframes cannot be marked as important\n      // They will be ignored by the browser\n      if (isInKeyframes(r)) {\n        return\n      }\n\n      let ast = selectorParser().astSync(r.selector)\n\n      // Remove extraneous selectors that do not include the base candidate\n      ast.each((sel) => eliminateIrrelevantSelectors(sel, classCandidate))\n\n      // Update all instances of the base candidate to include the important marker\n      updateAllClasses(ast, (className) =>\n        className === classCandidate ? `!${className}` : className\n      )\n\n      r.selector = ast.toString()\n\n      r.walkDecls((d) => (d.important = true))\n    })\n\n    result.push([{ ...meta, important: true }, container.nodes[0]])\n  }\n\n  return result\n}\n\n// Takes a list of rule tuples and applies a variant like `hover`, sm`,\n// whatever to it. We used to do some extra caching here to avoid generating\n// a variant of the same rule more than once, but this was never hit because\n// we cache at the entire selector level further up the tree.\n//\n// Technically you can get a cache hit if you have `hover:focus:text-center`\n// and `focus:hover:text-center` in the same project, but it doesn't feel\n// worth the complexity for that case.\n\nfunction applyVariant(variant, matches, context) {\n  if (matches.length === 0) {\n    return matches\n  }\n\n  /** @type {{modifier: string | null, value: string | null}} */\n  let args = { modifier: null, value: sharedState.NONE }\n\n  // Retrieve \"modifier\"\n  {\n    let [baseVariant, ...modifiers] = splitAtTopLevelOnly(variant, '/')\n\n    // This is a hack to support variants with `/` in them, like `ar-1/10/20:text-red-500`\n    // In this case 1/10 is a value but /20 is a modifier\n    if (modifiers.length > 1) {\n      baseVariant = baseVariant + '/' + modifiers.slice(0, -1).join('/')\n      modifiers = modifiers.slice(-1)\n    }\n\n    if (modifiers.length && !context.variantMap.has(variant)) {\n      variant = baseVariant\n      args.modifier = modifiers[0]\n\n      if (!flagEnabled(context.tailwindConfig, 'generalizedModifiers')) {\n        return []\n      }\n    }\n  }\n\n  // Retrieve \"arbitrary value\"\n  if (variant.endsWith(']') && !variant.startsWith('[')) {\n    // We either have:\n    //   @[200px]\n    //   group-[:hover]\n    //\n    // But we don't want:\n    //   @-[200px]        (`-` is incorrect)\n    //   group[:hover]    (`-` is missing)\n    let match = /(.)(-?)\\[(.*)\\]/g.exec(variant)\n    if (match) {\n      let [, char, separator, value] = match\n      // @-[200px] case\n      if (char === '@' && separator === '-') return []\n      // group[:hover] case\n      if (char !== '@' && separator === '') return []\n\n      variant = variant.replace(`${separator}[${value}]`, '')\n      args.value = value\n    }\n  }\n\n  // Register arbitrary variants\n  if (isArbitraryValue(variant) && !context.variantMap.has(variant)) {\n    let sort = context.offsets.recordVariant(variant)\n\n    let selector = normalize(variant.slice(1, -1))\n    let selectors = splitAtTopLevelOnly(selector, ',')\n\n    // We do not support multiple selectors for arbitrary variants\n    if (selectors.length > 1) {\n      return []\n    }\n\n    if (!selectors.every(isValidVariantFormatString)) {\n      return []\n    }\n\n    let records = selectors.map((sel, idx) => [\n      context.offsets.applyParallelOffset(sort, idx),\n      parseVariant(sel.trim()),\n    ])\n\n    context.variantMap.set(variant, records)\n  }\n\n  if (context.variantMap.has(variant)) {\n    let isArbitraryVariant = isArbitraryValue(variant)\n    let internalFeatures = context.variantOptions.get(variant)?.[INTERNAL_FEATURES] ?? {}\n    let variantFunctionTuples = context.variantMap.get(variant).slice()\n    let result = []\n\n    let respectPrefix = (() => {\n      if (isArbitraryVariant) return false\n      if (internalFeatures.respectPrefix === false) return false\n      return true\n    })()\n\n    for (let [meta, rule] of matches) {\n      // Don't generate variants for user css\n      if (meta.layer === 'user') {\n        continue\n      }\n\n      let container = postcss.root({ nodes: [rule.clone()] })\n\n      for (let [variantSort, variantFunction, containerFromArray] of variantFunctionTuples) {\n        let clone = (containerFromArray ?? container).clone()\n        let collectedFormats = []\n\n        function prepareBackup() {\n          // Already prepared, chicken out\n          if (clone.raws.neededBackup) {\n            return\n          }\n          clone.raws.neededBackup = true\n          clone.walkRules((rule) => (rule.raws.originalSelector = rule.selector))\n        }\n\n        function modifySelectors(modifierFunction) {\n          prepareBackup()\n          clone.each((rule) => {\n            if (rule.type !== 'rule') {\n              return\n            }\n\n            rule.selectors = rule.selectors.map((selector) => {\n              return modifierFunction({\n                get className() {\n                  return getClassNameFromSelector(selector)\n                },\n                selector,\n              })\n            })\n          })\n\n          return clone\n        }\n\n        let ruleWithVariant = variantFunction({\n          // Public API\n          get container() {\n            prepareBackup()\n            return clone\n          },\n          separator: context.tailwindConfig.separator,\n          modifySelectors,\n\n          // Private API for now\n          wrap(wrapper) {\n            let nodes = clone.nodes\n            clone.removeAll()\n            wrapper.append(nodes)\n            clone.append(wrapper)\n          },\n          format(selectorFormat) {\n            collectedFormats.push({\n              format: selectorFormat,\n              respectPrefix,\n            })\n          },\n          args,\n        })\n\n        // It can happen that a list of format strings is returned from within the function. In that\n        // case, we have to process them as well. We can use the existing `variantSort`.\n        if (Array.isArray(ruleWithVariant)) {\n          for (let [idx, variantFunction] of ruleWithVariant.entries()) {\n            // This is a little bit scary since we are pushing to an array of items that we are\n            // currently looping over. However, you can also think of it like a processing queue\n            // where you keep handling jobs until everything is done and each job can queue more\n            // jobs if needed.\n            variantFunctionTuples.push([\n              context.offsets.applyParallelOffset(variantSort, idx),\n              variantFunction,\n\n              // If the clone has been modified we have to pass that back\n              // though so each rule can use the modified container\n              clone.clone(),\n            ])\n          }\n          continue\n        }\n\n        if (typeof ruleWithVariant === 'string') {\n          collectedFormats.push({\n            format: ruleWithVariant,\n            respectPrefix,\n          })\n        }\n\n        if (ruleWithVariant === null) {\n          continue\n        }\n\n        // We had to backup selectors, therefore we assume that somebody touched\n        // `container` or `modifySelectors`. Let's see if they did, so that we\n        // can restore the selectors, and collect the format strings.\n        if (clone.raws.neededBackup) {\n          delete clone.raws.neededBackup\n          clone.walkRules((rule) => {\n            let before = rule.raws.originalSelector\n            if (!before) return\n            delete rule.raws.originalSelector\n            if (before === rule.selector) return // No mutation happened\n\n            let modified = rule.selector\n\n            // Rebuild the base selector, this is what plugin authors would do\n            // as well. E.g.: `${variant}${separator}${className}`.\n            // However, plugin authors probably also prepend or append certain\n            // classes, pseudos, ids, ...\n            let rebuiltBase = selectorParser((selectors) => {\n              selectors.walkClasses((classNode) => {\n                classNode.value = `${variant}${context.tailwindConfig.separator}${classNode.value}`\n              })\n            }).processSync(before)\n\n            // Now that we know the original selector, the new selector, and\n            // the rebuild part in between, we can replace the part that plugin\n            // authors need to rebuild with `&`, and eventually store it in the\n            // collectedFormats. Similar to what `format('...')` would do.\n            //\n            // E.g.:\n            //                   variant: foo\n            //                  selector: .markdown > p\n            //      modified (by plugin): .foo .foo\\\\:markdown > p\n            //    rebuiltBase (internal): .foo\\\\:markdown > p\n            //                    format: .foo &\n            collectedFormats.push({\n              format: modified.replace(rebuiltBase, '&'),\n              respectPrefix,\n            })\n            rule.selector = before\n          })\n        }\n\n        // This tracks the originating layer for the variant\n        // For example:\n        // .sm:underline {} is a variant of something in the utilities layer\n        // .sm:container {} is a variant of the container component\n        clone.nodes[0].raws.tailwind = { ...clone.nodes[0].raws.tailwind, parentLayer: meta.layer }\n\n        let withOffset = [\n          {\n            ...meta,\n            sort: context.offsets.applyVariantOffset(\n              meta.sort,\n              variantSort,\n              Object.assign(args, context.variantOptions.get(variant))\n            ),\n            collectedFormats: (meta.collectedFormats ?? []).concat(collectedFormats),\n          },\n          clone.nodes[0],\n        ]\n        result.push(withOffset)\n      }\n    }\n\n    return result\n  }\n\n  return []\n}\n\nfunction parseRules(rule, cache, options = {}) {\n  // PostCSS node\n  if (!isPlainObject(rule) && !Array.isArray(rule)) {\n    return [[rule], options]\n  }\n\n  // Tuple\n  if (Array.isArray(rule)) {\n    return parseRules(rule[0], cache, rule[1])\n  }\n\n  // Simple object\n  if (!cache.has(rule)) {\n    cache.set(rule, parseObjectStyles(rule))\n  }\n\n  return [cache.get(rule), options]\n}\n\nconst IS_VALID_PROPERTY_NAME = /^[a-z_-]/\n\nfunction isValidPropName(name) {\n  return IS_VALID_PROPERTY_NAME.test(name)\n}\n\n/**\n * @param {string} declaration\n * @returns {boolean}\n */\nfunction looksLikeUri(declaration) {\n  // Quick bailout for obvious non-urls\n  // This doesn't support schemes that don't use a leading // but that's unlikely to be a problem\n  if (!declaration.includes('://')) {\n    return false\n  }\n\n  try {\n    const url = new URL(declaration)\n    return url.scheme !== '' && url.host !== ''\n  } catch (err) {\n    // Definitely not a valid url\n    return false\n  }\n}\n\nfunction isParsableNode(node) {\n  let isParsable = true\n\n  node.walkDecls((decl) => {\n    if (!isParsableCssValue(decl.prop, decl.value)) {\n      isParsable = false\n      return false\n    }\n  })\n\n  return isParsable\n}\n\nfunction isParsableCssValue(property, value) {\n  // We don't want to to treat [https://example.com] as a custom property\n  // Even though, according to the CSS grammar, it's a totally valid CSS declaration\n  // So we short-circuit here by checking if the custom property looks like a url\n  if (looksLikeUri(`${property}:${value}`)) {\n    return false\n  }\n\n  try {\n    postcss.parse(`a{${property}:${value}}`).toResult()\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\nfunction extractArbitraryProperty(classCandidate, context) {\n  let [, property, value] = classCandidate.match(/^\\[([a-zA-Z0-9-_]+):(\\S+)\\]$/) ?? []\n\n  if (value === undefined) {\n    return null\n  }\n\n  if (!isValidPropName(property)) {\n    return null\n  }\n\n  if (!isValidArbitraryValue(value)) {\n    return null\n  }\n\n  let normalized = normalize(value, { property })\n\n  if (!isParsableCssValue(property, normalized)) {\n    return null\n  }\n\n  let sort = context.offsets.arbitraryProperty()\n\n  return [\n    [\n      { sort, layer: 'utilities' },\n      () => ({\n        [asClass(classCandidate)]: {\n          [property]: normalized,\n        },\n      }),\n    ],\n  ]\n}\n\nfunction* resolveMatchedPlugins(classCandidate, context) {\n  if (context.candidateRuleMap.has(classCandidate)) {\n    yield [context.candidateRuleMap.get(classCandidate), 'DEFAULT']\n  }\n\n  yield* (function* (arbitraryPropertyRule) {\n    if (arbitraryPropertyRule !== null) {\n      yield [arbitraryPropertyRule, 'DEFAULT']\n    }\n  })(extractArbitraryProperty(classCandidate, context))\n\n  let candidatePrefix = classCandidate\n  let negative = false\n\n  const twConfigPrefix = context.tailwindConfig.prefix\n\n  const twConfigPrefixLen = twConfigPrefix.length\n\n  const hasMatchingPrefix =\n    candidatePrefix.startsWith(twConfigPrefix) || candidatePrefix.startsWith(`-${twConfigPrefix}`)\n\n  if (candidatePrefix[twConfigPrefixLen] === '-' && hasMatchingPrefix) {\n    negative = true\n    candidatePrefix = twConfigPrefix + candidatePrefix.slice(twConfigPrefixLen + 1)\n  }\n\n  if (negative && context.candidateRuleMap.has(candidatePrefix)) {\n    yield [context.candidateRuleMap.get(candidatePrefix), '-DEFAULT']\n  }\n\n  for (let [prefix, modifier] of candidatePermutations(candidatePrefix)) {\n    if (context.candidateRuleMap.has(prefix)) {\n      yield [context.candidateRuleMap.get(prefix), negative ? `-${modifier}` : modifier]\n    }\n  }\n}\n\nfunction splitWithSeparator(input, separator) {\n  if (input === sharedState.NOT_ON_DEMAND) {\n    return [sharedState.NOT_ON_DEMAND]\n  }\n\n  return splitAtTopLevelOnly(input, separator)\n}\n\nfunction* recordCandidates(matches, classCandidate) {\n  for (const match of matches) {\n    match[1].raws.tailwind = {\n      ...match[1].raws.tailwind,\n      classCandidate,\n      preserveSource: match[0].options?.preserveSource ?? false,\n    }\n\n    yield match\n  }\n}\n\nfunction* resolveMatches(candidate, context) {\n  let separator = context.tailwindConfig.separator\n  let [classCandidate, ...variants] = splitWithSeparator(candidate, separator).reverse()\n  let important = false\n\n  if (classCandidate.startsWith('!')) {\n    important = true\n    classCandidate = classCandidate.slice(1)\n  }\n\n  // TODO: Reintroduce this in ways that doesn't break on false positives\n  // function sortAgainst(toSort, against) {\n  //   return toSort.slice().sort((a, z) => {\n  //     return bigSign(against.get(a)[0] - against.get(z)[0])\n  //   })\n  // }\n  // let sorted = sortAgainst(variants, context.variantMap)\n  // if (sorted.toString() !== variants.toString()) {\n  //   let corrected = sorted.reverse().concat(classCandidate).join(':')\n  //   throw new Error(`Class ${candidate} should be written as ${corrected}`)\n  // }\n\n  for (let matchedPlugins of resolveMatchedPlugins(classCandidate, context)) {\n    let matches = []\n    let typesByMatches = new Map()\n\n    let [plugins, modifier] = matchedPlugins\n    let isOnlyPlugin = plugins.length === 1\n\n    for (let [sort, plugin] of plugins) {\n      let matchesPerPlugin = []\n\n      if (typeof plugin === 'function') {\n        for (let ruleSet of [].concat(plugin(modifier, { isOnlyPlugin }))) {\n          let [rules, options] = parseRules(ruleSet, context.postCssNodeCache)\n          for (let rule of rules) {\n            matchesPerPlugin.push([{ ...sort, options: { ...sort.options, ...options } }, rule])\n          }\n        }\n      }\n      // Only process static plugins on exact matches\n      else if (modifier === 'DEFAULT' || modifier === '-DEFAULT') {\n        let ruleSet = plugin\n        let [rules, options] = parseRules(ruleSet, context.postCssNodeCache)\n        for (let rule of rules) {\n          matchesPerPlugin.push([{ ...sort, options: { ...sort.options, ...options } }, rule])\n        }\n      }\n\n      if (matchesPerPlugin.length > 0) {\n        let matchingTypes = Array.from(\n          getMatchingTypes(\n            sort.options?.types ?? [],\n            modifier,\n            sort.options ?? {},\n            context.tailwindConfig\n          )\n        ).map(([_, type]) => type)\n\n        if (matchingTypes.length > 0) {\n          typesByMatches.set(matchesPerPlugin, matchingTypes)\n        }\n\n        matches.push(matchesPerPlugin)\n      }\n    }\n\n    if (isArbitraryValue(modifier)) {\n      if (matches.length > 1) {\n        // Partition plugins in 2 categories so that we can start searching in the plugins that\n        // don't have `any` as a type first.\n        let [withAny, withoutAny] = matches.reduce(\n          (group, plugin) => {\n            let hasAnyType = plugin.some(([{ options }]) =>\n              options.types.some(({ type }) => type === 'any')\n            )\n\n            if (hasAnyType) {\n              group[0].push(plugin)\n            } else {\n              group[1].push(plugin)\n            }\n            return group\n          },\n          [[], []]\n        )\n\n        function findFallback(matches) {\n          // If only a single plugin matches, let's take that one\n          if (matches.length === 1) {\n            return matches[0]\n          }\n\n          // Otherwise, find the plugin that creates a valid rule given the arbitrary value, and\n          // also has the correct type which preferOnConflicts the plugin in case of clashes.\n          return matches.find((rules) => {\n            let matchingTypes = typesByMatches.get(rules)\n            return rules.some(([{ options }, rule]) => {\n              if (!isParsableNode(rule)) {\n                return false\n              }\n\n              return options.types.some(\n                ({ type, preferOnConflict }) => matchingTypes.includes(type) && preferOnConflict\n              )\n            })\n          })\n        }\n\n        // Try to find a fallback plugin, because we already know that multiple plugins matched for\n        // the given arbitrary value.\n        let fallback = findFallback(withoutAny) ?? findFallback(withAny)\n        if (fallback) {\n          matches = [fallback]\n        }\n\n        // We couldn't find a fallback plugin which means that there are now multiple plugins that\n        // generated css for the current candidate. This means that the result is ambiguous and this\n        // should not happen. We won't generate anything right now, so let's report this to the user\n        // by logging some options about what they can do.\n        else {\n          let typesPerPlugin = matches.map(\n            (match) => new Set([...(typesByMatches.get(match) ?? [])])\n          )\n\n          // Remove duplicates, so that we can detect proper unique types for each plugin.\n          for (let pluginTypes of typesPerPlugin) {\n            for (let type of pluginTypes) {\n              let removeFromOwnGroup = false\n\n              for (let otherGroup of typesPerPlugin) {\n                if (pluginTypes === otherGroup) continue\n\n                if (otherGroup.has(type)) {\n                  otherGroup.delete(type)\n                  removeFromOwnGroup = true\n                }\n              }\n\n              if (removeFromOwnGroup) pluginTypes.delete(type)\n            }\n          }\n\n          let messages = []\n\n          for (let [idx, group] of typesPerPlugin.entries()) {\n            for (let type of group) {\n              let rules = matches[idx]\n                .map(([, rule]) => rule)\n                .flat()\n                .map((rule) =>\n                  rule\n                    .toString()\n                    .split('\\n')\n                    .slice(1, -1) // Remove selector and closing '}'\n                    .map((line) => line.trim())\n                    .map((x) => `      ${x}`) // Re-indent\n                    .join('\\n')\n                )\n                .join('\\n\\n')\n\n              messages.push(\n                `  Use \\`${candidate.replace('[', `[${type}:`)}\\` for \\`${rules.trim()}\\``\n              )\n              break\n            }\n          }\n\n          log.warn([\n            `The class \\`${candidate}\\` is ambiguous and matches multiple utilities.`,\n            ...messages,\n            `If this is content and not a class, replace it with \\`${candidate\n              .replace('[', '&lsqb;')\n              .replace(']', '&rsqb;')}\\` to silence this warning.`,\n          ])\n          continue\n        }\n      }\n\n      matches = matches.map((list) => list.filter((match) => isParsableNode(match[1])))\n    }\n\n    matches = matches.flat()\n    matches = Array.from(recordCandidates(matches, classCandidate))\n    matches = applyPrefix(matches, context)\n\n    if (important) {\n      matches = applyImportant(matches, classCandidate)\n    }\n\n    for (let variant of variants) {\n      matches = applyVariant(variant, matches, context)\n    }\n\n    for (let match of matches) {\n      match[1].raws.tailwind = { ...match[1].raws.tailwind, candidate }\n\n      // Apply final format selector\n      match = applyFinalFormat(match, { context, candidate })\n\n      // Skip rules with invalid selectors\n      // This will cause the candidate to be added to the \"not class\"\n      // cache skipping it entirely for future builds\n      if (match === null) {\n        continue\n      }\n\n      yield match\n    }\n  }\n}\n\nfunction applyFinalFormat(match, { context, candidate }) {\n  if (!match[0].collectedFormats) {\n    return match\n  }\n\n  let isValid = true\n  let finalFormat\n\n  try {\n    finalFormat = formatVariantSelector(match[0].collectedFormats, {\n      context,\n      candidate,\n    })\n  } catch {\n    // The format selector we produced is invalid\n    // This could be because:\n    // - A bug exists\n    // - A plugin introduced an invalid variant selector (ex: `addVariant('foo', '&;foo')`)\n    // - The user used an invalid arbitrary variant (ex: `[&;foo]:underline`)\n    // Either way the build will fail because of this\n    // We would rather that the build pass \"silently\" given that this could\n    // happen because of picking up invalid things when scanning content\n    // So we'll throw out the candidate instead\n\n    return null\n  }\n\n  let container = postcss.root({ nodes: [match[1].clone()] })\n\n  container.walkRules((rule) => {\n    if (inKeyframes(rule)) {\n      return\n    }\n\n    try {\n      let selector = finalizeSelector(rule.selector, finalFormat, {\n        candidate,\n        context,\n      })\n\n      // Finalize Selector determined that this candidate is irrelevant\n      // TODO: This elimination should happen earlier so this never happens\n      if (selector === null) {\n        rule.remove()\n        return\n      }\n\n      rule.selector = selector\n    } catch {\n      // If this selector is invalid we also want to skip it\n      // But it's likely that being invalid here means there's a bug in a plugin rather than too loosely matching content\n      isValid = false\n      return false\n    }\n  })\n\n  if (!isValid) {\n    return null\n  }\n\n  // If all rules have been eliminated we can skip this candidate entirely\n  if (container.nodes.length === 0) {\n    return null\n  }\n\n  match[1] = container.nodes[0]\n\n  return match\n}\n\nfunction inKeyframes(rule) {\n  return rule.parent && rule.parent.type === 'atrule' && rule.parent.name === 'keyframes'\n}\n\nfunction getImportantStrategy(important) {\n  if (important === true) {\n    return (rule) => {\n      if (inKeyframes(rule)) {\n        return\n      }\n\n      rule.walkDecls((d) => {\n        if (d.parent.type === 'rule' && !inKeyframes(d.parent)) {\n          d.important = true\n        }\n      })\n    }\n  }\n\n  if (typeof important === 'string') {\n    return (rule) => {\n      if (inKeyframes(rule)) {\n        return\n      }\n\n      rule.selectors = rule.selectors.map((selector) => {\n        return applyImportantSelector(selector, important)\n      })\n    }\n  }\n}\n\nfunction generateRules(candidates, context, isSorting = false) {\n  let allRules = []\n  let strategy = getImportantStrategy(context.tailwindConfig.important)\n\n  for (let candidate of candidates) {\n    if (context.notClassCache.has(candidate)) {\n      continue\n    }\n\n    if (context.candidateRuleCache.has(candidate)) {\n      allRules = allRules.concat(Array.from(context.candidateRuleCache.get(candidate)))\n      continue\n    }\n\n    let matches = Array.from(resolveMatches(candidate, context))\n\n    if (matches.length === 0) {\n      context.notClassCache.add(candidate)\n      continue\n    }\n\n    context.classCache.set(candidate, matches)\n\n    let rules = context.candidateRuleCache.get(candidate) ?? new Set()\n    context.candidateRuleCache.set(candidate, rules)\n\n    for (const match of matches) {\n      let [{ sort, options }, rule] = match\n\n      if (options.respectImportant && strategy) {\n        let container = postcss.root({ nodes: [rule.clone()] })\n        container.walkRules(strategy)\n        rule = container.nodes[0]\n      }\n\n      // Note: We have to clone rules during sorting\n      // so we eliminate some shared mutable state\n      let newEntry = [sort, isSorting ? rule.clone() : rule]\n      rules.add(newEntry)\n      context.ruleCache.add(newEntry)\n      allRules.push(newEntry)\n    }\n  }\n\n  return allRules\n}\n\nfunction isArbitraryValue(input) {\n  return input.startsWith('[') && input.endsWith(']')\n}\n\nexport { resolveMatches, generateRules }\n", "import postcss from 'postcss'\nimport postcssNested from 'postcss-nested'\nimport postcssJs from 'postcss-js'\n\nexport default function parseObjectStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseObjectStyles([styles])\n  }\n\n  return styles.flatMap((style) => {\n    return postcss([\n      postcssNested({\n        bubble: ['screen'],\n      }),\n    ]).process(style, {\n      parser: postcssJs,\n    }).root.nodes\n  })\n}\n", "export default function isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n  return prototype === null || Object.getPrototypeOf(prototype) === null\n}\n", "import parser from 'postcss-selector-parser'\n\n/**\n * @template {string | import('postcss-selector-parser').Root} T\n *\n * Prefix all classes in the selector with the given prefix\n *\n * It can take either a string or a selector AST and will return the same type\n *\n * @param {string} prefix\n * @param {T} selector\n * @param {boolean} prependNegative\n * @returns {T}\n */\nexport default function (prefix, selector, prependNegative = false) {\n  if (prefix === '') {\n    return selector\n  }\n\n  /** @type {import('postcss-selector-parser').Root} */\n  let ast = typeof selector === 'string' ? parser().astSync(selector) : selector\n\n  ast.walkClasses((classSelector) => {\n    let baseClass = classSelector.value\n    let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith('-')\n\n    classSelector.value = shouldPlaceNegativeBeforePrefix\n      ? `-${prefix}${baseClass.slice(1)}`\n      : `${prefix}${baseClass}`\n  })\n\n  return typeof selector === 'string' ? ast.toString() : ast\n}\n", "export default function escapeCommas(className) {\n  return className.replace(/\\\\,/g, '\\\\2c ')\n}\n", "export default {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50],\n}\n", "import namedColors from './colorNames'\n\nlet HEX = /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i\nlet SHORT_HEX = /^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i\nlet VALUE = /(?:\\d+|\\d*\\.\\d+)%?/\nlet SEP = /(?:\\s*,\\s*|\\s+)/\nlet ALPHA_SEP = /\\s*[,/]\\s*/\nlet CUSTOM_PROPERTY = /var\\(--(?:[^ )]*?)(?:,(?:[^ )]*?|var\\(--[^ )]*?\\)))?\\)/\n\nlet RGB = new RegExp(\n  `^(rgba?)\\\\(\\\\s*(${VALUE.source}|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\\\s*\\\\)$`\n)\nlet HSL = new RegExp(\n  `^(hsla?)\\\\(\\\\s*((?:${VALUE.source})(?:deg|rad|grad|turn)?|${CUSTOM_PROPERTY.source})(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?(?:${ALPHA_SEP.source}(${VALUE.source}|${CUSTOM_PROPERTY.source}))?\\\\s*\\\\)$`\n)\n\n// In \"loose\" mode the color may contain fewer than 3 parts, as long as at least\n// one of the parts is variable.\nexport function parseColor(value, { loose = false } = {}) {\n  if (typeof value !== 'string') {\n    return null\n  }\n\n  value = value.trim()\n  if (value === 'transparent') {\n    return { mode: 'rgb', color: ['0', '0', '0'], alpha: '0' }\n  }\n\n  if (value in namedColors) {\n    return { mode: 'rgb', color: namedColors[value].map((v) => v.toString()) }\n  }\n\n  let hex = value\n    .replace(SHORT_HEX, (_, r, g, b, a) => ['#', r, r, g, g, b, b, a ? a + a : ''].join(''))\n    .match(HEX)\n\n  if (hex !== null) {\n    return {\n      mode: 'rgb',\n      color: [parseInt(hex[1], 16), parseInt(hex[2], 16), parseInt(hex[3], 16)].map((v) =>\n        v.toString()\n      ),\n      alpha: hex[4] ? (parseInt(hex[4], 16) / 255).toString() : undefined,\n    }\n  }\n\n  let match = value.match(RGB) ?? value.match(HSL)\n\n  if (match === null) {\n    return null\n  }\n\n  let color = [match[2], match[3], match[4]].filter(Boolean).map((v) => v.toString())\n\n  // rgba(var(--my-color), 0.1)\n  // hsla(var(--my-color), 0.1)\n  if (color.length === 2 && color[0].startsWith('var(')) {\n    return {\n      mode: match[1],\n      color: [color[0]],\n      alpha: color[1],\n    }\n  }\n\n  if (!loose && color.length !== 3) {\n    return null\n  }\n\n  if (color.length < 3 && !color.some((part) => /^var\\(.*?\\)$/.test(part))) {\n    return null\n  }\n\n  return {\n    mode: match[1],\n    color,\n    alpha: match[5]?.toString?.(),\n  }\n}\n\nexport function formatColor({ mode, color, alpha }) {\n  let hasAlpha = alpha !== undefined\n\n  if (mode === 'rgba' || mode === 'hsla') {\n    return `${mode}(${color.join(', ')}${hasAlpha ? `, ${alpha}` : ''})`\n  }\n\n  return `${mode}(${color.join(' ')}${hasAlpha ? ` / ${alpha}` : ''})`\n}\n", "import { parseColor, formatColor } from './color'\n\nexport function withAlphaValue(color, alphaValue, defaultValue) {\n  if (typeof color === 'function') {\n    return color({ opacityValue: alphaValue })\n  }\n\n  let parsed = parseColor(color, { loose: true })\n\n  if (parsed === null) {\n    return defaultValue\n  }\n\n  return formatColor({ ...parsed, alpha: alphaValue })\n}\n\nexport default function withAlphaVariable({ color, property, variable }) {\n  let properties = [].concat(property)\n  if (typeof color === 'function') {\n    return {\n      [variable]: '1',\n      ...Object.fromEntries(\n        properties.map((p) => {\n          return [p, color({ opacityVariable: variable, opacityValue: `var(${variable})` })]\n        })\n      ),\n    }\n  }\n\n  const parsed = parseColor(color)\n\n  if (parsed === null) {\n    return Object.fromEntries(properties.map((p) => [p, color]))\n  }\n\n  if (parsed.alpha !== undefined) {\n    // Has an alpha value, return color as-is\n    return Object.fromEntries(properties.map((p) => [p, color]))\n  }\n\n  return {\n    [variable]: '1',\n    ...Object.fromEntries(\n      properties.map((p) => {\n        return [p, formatColor({ ...parsed, alpha: `var(${variable})` })]\n      })\n    ),\n  }\n}\n", "/**\n * This splits a string on a top-level character.\n *\n * Regex doesn't support recursion (at least not the JS-flavored version).\n * So we have to use a tiny state machine to keep track of paren placement.\n *\n * Expected behavior using commas:\n * var(--a, 0 0 1px rgb(0, 0, 0)), 0 0 1px rgb(0, 0, 0)\n *       \u2500\u252C\u2500             \u252C  \u252C    \u252C\n *        x              x  x    \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Split because top-level\n *        \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Ignored b/c inside >= 1 levels of parens\n *\n * @param {string} input\n * @param {string} separator\n */\nexport function splitAtTopLevelOnly(input, separator) {\n  let stack = []\n  let parts = []\n  let lastPos = 0\n  let isEscaped = false\n\n  for (let idx = 0; idx < input.length; idx++) {\n    let char = input[idx]\n\n    if (stack.length === 0 && char === separator[0] && !isEscaped) {\n      if (separator.length === 1 || input.slice(idx, idx + separator.length) === separator) {\n        parts.push(input.slice(lastPos, idx))\n        lastPos = idx + separator.length\n      }\n    }\n\n    if (isEscaped) {\n      isEscaped = false\n    } else if (char === '\\\\') {\n      isEscaped = true\n    }\n\n    if (char === '(' || char === '[' || char === '{') {\n      stack.push(char)\n    } else if (\n      (char === ')' && stack[stack.length - 1] === '(') ||\n      (char === ']' && stack[stack.length - 1] === '[') ||\n      (char === '}' && stack[stack.length - 1] === '{')\n    ) {\n      stack.pop()\n    }\n  }\n\n  parts.push(input.slice(lastPos))\n\n  return parts\n}\n", "import { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\nlet KEYWORDS = new Set(['inset', 'inherit', 'initial', 'revert', 'unset'])\nlet SPACE = /\\ +(?![^(]*\\))/g // Similar to the one above, but with spaces instead.\nlet LENGTH = /^-?(\\d+|\\.\\d+)(.*?)$/g\n\nexport function parseBoxShadowValue(input) {\n  let shadows = splitAtTopLevelOnly(input, ',')\n  return shadows.map((shadow) => {\n    let value = shadow.trim()\n    let result = { raw: value }\n    let parts = value.split(SPACE)\n    let seen = new Set()\n\n    for (let part of parts) {\n      // Reset index, since the regex is stateful.\n      LENGTH.lastIndex = 0\n\n      // Keyword\n      if (!seen.has('KEYWORD') && KEYWORDS.has(part)) {\n        result.keyword = part\n        seen.add('KEYWORD')\n      }\n\n      // Length value\n      else if (LENGTH.test(part)) {\n        if (!seen.has('X')) {\n          result.x = part\n          seen.add('X')\n        } else if (!seen.has('Y')) {\n          result.y = part\n          seen.add('Y')\n        } else if (!seen.has('BLUR')) {\n          result.blur = part\n          seen.add('BLUR')\n        } else if (!seen.has('SPREAD')) {\n          result.spread = part\n          seen.add('SPREAD')\n        }\n      }\n\n      // Color or unknown\n      else {\n        if (!result.color) {\n          result.color = part\n        } else {\n          if (!result.unknown) result.unknown = []\n          result.unknown.push(part)\n        }\n      }\n    }\n\n    // Check if valid\n    result.valid = result.x !== undefined && result.y !== undefined\n\n    return result\n  })\n}\n\nexport function formatBoxShadowValue(shadows) {\n  return shadows\n    .map((shadow) => {\n      if (!shadow.valid) {\n        return shadow.raw\n      }\n\n      return [shadow.keyword, shadow.x, shadow.y, shadow.blur, shadow.spread, shadow.color]\n        .filter(Boolean)\n        .join(' ')\n    })\n    .join(', ')\n}\n", "import { parseColor } from './color'\nimport { parseBoxShadowValue } from './parseBoxShadowValue'\nimport { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\nlet cssFunctions = ['min', 'max', 'clamp', 'calc']\n\n// Ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Types\n\nfunction isCSSFunction(value) {\n  return cssFunctions.some((fn) => new RegExp(`^${fn}\\\\(.*\\\\)`).test(value))\n}\n\n// These properties accept a `<dashed-ident>` as one of the values. This means that you can use them\n// as: `timeline-scope: --tl;`\n//\n// Without the `var(--tl)`, in these cases we don't want to normalize the value, and you should add\n// the `var()` yourself.\n//\n// More info:\n// - https://drafts.csswg.org/scroll-animations/#propdef-timeline-scope\n// - https://developer.mozilla.org/en-US/docs/Web/CSS/timeline-scope#dashed-ident\n//\nconst AUTO_VAR_INJECTION_EXCEPTIONS = new Set([\n  // Concrete properties\n  'scroll-timeline-name',\n  'timeline-scope',\n  'view-timeline-name',\n  'font-palette',\n\n  // Shorthand properties\n  'scroll-timeline',\n  'animation-timeline',\n  'view-timeline',\n])\n\n// This is not a data type, but rather a function that can normalize the\n// correct values.\nexport function normalize(value, context = null, isRoot = true) {\n  let isVarException = context && AUTO_VAR_INJECTION_EXCEPTIONS.has(context.property)\n  if (value.startsWith('--') && !isVarException) {\n    return `var(${value})`\n  }\n\n  // Keep raw strings if it starts with `url(`\n  if (value.includes('url(')) {\n    return value\n      .split(/(url\\(.*?\\))/g)\n      .filter(Boolean)\n      .map((part) => {\n        if (/^url\\(.*?\\)$/.test(part)) {\n          return part\n        }\n\n        return normalize(part, context, false)\n      })\n      .join('')\n  }\n\n  // Convert `_` to ` `, except for escaped underscores `\\_`\n  value = value\n    .replace(\n      /([^\\\\])_+/g,\n      (fullMatch, characterBefore) => characterBefore + ' '.repeat(fullMatch.length - 1)\n    )\n    .replace(/^_/g, ' ')\n    .replace(/\\\\_/g, '_')\n\n  // Remove leftover whitespace\n  if (isRoot) {\n    value = value.trim()\n  }\n\n  value = normalizeMathOperatorSpacing(value)\n\n  return value\n}\n\n/**\n * Add spaces around operators inside math functions\n * like calc() that do not follow an operator, '(', or `,`.\n *\n * @param {string} value\n * @returns {string}\n */\nfunction normalizeMathOperatorSpacing(value) {\n  let preventFormattingInFunctions = ['theme']\n  let preventFormattingKeywords = [\n    'min-content',\n    'max-content',\n    'fit-content',\n\n    // Env\n    'safe-area-inset-top',\n    'safe-area-inset-right',\n    'safe-area-inset-bottom',\n    'safe-area-inset-left',\n\n    'titlebar-area-x',\n    'titlebar-area-y',\n    'titlebar-area-width',\n    'titlebar-area-height',\n\n    'keyboard-inset-top',\n    'keyboard-inset-right',\n    'keyboard-inset-bottom',\n    'keyboard-inset-left',\n    'keyboard-inset-width',\n    'keyboard-inset-height',\n\n    'radial-gradient',\n    'linear-gradient',\n    'conic-gradient',\n    'repeating-radial-gradient',\n    'repeating-linear-gradient',\n    'repeating-conic-gradient',\n  ]\n\n  return value.replace(/(calc|min|max|clamp)\\(.+\\)/g, (match) => {\n    let result = ''\n\n    function lastChar() {\n      let char = result.trimEnd()\n      return char[char.length - 1]\n    }\n\n    for (let i = 0; i < match.length; i++) {\n      function peek(word) {\n        return word.split('').every((char, j) => match[i + j] === char)\n      }\n\n      function consumeUntil(chars) {\n        let minIndex = Infinity\n        for (let char of chars) {\n          let index = match.indexOf(char, i)\n          if (index !== -1 && index < minIndex) {\n            minIndex = index\n          }\n        }\n\n        let result = match.slice(i, minIndex)\n        i += result.length - 1\n        return result\n      }\n\n      let char = match[i]\n\n      // Handle `var(--variable)`\n      if (peek('var')) {\n        // When we consume until `)`, then we are dealing with this scenario:\n        //   `var(--example)`\n        //\n        // When we consume until `,`, then we are dealing with this scenario:\n        //   `var(--example, 1rem)`\n        //\n        //   In this case we do want to \"format\", the default value as well\n        result += consumeUntil([')', ','])\n      }\n\n      // Skip formatting of known keywords\n      else if (preventFormattingKeywords.some((keyword) => peek(keyword))) {\n        let keyword = preventFormattingKeywords.find((keyword) => peek(keyword))\n        result += keyword\n        i += keyword.length - 1\n      }\n\n      // Skip formatting inside known functions\n      else if (preventFormattingInFunctions.some((fn) => peek(fn))) {\n        result += consumeUntil([')'])\n      }\n\n      // Don't break CSS grid track names\n      else if (peek('[')) {\n        result += consumeUntil([']'])\n      }\n\n      // Handle operators\n      else if (\n        ['+', '-', '*', '/'].includes(char) &&\n        !['(', '+', '-', '*', '/', ','].includes(lastChar())\n      ) {\n        result += ` ${char} `\n      } else {\n        result += char\n      }\n    }\n\n    // Simplify multiple spaces\n    return result.replace(/\\s+/g, ' ')\n  })\n}\n\nexport function url(value) {\n  return value.startsWith('url(')\n}\n\nexport function number(value) {\n  return !isNaN(Number(value)) || isCSSFunction(value)\n}\n\nexport function percentage(value) {\n  return (value.endsWith('%') && number(value.slice(0, -1))) || isCSSFunction(value)\n}\n\n// Please refer to MDN when updating this list:\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\n// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries#container_query_length_units\nlet lengthUnits = [\n  'cm',\n  'mm',\n  'Q',\n  'in',\n  'pc',\n  'pt',\n  'px',\n  'em',\n  'ex',\n  'ch',\n  'rem',\n  'lh',\n  'rlh',\n  'vw',\n  'vh',\n  'vmin',\n  'vmax',\n  'vb',\n  'vi',\n  'svw',\n  'svh',\n  'lvw',\n  'lvh',\n  'dvw',\n  'dvh',\n  'cqw',\n  'cqh',\n  'cqi',\n  'cqb',\n  'cqmin',\n  'cqmax',\n]\nlet lengthUnitsPattern = `(?:${lengthUnits.join('|')})`\nexport function length(value) {\n  return (\n    value === '0' ||\n    new RegExp(`^[+-]?[0-9]*\\.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`).test(value) ||\n    isCSSFunction(value)\n  )\n}\n\nlet lineWidths = new Set(['thin', 'medium', 'thick'])\nexport function lineWidth(value) {\n  return lineWidths.has(value)\n}\n\nexport function shadow(value) {\n  let parsedShadows = parseBoxShadowValue(normalize(value))\n\n  for (let parsedShadow of parsedShadows) {\n    if (!parsedShadow.valid) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function color(value) {\n  let colors = 0\n\n  let result = splitAtTopLevelOnly(value, '_').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n    if (parseColor(part, { loose: true }) !== null) return colors++, true\n\n    return false\n  })\n\n  if (!result) return false\n  return colors > 0\n}\n\nexport function image(value) {\n  let images = 0\n  let result = splitAtTopLevelOnly(value, ',').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n    if (\n      url(part) ||\n      gradient(part) ||\n      ['element(', 'image(', 'cross-fade(', 'image-set('].some((fn) => part.startsWith(fn))\n    ) {\n      images++\n      return true\n    }\n\n    return false\n  })\n\n  if (!result) return false\n  return images > 0\n}\n\nlet gradientTypes = new Set([\n  'conic-gradient',\n  'linear-gradient',\n  'radial-gradient',\n  'repeating-conic-gradient',\n  'repeating-linear-gradient',\n  'repeating-radial-gradient',\n])\nexport function gradient(value) {\n  value = normalize(value)\n\n  for (let type of gradientTypes) {\n    if (value.startsWith(`${type}(`)) {\n      return true\n    }\n  }\n  return false\n}\n\nlet validPositions = new Set(['center', 'top', 'right', 'bottom', 'left'])\nexport function position(value) {\n  let positions = 0\n  let result = splitAtTopLevelOnly(value, '_').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n    if (validPositions.has(part) || length(part) || percentage(part)) {\n      positions++\n      return true\n    }\n\n    return false\n  })\n\n  if (!result) return false\n  return positions > 0\n}\n\nexport function familyName(value) {\n  let fonts = 0\n  let result = splitAtTopLevelOnly(value, ',').every((part) => {\n    part = normalize(part)\n\n    if (part.startsWith('var(')) return true\n\n    // If it contains spaces, then it should be quoted\n    if (part.includes(' ')) {\n      if (!/(['\"])([^\"']+)\\1/g.test(part)) {\n        return false\n      }\n    }\n\n    // If it starts with a number, it's invalid\n    if (/^\\d/g.test(part)) {\n      return false\n    }\n\n    fonts++\n\n    return true\n  })\n\n  if (!result) return false\n  return fonts > 0\n}\n\nlet genericNames = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'math',\n  'emoji',\n  'fangsong',\n])\nexport function genericName(value) {\n  return genericNames.has(value)\n}\n\nlet absoluteSizes = new Set([\n  'xx-small',\n  'x-small',\n  'small',\n  'medium',\n  'large',\n  'x-large',\n  'x-large',\n  'xxx-large',\n])\nexport function absoluteSize(value) {\n  return absoluteSizes.has(value)\n}\n\nlet relativeSizes = new Set(['larger', 'smaller'])\nexport function relativeSize(value) {\n  return relativeSizes.has(value)\n}\n", "export default function negateValue(value) {\n  value = `${value}`\n\n  if (value === '0') {\n    return '0'\n  }\n\n  // Flip sign of numbers\n  if (/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(value)) {\n    return value.replace(/^[+-]?/, (sign) => (sign === '-' ? '' : '-'))\n  }\n\n  // What functions we support negating numeric values for\n  // var() isn't inherently a numeric function but we support it anyway\n  // The trigonometric functions are omitted because you'll need to use calc(\u2026) with them _anyway_\n  // to produce generally useful results and that will be covered already\n  let numericFunctions = ['var', 'calc', 'min', 'max', 'clamp']\n\n  for (const fn of numericFunctions) {\n    if (value.includes(`${fn}(`)) {\n      return `calc(${value} * -1)`\n    }\n  }\n}\n", "import { length, percentage } from './dataTypes'\nimport { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\n/**\n *\n * https://developer.mozilla.org/en-US/docs/Web/CSS/background-size#formal_syntax\n *\n * background-size =\n *  <bg-size>#\n *\n * <bg-size> =\n *   [ <length-percentage [0,\u221E]> | auto ]{1,2}  |\n *   cover                                      |\n *   contain\n *\n * <length-percentage> =\n *   <length>      |\n *   <percentage>\n *\n * @param {string} value\n */\nexport function backgroundSize(value) {\n  let keywordValues = ['cover', 'contain']\n  // the <length-percentage> type will probably be a css function\n  // so we have to use `splitAtTopLevelOnly`\n  return splitAtTopLevelOnly(value, ',').every((part) => {\n    let sizes = splitAtTopLevelOnly(part, '_').filter(Boolean)\n    if (sizes.length === 1 && keywordValues.includes(sizes[0])) return true\n\n    if (sizes.length !== 1 && sizes.length !== 2) return false\n\n    return sizes.every((size) => length(size) || percentage(size) || size === 'auto')\n  })\n}\n", "export default {\n  yellow: (input: string) => input,\n};\n", "import colors from 'picocolors'\nimport log from './util/log'\n\nlet defaults = {\n  optimizeUniversalDefaults: false,\n  generalizedModifiers: true,\n  get disableColorOpacityUtilitiesByDefault() {\n    return __OXIDE__\n  },\n  get relativeContentPathsByDefault() {\n    return __OXIDE__\n  },\n}\n\nlet featureFlags = {\n  future: [\n    'hoverOnlyWhenSupported',\n    'respectDefaultRingColorOpacity',\n    'disableColorOpacityUtilitiesByDefault',\n    'relativeContentPathsByDefault',\n  ],\n  experimental: ['optimizeUniversalDefaults', 'generalizedModifiers'],\n}\n\nexport function flagEnabled(config, flag) {\n  if (featureFlags.future.includes(flag)) {\n    return config.future === 'all' || (config?.future?.[flag] ?? defaults[flag] ?? false)\n  }\n\n  if (featureFlags.experimental.includes(flag)) {\n    return (\n      config.experimental === 'all' || (config?.experimental?.[flag] ?? defaults[flag] ?? false)\n    )\n  }\n\n  return false\n}\n\nfunction experimentalFlagsEnabled(config) {\n  if (config.experimental === 'all') {\n    return featureFlags.experimental\n  }\n\n  return Object.keys(config?.experimental ?? {}).filter(\n    (flag) => featureFlags.experimental.includes(flag) && config.experimental[flag]\n  )\n}\n\nexport function issueFlagNotices(config) {\n  if (process.env.JEST_WORKER_ID !== undefined) {\n    return\n  }\n\n  if (experimentalFlagsEnabled(config).length > 0) {\n    let changes = experimentalFlagsEnabled(config)\n      .map((s) => colors.yellow(s))\n      .join(', ')\n\n    log.warn('experimental-flags-enabled', [\n      `You have enabled experimental features: ${changes}`,\n      'Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.',\n    ])\n  }\n}\n\nexport default featureFlags\n", "import escapeCommas from './escapeCommas'\nimport { withAlphaValue } from './withAlphaVariable'\nimport {\n  normalize,\n  length,\n  number,\n  percentage,\n  url,\n  color as validateColor,\n  genericName,\n  familyName,\n  image,\n  absoluteSize,\n  relativeSize,\n  position,\n  lineWidth,\n  shadow,\n} from './dataTypes'\nimport negateValue from './negateValue'\nimport { backgroundSize } from './validateFormalSyntax'\nimport { flagEnabled } from '../featureFlags.js'\n\n/**\n * @param {import('postcss-selector-parser').Container} selectors\n * @param {(className: string) => string} updateClass\n * @returns {string}\n */\nexport function updateAllClasses(selectors, updateClass) {\n  selectors.walkClasses((sel) => {\n    sel.value = updateClass(sel.value)\n\n    if (sel.raws && sel.raws.value) {\n      sel.raws.value = escapeCommas(sel.raws.value)\n    }\n  })\n}\n\nfunction resolveArbitraryValue(modifier, validate) {\n  if (!isArbitraryValue(modifier)) {\n    return undefined\n  }\n\n  let value = modifier.slice(1, -1)\n\n  if (!validate(value)) {\n    return undefined\n  }\n\n  return normalize(value)\n}\n\nfunction asNegativeValue(modifier, lookup = {}, validate) {\n  let positiveValue = lookup[modifier]\n\n  if (positiveValue !== undefined) {\n    return negateValue(positiveValue)\n  }\n\n  if (isArbitraryValue(modifier)) {\n    let resolved = resolveArbitraryValue(modifier, validate)\n\n    if (resolved === undefined) {\n      return undefined\n    }\n\n    return negateValue(resolved)\n  }\n}\n\nexport function asValue(modifier, options = {}, { validate = () => true } = {}) {\n  let value = options.values?.[modifier]\n\n  if (value !== undefined) {\n    return value\n  }\n\n  if (options.supportsNegativeValues && modifier.startsWith('-')) {\n    return asNegativeValue(modifier.slice(1), options.values, validate)\n  }\n\n  return resolveArbitraryValue(modifier, validate)\n}\n\nfunction isArbitraryValue(input) {\n  return input.startsWith('[') && input.endsWith(']')\n}\n\nfunction splitUtilityModifier(modifier) {\n  let slashIdx = modifier.lastIndexOf('/')\n\n  // If the `/` is inside an arbitrary, we want to find the previous one if any\n  // This logic probably isn't perfect but it should work for most cases\n  let arbitraryStartIdx = modifier.lastIndexOf('[', slashIdx)\n  let arbitraryEndIdx = modifier.indexOf(']', slashIdx)\n\n  let isNextToArbitrary = modifier[slashIdx - 1] === ']' || modifier[slashIdx + 1] === '['\n\n  // Backtrack to the previous `/` if the one we found was inside an arbitrary\n  if (!isNextToArbitrary) {\n    if (arbitraryStartIdx !== -1 && arbitraryEndIdx !== -1) {\n      if (arbitraryStartIdx < slashIdx && slashIdx < arbitraryEndIdx) {\n        slashIdx = modifier.lastIndexOf('/', arbitraryStartIdx)\n      }\n    }\n  }\n\n  if (slashIdx === -1 || slashIdx === modifier.length - 1) {\n    return [modifier, undefined]\n  }\n\n  let arbitrary = isArbitraryValue(modifier)\n\n  // The modifier could be of the form `[foo]/[bar]`\n  // We want to handle this case properly\n  // without affecting `[foo/bar]`\n  if (arbitrary && !modifier.includes(']/[')) {\n    return [modifier, undefined]\n  }\n\n  return [modifier.slice(0, slashIdx), modifier.slice(slashIdx + 1)]\n}\n\nexport function parseColorFormat(value) {\n  if (typeof value === 'string' && value.includes('<alpha-value>')) {\n    let oldValue = value\n\n    return ({ opacityValue = 1 }) => oldValue.replace('<alpha-value>', opacityValue)\n  }\n\n  return value\n}\n\nfunction unwrapArbitraryModifier(modifier) {\n  return normalize(modifier.slice(1, -1))\n}\n\nexport function asColor(modifier, options = {}, { tailwindConfig = {} } = {}) {\n  if (options.values?.[modifier] !== undefined) {\n    return parseColorFormat(options.values?.[modifier])\n  }\n\n  // TODO: Hoist this up to getMatchingTypes or something\n  // We do this here because we need the alpha value (if any)\n  let [color, alpha] = splitUtilityModifier(modifier)\n\n  if (alpha !== undefined) {\n    let normalizedColor =\n      options.values?.[color] ?? (isArbitraryValue(color) ? color.slice(1, -1) : undefined)\n\n    if (normalizedColor === undefined) {\n      return undefined\n    }\n\n    normalizedColor = parseColorFormat(normalizedColor)\n\n    if (isArbitraryValue(alpha)) {\n      return withAlphaValue(normalizedColor, unwrapArbitraryModifier(alpha))\n    }\n\n    if (tailwindConfig.theme?.opacity?.[alpha] === undefined) {\n      return undefined\n    }\n\n    return withAlphaValue(normalizedColor, tailwindConfig.theme.opacity[alpha])\n  }\n\n  return asValue(modifier, options, { validate: validateColor })\n}\n\nexport function asLookupValue(modifier, options = {}) {\n  return options.values?.[modifier]\n}\n\nfunction guess(validate) {\n  return (modifier, options) => {\n    return asValue(modifier, options, { validate })\n  }\n}\n\nexport let typeMap = {\n  any: asValue,\n  color: asColor,\n  url: guess(url),\n  image: guess(image),\n  length: guess(length),\n  percentage: guess(percentage),\n  position: guess(position),\n  lookup: asLookupValue,\n  'generic-name': guess(genericName),\n  'family-name': guess(familyName),\n  number: guess(number),\n  'line-width': guess(lineWidth),\n  'absolute-size': guess(absoluteSize),\n  'relative-size': guess(relativeSize),\n  shadow: guess(shadow),\n  size: guess(backgroundSize),\n}\n\nlet supportedTypes = Object.keys(typeMap)\n\nfunction splitAtFirst(input, delim) {\n  let idx = input.indexOf(delim)\n  if (idx === -1) return [undefined, input]\n  return [input.slice(0, idx), input.slice(idx + 1)]\n}\n\nexport function coerceValue(types, modifier, options, tailwindConfig) {\n  if (options.values && modifier in options.values) {\n    for (let { type } of types ?? []) {\n      let result = typeMap[type](modifier, options, {\n        tailwindConfig,\n      })\n\n      if (result === undefined) {\n        continue\n      }\n\n      return [result, type, null]\n    }\n  }\n\n  if (isArbitraryValue(modifier)) {\n    let arbitraryValue = modifier.slice(1, -1)\n    let [explicitType, value] = splitAtFirst(arbitraryValue, ':')\n\n    // It could be that this resolves to `url(https` which is not a valid\n    // identifier. We currently only support \"simple\" words with dashes or\n    // underscores. E.g.: family-name\n    if (!/^[\\w-_]+$/g.test(explicitType)) {\n      value = arbitraryValue\n    }\n\n    //\n    else if (explicitType !== undefined && !supportedTypes.includes(explicitType)) {\n      return []\n    }\n\n    if (value.length > 0 && supportedTypes.includes(explicitType)) {\n      return [asValue(`[${value}]`, options), explicitType, null]\n    }\n  }\n\n  let matches = getMatchingTypes(types, modifier, options, tailwindConfig)\n\n  // Find first matching type\n  for (let match of matches) {\n    return match\n  }\n\n  return []\n}\n\n/**\n *\n * @param {{type: string}[]} types\n * @param {string} rawModifier\n * @param {any} options\n * @param {any} tailwindConfig\n * @returns {Iterator<[value: string, type: string, modifier: string | null]>}\n */\nexport function* getMatchingTypes(types, rawModifier, options, tailwindConfig) {\n  let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n  let [modifier, utilityModifier] = splitUtilityModifier(rawModifier)\n\n  let canUseUtilityModifier =\n    modifiersEnabled &&\n    options.modifiers != null &&\n    (options.modifiers === 'any' ||\n      (typeof options.modifiers === 'object' &&\n        ((utilityModifier && isArbitraryValue(utilityModifier)) ||\n          utilityModifier in options.modifiers)))\n\n  if (!canUseUtilityModifier) {\n    modifier = rawModifier\n    utilityModifier = undefined\n  }\n\n  if (utilityModifier !== undefined && modifier === '') {\n    modifier = 'DEFAULT'\n  }\n\n  // Check the full value first\n  // TODO: Move to asValue\u2026 somehow\n  if (utilityModifier !== undefined) {\n    if (typeof options.modifiers === 'object') {\n      let configValue = options.modifiers?.[utilityModifier] ?? null\n      if (configValue !== null) {\n        utilityModifier = configValue\n      } else if (isArbitraryValue(utilityModifier)) {\n        utilityModifier = unwrapArbitraryModifier(utilityModifier)\n      }\n    }\n  }\n\n  for (let { type } of types ?? []) {\n    let result = typeMap[type](modifier, options, {\n      tailwindConfig,\n    })\n\n    if (result === undefined) {\n      continue\n    }\n\n    yield [result, type, utilityModifier ?? null]\n  }\n}\n", "import selectorParser from 'postcss-selector-parser'\nimport unescape from 'postcss-selector-parser/dist/util/unesc'\nimport escapeClassName from '../util/escapeClassName'\nimport prefixSelector from '../util/prefixSelector'\nimport { movePseudos } from './pseudoElements'\nimport { splitAtTopLevelOnly } from './splitAtTopLevelOnly'\n\n/** @typedef {import('postcss-selector-parser').Root} Root */\n/** @typedef {import('postcss-selector-parser').Selector} Selector */\n/** @typedef {import('postcss-selector-parser').Pseudo} Pseudo */\n/** @typedef {import('postcss-selector-parser').Node} Node */\n\n/** @typedef {{format: string, respectPrefix: boolean}[]} RawFormats */\n/** @typedef {import('postcss-selector-parser').Root} ParsedFormats */\n/** @typedef {RawFormats | ParsedFormats} AcceptedFormats */\n\nlet MERGE = ':merge'\n\n/**\n * @param {RawFormats} formats\n * @param {{context: any, candidate: string, base: string | null}} options\n * @returns {ParsedFormats | null}\n */\nexport function formatVariantSelector(formats, { context, candidate }) {\n  let prefix = context?.tailwindConfig.prefix ?? ''\n\n  // Parse the format selector into an AST\n  let parsedFormats = formats.map((format) => {\n    let ast = selectorParser().astSync(format.format)\n\n    return {\n      ...format,\n      ast: format.respectPrefix ? prefixSelector(prefix, ast) : ast,\n    }\n  })\n\n  // We start with the candidate selector\n  let formatAst = selectorParser.root({\n    nodes: [\n      selectorParser.selector({\n        nodes: [selectorParser.className({ value: escapeClassName(candidate) })],\n      }),\n    ],\n  })\n\n  // And iteratively merge each format selector into the candidate selector\n  for (let { ast } of parsedFormats) {\n    // 1. Handle :merge() special pseudo-class\n    ;[formatAst, ast] = handleMergePseudo(formatAst, ast)\n\n    // 2. Merge the format selector into the current selector AST\n    ast.walkNesting((nesting) => nesting.replaceWith(...formatAst.nodes[0].nodes))\n\n    // 3. Keep going!\n    formatAst = ast\n  }\n\n  return formatAst\n}\n\n/**\n * Given any node in a selector this gets the \"simple\" selector it's a part of\n * A simple selector is just a list of nodes without any combinators\n * Technically :is(), :not(), :has(), etc\u2026 can have combinators but those are nested\n * inside the relevant node and won't be picked up so they're fine to ignore\n *\n * @param {Node} node\n * @returns {Node[]}\n **/\nfunction simpleSelectorForNode(node) {\n  /** @type {Node[]} */\n  let nodes = []\n\n  // Walk backwards until we hit a combinator node (or the start)\n  while (node.prev() && node.prev().type !== 'combinator') {\n    node = node.prev()\n  }\n\n  // Now record all non-combinator nodes until we hit one (or the end)\n  while (node && node.type !== 'combinator') {\n    nodes.push(node)\n    node = node.next()\n  }\n\n  return nodes\n}\n\n/**\n * Resorts the nodes in a selector to ensure they're in the correct order\n * Tags go before classes, and pseudo classes go after classes\n *\n * @param {Selector} sel\n * @returns {Selector}\n **/\nfunction resortSelector(sel) {\n  sel.sort((a, b) => {\n    if (a.type === 'tag' && b.type === 'class') {\n      return -1\n    } else if (a.type === 'class' && b.type === 'tag') {\n      return 1\n    } else if (a.type === 'class' && b.type === 'pseudo' && b.value.startsWith('::')) {\n      return -1\n    } else if (a.type === 'pseudo' && a.value.startsWith('::') && b.type === 'class') {\n      return 1\n    }\n\n    return sel.index(a) - sel.index(b)\n  })\n\n  return sel\n}\n\n/**\n * Remove extraneous selectors that do not include the base class/candidate\n *\n * Example:\n * Given the utility `.a, .b { color: red}`\n * Given the candidate `sm:b`\n *\n * The final selector should be `.sm\\:b` and not `.a, .sm\\:b`\n *\n * @param {Selector} ast\n * @param {string} base\n */\nexport function eliminateIrrelevantSelectors(sel, base) {\n  let hasClassesMatchingCandidate = false\n\n  sel.walk((child) => {\n    if (child.type === 'class' && child.value === base) {\n      hasClassesMatchingCandidate = true\n      return false // Stop walking\n    }\n  })\n\n  if (!hasClassesMatchingCandidate) {\n    sel.remove()\n  }\n\n  // We do NOT recursively eliminate sub selectors that don't have the base class\n  // as this is NOT a safe operation. For example, if we have:\n  // `.space-x-2 > :not([hidden]) ~ :not([hidden])`\n  // We cannot remove the [hidden] from the :not() because it would change the\n  // meaning of the selector.\n\n  // TODO: Can we do this for :matches, :is, and :where?\n}\n\n/**\n * @param {string} current\n * @param {AcceptedFormats} formats\n * @param {{context: any, candidate: string, base: string | null}} options\n * @returns {string}\n */\nexport function finalizeSelector(current, formats, { context, candidate, base }) {\n  let separator = context?.tailwindConfig?.separator ?? ':'\n\n  // Split by the separator, but ignore the separator inside square brackets:\n  //\n  // E.g.: dark:lg:hover:[paint-order:markers]\n  //           \u252C  \u252C     \u252C            \u252C\n  //           \u2502  \u2502     \u2502            \u2570\u2500\u2500 We will not split here\n  //           \u2570\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 We will split here\n  //\n  base = base ?? splitAtTopLevelOnly(candidate, separator).pop()\n\n  // Parse the selector into an AST\n  let selector = selectorParser().astSync(current)\n\n  // Normalize escaped classes, e.g.:\n  //\n  // The idea would be to replace the escaped `base` in the selector with the\n  // `format`. However, in css you can escape the same selector in a few\n  // different ways. This would result in different strings and therefore we\n  // can't replace it properly.\n  //\n  //               base: bg-[rgb(255,0,0)]\n  //   base in selector: bg-\\\\[rgb\\\\(255\\\\,0\\\\,0\\\\)\\\\]\n  //       escaped base: bg-\\\\[rgb\\\\(255\\\\2c 0\\\\2c 0\\\\)\\\\]\n  //\n  selector.walkClasses((node) => {\n    if (node.raws && node.value.includes(base)) {\n      node.raws.value = escapeClassName(unescape(node.raws.value))\n    }\n  })\n\n  // Remove extraneous selectors that do not include the base candidate\n  selector.each((sel) => eliminateIrrelevantSelectors(sel, base))\n\n  // If ffter eliminating irrelevant selectors, we end up with nothing\n  // Then the whole \"rule\" this is associated with does not need to exist\n  // We use `null` as a marker value for that case\n  if (selector.length === 0) {\n    return null\n  }\n\n  // If there are no formats that means there were no variants added to the candidate\n  // so we can just return the selector as-is\n  let formatAst = Array.isArray(formats)\n    ? formatVariantSelector(formats, { context, candidate })\n    : formats\n\n  if (formatAst === null) {\n    return selector.toString()\n  }\n\n  let simpleStart = selectorParser.comment({ value: '/*__simple__*/' })\n  let simpleEnd = selectorParser.comment({ value: '/*__simple__*/' })\n\n  // We can safely replace the escaped base now, since the `base` section is\n  // now in a normalized escaped value.\n  selector.walkClasses((node) => {\n    if (node.value !== base) {\n      return\n    }\n\n    let parent = node.parent\n    let formatNodes = formatAst.nodes[0].nodes\n\n    // Perf optimization: if the parent is a single class we can just replace it and be done\n    if (parent.nodes.length === 1) {\n      node.replaceWith(...formatNodes)\n      return\n    }\n\n    let simpleSelector = simpleSelectorForNode(node)\n    parent.insertBefore(simpleSelector[0], simpleStart)\n    parent.insertAfter(simpleSelector[simpleSelector.length - 1], simpleEnd)\n\n    for (let child of formatNodes) {\n      parent.insertBefore(simpleSelector[0], child.clone())\n    }\n\n    node.remove()\n\n    // Re-sort the simple selector to ensure it's in the correct order\n    simpleSelector = simpleSelectorForNode(simpleStart)\n    let firstNode = parent.index(simpleStart)\n\n    parent.nodes.splice(\n      firstNode,\n      simpleSelector.length,\n      ...resortSelector(selectorParser.selector({ nodes: simpleSelector })).nodes\n    )\n\n    simpleStart.remove()\n    simpleEnd.remove()\n  })\n\n  // Remove unnecessary pseudo selectors that we used as placeholders\n  selector.walkPseudos((p) => {\n    if (p.value === MERGE) {\n      p.replaceWith(p.nodes)\n    }\n  })\n\n  // Move pseudo elements to the end of the selector (if necessary)\n  selector.each((sel) => movePseudos(sel))\n\n  return selector.toString()\n}\n\n/**\n *\n * @param {Selector} selector\n * @param {Selector} format\n */\nexport function handleMergePseudo(selector, format) {\n  /** @type {{pseudo: Pseudo, value: string}[]} */\n  let merges = []\n\n  // Find all :merge() pseudo-classes in `selector`\n  selector.walkPseudos((pseudo) => {\n    if (pseudo.value === MERGE) {\n      merges.push({\n        pseudo,\n        value: pseudo.nodes[0].toString(),\n      })\n    }\n  })\n\n  // Find all :merge() \"attachments\" in `format` and attach them to the matching selector in `selector`\n  format.walkPseudos((pseudo) => {\n    if (pseudo.value !== MERGE) {\n      return\n    }\n\n    let value = pseudo.nodes[0].toString()\n\n    // Does `selector` contain a :merge() pseudo-class with the same value?\n    let existing = merges.find((merge) => merge.value === value)\n\n    // Nope so there's nothing to do\n    if (!existing) {\n      return\n    }\n\n    // Everything after `:merge()` up to the next combinator is what is attached to the merged selector\n    let attachments = []\n    let next = pseudo.next()\n    while (next && next.type !== 'combinator') {\n      attachments.push(next)\n      next = next.next()\n    }\n\n    let combinator = next\n\n    existing.pseudo.parent.insertAfter(\n      existing.pseudo,\n      selectorParser.selector({ nodes: attachments.map((node) => node.clone()) })\n    )\n\n    pseudo.remove()\n    attachments.forEach((node) => node.remove())\n\n    // What about this case:\n    // :merge(.group):focus > &\n    // :merge(.group):hover &\n    if (combinator && combinator.type === 'combinator') {\n      combinator.remove()\n    }\n  })\n\n  return [selector, format]\n}\n", "import parser from 'postcss-selector-parser'\nimport escapeCommas from './escapeCommas'\n\nexport default function escapeClassName(className) {\n  let node = parser.className()\n  node.value = className\n  return escapeCommas(node?.raws?.value ?? node.value)\n}\n", "/** @typedef {import('postcss-selector-parser').Root} Root */\n/** @typedef {import('postcss-selector-parser').Selector} Selector */\n/** @typedef {import('postcss-selector-parser').Pseudo} Pseudo */\n/** @typedef {import('postcss-selector-parser').Node} Node */\n\n// There are some pseudo-elements that may or may not be:\n\n// **Actionable**\n// Zero or more user-action pseudo-classes may be attached to the pseudo-element itself\n// structural-pseudo-classes are NOT allowed but we don't make\n// The spec is not clear on whether this is allowed or not \u2014 but in practice it is.\n\n// **Terminal**\n// It MUST be placed at the end of a selector\n//\n// This is the required in the spec. However, some pseudo elements are not \"terminal\" because\n// they represent a \"boundary piercing\" that is compiled out by a build step.\n\n// **Jumpable**\n// Any terminal element may \"jump\" over combinators when moving to the end of the selector\n//\n// This is a backwards-compat quirk of pseudo element variants from earlier versions of Tailwind CSS.\n\n/** @typedef {'terminal' | 'actionable' | 'jumpable'} PseudoProperty */\n\n/** @type {Record<string, PseudoProperty[]>} */\nlet elementProperties = {\n  // Pseudo elements from the spec\n  '::after': ['terminal', 'jumpable'],\n  '::backdrop': ['terminal', 'jumpable'],\n  '::before': ['terminal', 'jumpable'],\n  '::cue': ['terminal'],\n  '::cue-region': ['terminal'],\n  '::first-letter': ['terminal', 'jumpable'],\n  '::first-line': ['terminal', 'jumpable'],\n  '::grammar-error': ['terminal'],\n  '::marker': ['terminal', 'jumpable'],\n  '::part': ['terminal', 'actionable'],\n  '::placeholder': ['terminal', 'jumpable'],\n  '::selection': ['terminal', 'jumpable'],\n  '::slotted': ['terminal'],\n  '::spelling-error': ['terminal'],\n  '::target-text': ['terminal'],\n\n  // Pseudo elements from the spec with special rules\n  '::file-selector-button': ['terminal', 'actionable'],\n\n  // Library-specific pseudo elements used by component libraries\n  // These are Shadow DOM-like\n  '::deep': ['actionable'],\n  '::v-deep': ['actionable'],\n  '::ng-deep': ['actionable'],\n\n  // Note: As a rule, double colons (::) should be used instead of a single colon\n  // (:). This distinguishes pseudo-classes from pseudo-elements. However, since\n  // this distinction was not present in older versions of the W3C spec, most\n  // browsers support both syntaxes for the original pseudo-elements.\n  ':after': ['terminal', 'jumpable'],\n  ':before': ['terminal', 'jumpable'],\n  ':first-letter': ['terminal', 'jumpable'],\n  ':first-line': ['terminal', 'jumpable'],\n\n  ':where': [],\n  ':is': [],\n  ':has': [],\n\n  // The default value is used when the pseudo-element is not recognized\n  // Because it's not recognized, we don't know if it's terminal or not\n  // So we assume it can be moved AND can have user-action pseudo classes attached to it\n  __default__: ['terminal', 'actionable'],\n}\n\n/**\n * @param {Selector} sel\n * @returns {Selector}\n */\nexport function movePseudos(sel) {\n  let [pseudos] = movablePseudos(sel)\n\n  // Remove all pseudo elements from their respective selectors\n  pseudos.forEach(([sel, pseudo]) => sel.removeChild(pseudo))\n\n  // Re-add them to the end of the selector in the correct order.\n  // This moves terminal pseudo elements to the end of the\n  // selector otherwise the selector will not be valid.\n  //\n  // Examples:\n  //  - `before:hover:text-center` would result in `.before\\:hover\\:text-center:hover::before`\n  //  - `hover:before:text-center` would result in `.hover\\:before\\:text-center:hover::before`\n  //\n  // The selector `::before:hover` does not work but we\n  // can make it work for you by flipping the order.\n  sel.nodes.push(...pseudos.map(([, pseudo]) => pseudo))\n\n  return sel\n}\n\n/** @typedef {[sel: Selector, pseudo: Pseudo, attachedTo: Pseudo | null]} MovablePseudo */\n/** @typedef {[pseudos: MovablePseudo[], lastSeenElement: Pseudo | null]} MovablePseudosResult */\n\n/**\n * @param {Selector} sel\n * @returns {MovablePseudosResult}\n */\nfunction movablePseudos(sel) {\n  /** @type {MovablePseudo[]} */\n  let buffer = []\n\n  /** @type {Pseudo | null} */\n  let lastSeenElement = null\n\n  for (let node of sel.nodes) {\n    if (node.type === 'combinator') {\n      buffer = buffer.filter(([, node]) => propertiesForPseudo(node).includes('jumpable'))\n      lastSeenElement = null\n    } else if (node.type === 'pseudo') {\n      if (isMovablePseudoElement(node)) {\n        lastSeenElement = node\n        buffer.push([sel, node, null])\n      } else if (lastSeenElement && isAttachablePseudoClass(node, lastSeenElement)) {\n        buffer.push([sel, node, lastSeenElement])\n      } else {\n        lastSeenElement = null\n      }\n\n      for (let sub of node.nodes ?? []) {\n        let [movable, lastSeenElementInSub] = movablePseudos(sub)\n        lastSeenElement = lastSeenElementInSub || lastSeenElement\n        buffer.push(...movable)\n      }\n    }\n  }\n\n  return [buffer, lastSeenElement]\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isPseudoElement(node) {\n  return node.value.startsWith('::') || elementProperties[node.value] !== undefined\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isMovablePseudoElement(node) {\n  return isPseudoElement(node) && propertiesForPseudo(node).includes('terminal')\n}\n\n/**\n * @param {Node} node\n * @param {Pseudo} pseudo\n * @returns {boolean}\n */\nfunction isAttachablePseudoClass(node, pseudo) {\n  if (node.type !== 'pseudo') return false\n  if (isPseudoElement(node)) return false\n\n  return propertiesForPseudo(pseudo).includes('actionable')\n}\n\n/**\n * @param {Pseudo} pseudo\n * @returns {PseudoProperty[]}\n */\nfunction propertiesForPseudo(pseudo) {\n  return elementProperties[pseudo.value] ?? elementProperties.__default__\n}\n", "import escapeClassName from './escapeClassName'\nimport escapeCommas from './escapeCommas'\n\nexport function asClass(name) {\n  return escapeCommas(`.${escapeClassName(name)}`)\n}\n\nexport default function nameClass(classPrefix, key) {\n  return asClass(formatClass(classPrefix, key))\n}\n\nexport function formatClass(classPrefix, key) {\n  if (key === 'DEFAULT') {\n    return classPrefix\n  }\n\n  if (key === '-' || key === '-DEFAULT') {\n    return `-${classPrefix}`\n  }\n\n  if (key.startsWith('-')) {\n    return `-${classPrefix}${key}`\n  }\n\n  if (key.startsWith('/')) {\n    return `${classPrefix}${key}`\n  }\n\n  return `${classPrefix}-${key}`\n}\n", "import fs from 'fs'\nimport url from 'url'\nimport postcss from 'postcss'\nimport dlv from 'dlv'\nimport selectorParser from 'postcss-selector-parser'\n\nimport transformThemeValue from '../util/transformThemeValue'\nimport parseObjectStyles from '../util/parseObjectStyles'\nimport prefixSelector from '../util/prefixSelector'\nimport isPlainObject from '../util/isPlainObject'\nimport escapeClassName from '../util/escapeClassName'\nimport nameClass, { formatClass } from '../util/nameClass'\nimport { coerceValue } from '../util/pluginUtils'\nimport { variantPlugins, corePlugins } from '../corePlugins'\nimport * as sharedState from './sharedState'\nimport { env } from './sharedState'\nimport { toPath } from '../util/toPath'\nimport log from '../util/log'\nimport negateValue from '../util/negateValue'\nimport isSyntacticallyValidPropertyValue from '../util/isSyntacticallyValidPropertyValue'\nimport { generateRules, getClassNameFromSelector } from './generateRules'\nimport { hasContentChanged } from './cacheInvalidation.js'\nimport { Offsets } from './offsets.js'\nimport { flagEnabled } from '../featureFlags.js'\nimport { finalizeSelector, formatVariantSelector } from '../util/formatVariantSelector'\n\nexport const INTERNAL_FEATURES = Symbol()\n\nconst VARIANT_TYPES = {\n  AddVariant: Symbol.for('ADD_VARIANT'),\n  MatchVariant: Symbol.for('MATCH_VARIANT'),\n}\n\nconst VARIANT_INFO = {\n  Base: 1 << 0,\n  Dynamic: 1 << 1,\n}\n\nfunction prefix(context, selector) {\n  let prefix = context.tailwindConfig.prefix\n  return typeof prefix === 'function' ? prefix(selector) : prefix + selector\n}\n\nfunction normalizeOptionTypes({ type = 'any', ...options }) {\n  let types = [].concat(type)\n\n  return {\n    ...options,\n    types: types.map((type) => {\n      if (Array.isArray(type)) {\n        return { type: type[0], ...type[1] }\n      }\n      return { type, preferOnConflict: false }\n    }),\n  }\n}\n\nfunction parseVariantFormatString(input) {\n  /** @type {string[]} */\n  let parts = []\n\n  // When parsing whitespace around special characters are insignificant\n  // However, _inside_ of a variant they could be\n  // Because the selector could look like this\n  // @media { &[data-name=\"foo bar\"] }\n  // This is why we do not skip whitespace\n\n  let current = ''\n  let depth = 0\n\n  for (let idx = 0; idx < input.length; idx++) {\n    let char = input[idx]\n\n    if (char === '\\\\') {\n      // Escaped characters are not special\n      current += '\\\\' + input[++idx]\n    } else if (char === '{') {\n      // Nested rule: start\n      ++depth\n      parts.push(current.trim())\n      current = ''\n    } else if (char === '}') {\n      // Nested rule: end\n      if (--depth < 0) {\n        throw new Error(`Your { and } are unbalanced.`)\n      }\n\n      parts.push(current.trim())\n      current = ''\n    } else {\n      // Normal character\n      current += char\n    }\n  }\n\n  if (current.length > 0) {\n    parts.push(current.trim())\n  }\n\n  parts = parts.filter((part) => part !== '')\n\n  return parts\n}\n\nfunction insertInto(list, value, { before = [] } = {}) {\n  before = [].concat(before)\n\n  if (before.length <= 0) {\n    list.push(value)\n    return\n  }\n\n  let idx = list.length - 1\n  for (let other of before) {\n    let iidx = list.indexOf(other)\n    if (iidx === -1) continue\n    idx = Math.min(idx, iidx)\n  }\n\n  list.splice(idx, 0, value)\n}\n\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles])\n  }\n\n  return styles.flatMap((style) => {\n    let isNode = !Array.isArray(style) && !isPlainObject(style)\n    return isNode ? style : parseObjectStyles(style)\n  })\n}\n\nfunction getClasses(selector, mutate) {\n  let parser = selectorParser((selectors) => {\n    let allClasses = []\n\n    if (mutate) {\n      mutate(selectors)\n    }\n\n    selectors.walkClasses((classNode) => {\n      allClasses.push(classNode.value)\n    })\n\n    return allClasses\n  })\n  return parser.transformSync(selector)\n}\n\n/**\n * Ignore everything inside a :not(...). This allows you to write code like\n * `div:not(.foo)`. If `.foo` is never found in your code, then we used to\n * not generated it. But now we will ignore everything inside a `:not`, so\n * that it still gets generated.\n *\n * @param {selectorParser.Root} selectors\n */\nfunction ignoreNot(selectors) {\n  selectors.walkPseudos((pseudo) => {\n    if (pseudo.value === ':not') {\n      pseudo.remove()\n    }\n  })\n}\n\nfunction extractCandidates(node, state = { containsNonOnDemandable: false }, depth = 0) {\n  let classes = []\n  let selectors = []\n\n  if (node.type === 'rule') {\n    // Handle normal rules\n    selectors.push(...node.selectors)\n  } else if (node.type === 'atrule') {\n    // Handle at-rules (which contains nested rules)\n    node.walkRules((rule) => selectors.push(...rule.selectors))\n  }\n\n  for (let selector of selectors) {\n    let classCandidates = getClasses(selector, ignoreNot)\n\n    // At least one of the selectors contains non-\"on-demandable\" candidates.\n    if (classCandidates.length === 0) {\n      state.containsNonOnDemandable = true\n    }\n\n    for (let classCandidate of classCandidates) {\n      classes.push(classCandidate)\n    }\n  }\n\n  if (depth === 0) {\n    return [state.containsNonOnDemandable || classes.length === 0, classes]\n  }\n\n  return classes\n}\n\nfunction withIdentifiers(styles) {\n  return parseStyles(styles).flatMap((node) => {\n    let nodeMap = new Map()\n    let [containsNonOnDemandableSelectors, candidates] = extractCandidates(node)\n\n    // If this isn't \"on-demandable\", assign it a universal candidate to always include it.\n    if (containsNonOnDemandableSelectors) {\n      candidates.unshift(sharedState.NOT_ON_DEMAND)\n    }\n\n    // However, it could be that it also contains \"on-demandable\" candidates.\n    // E.g.: `span, .foo {}`, in that case it should still be possible to use\n    // `@apply foo` for example.\n    return candidates.map((c) => {\n      if (!nodeMap.has(node)) {\n        nodeMap.set(node, node)\n      }\n      return [c, nodeMap.get(node)]\n    })\n  })\n}\n\nexport function isValidVariantFormatString(format) {\n  return format.startsWith('@') || format.includes('&')\n}\n\nexport function parseVariant(variant) {\n  variant = variant\n    .replace(/\\n+/g, '')\n    .replace(/\\s{1,}/g, ' ')\n    .trim()\n\n  let fns = parseVariantFormatString(variant)\n    .map((str) => {\n      if (!str.startsWith('@')) {\n        return ({ format }) => format(str)\n      }\n\n      let [, name, params] = /@(\\S*)( .+|[({].*)?/g.exec(str)\n      return ({ wrap }) => wrap(postcss.atRule({ name, params: params?.trim() ?? '' }))\n    })\n    .reverse()\n\n  return (api) => {\n    for (let fn of fns) {\n      fn(api)\n    }\n  }\n}\n\n/**\n *\n * @param {any} tailwindConfig\n * @param {any} context\n * @param {object} param2\n * @param {Offsets} param2.offsets\n */\nfunction buildPluginApi(tailwindConfig, context, { variantList, variantMap, offsets, classList }) {\n  function getConfigValue(path, defaultValue) {\n    return path ? dlv(tailwindConfig, path, defaultValue) : tailwindConfig\n  }\n\n  function applyConfiguredPrefix(selector) {\n    return prefixSelector(tailwindConfig.prefix, selector)\n  }\n\n  function prefixIdentifier(identifier, options) {\n    if (identifier === sharedState.NOT_ON_DEMAND) {\n      return sharedState.NOT_ON_DEMAND\n    }\n\n    if (!options.respectPrefix) {\n      return identifier\n    }\n\n    return context.tailwindConfig.prefix + identifier\n  }\n\n  function resolveThemeValue(path, defaultValue, opts = {}) {\n    let parts = toPath(path)\n    let value = getConfigValue(['theme', ...parts], defaultValue)\n    return transformThemeValue(parts[0])(value, opts)\n  }\n\n  let variantIdentifier = 0\n  let api = {\n    postcss,\n    prefix: applyConfiguredPrefix,\n    e: escapeClassName,\n    config: getConfigValue,\n    theme: resolveThemeValue,\n    corePlugins: (path) => {\n      if (Array.isArray(tailwindConfig.corePlugins)) {\n        return tailwindConfig.corePlugins.includes(path)\n      }\n\n      return getConfigValue(['corePlugins', path], true)\n    },\n    variants: () => {\n      // Preserved for backwards compatibility but not used in v3.0+\n      return []\n    },\n    addBase(base) {\n      for (let [identifier, rule] of withIdentifiers(base)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, {})\n        let offset = offsets.create('base')\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offset, layer: 'base' }, rule])\n      }\n    },\n    /**\n     * @param {string} group\n     * @param {Record<string, string | string[]>} declarations\n     */\n    addDefaults(group, declarations) {\n      const groups = {\n        [`@defaults ${group}`]: declarations,\n      }\n\n      for (let [identifier, rule] of withIdentifiers(groups)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, {})\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offsets.create('defaults'), layer: 'defaults' }, rule])\n      }\n    },\n    addComponents(components, options) {\n      let defaultOptions = {\n        preserveSource: false,\n        respectPrefix: true,\n        respectImportant: false,\n      }\n\n      options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options)\n\n      for (let [identifier, rule] of withIdentifiers(components)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n\n        classList.add(prefixedIdentifier)\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offsets.create('components'), layer: 'components', options }, rule])\n      }\n    },\n    addUtilities(utilities, options) {\n      let defaultOptions = {\n        preserveSource: false,\n        respectPrefix: true,\n        respectImportant: true,\n      }\n\n      options = Object.assign({}, defaultOptions, Array.isArray(options) ? {} : options)\n\n      for (let [identifier, rule] of withIdentifiers(utilities)) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n\n        classList.add(prefixedIdentifier)\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap\n          .get(prefixedIdentifier)\n          .push([{ sort: offsets.create('utilities'), layer: 'utilities', options }, rule])\n      }\n    },\n    matchUtilities: function (utilities, options) {\n      let defaultOptions = {\n        respectPrefix: true,\n        respectImportant: true,\n        modifiers: false,\n      }\n\n      options = normalizeOptionTypes({ ...defaultOptions, ...options })\n\n      let offset = offsets.create('utilities')\n\n      for (let identifier in utilities) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n        let rule = utilities[identifier]\n\n        classList.add([prefixedIdentifier, options])\n\n        function wrapped(modifier, { isOnlyPlugin }) {\n          let [value, coercedType, utilityModifier] = coerceValue(\n            options.types,\n            modifier,\n            options,\n            tailwindConfig\n          )\n\n          if (value === undefined) {\n            return []\n          }\n\n          if (!options.types.some(({ type }) => type === coercedType)) {\n            if (isOnlyPlugin) {\n              log.warn([\n                `Unnecessary typehint \\`${coercedType}\\` in \\`${identifier}-${modifier}\\`.`,\n                `You can safely update it to \\`${identifier}-${modifier.replace(\n                  coercedType + ':',\n                  ''\n                )}\\`.`,\n              ])\n            } else {\n              return []\n            }\n          }\n\n          if (!isSyntacticallyValidPropertyValue(value)) {\n            return []\n          }\n\n          let extras = {\n            get modifier() {\n              if (!options.modifiers) {\n                log.warn(`modifier-used-without-options-for-${identifier}`, [\n                  'Your plugin must set `modifiers: true` in its options to support modifiers.',\n                ])\n              }\n\n              return utilityModifier\n            },\n          }\n\n          let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n          let ruleSets = []\n            .concat(modifiersEnabled ? rule(value, extras) : rule(value))\n            .filter(Boolean)\n            .map((declaration) => ({\n              [nameClass(identifier, modifier)]: declaration,\n            }))\n\n          return ruleSets\n        }\n\n        let withOffsets = [{ sort: offset, layer: 'utilities', options }, wrapped]\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets)\n      }\n    },\n    matchComponents: function (components, options) {\n      let defaultOptions = {\n        respectPrefix: true,\n        respectImportant: false,\n        modifiers: false,\n      }\n\n      options = normalizeOptionTypes({ ...defaultOptions, ...options })\n\n      let offset = offsets.create('components')\n\n      for (let identifier in components) {\n        let prefixedIdentifier = prefixIdentifier(identifier, options)\n        let rule = components[identifier]\n\n        classList.add([prefixedIdentifier, options])\n\n        function wrapped(modifier, { isOnlyPlugin }) {\n          let [value, coercedType, utilityModifier] = coerceValue(\n            options.types,\n            modifier,\n            options,\n            tailwindConfig\n          )\n\n          if (value === undefined) {\n            return []\n          }\n\n          if (!options.types.some(({ type }) => type === coercedType)) {\n            if (isOnlyPlugin) {\n              log.warn([\n                `Unnecessary typehint \\`${coercedType}\\` in \\`${identifier}-${modifier}\\`.`,\n                `You can safely update it to \\`${identifier}-${modifier.replace(\n                  coercedType + ':',\n                  ''\n                )}\\`.`,\n              ])\n            } else {\n              return []\n            }\n          }\n\n          if (!isSyntacticallyValidPropertyValue(value)) {\n            return []\n          }\n\n          let extras = {\n            get modifier() {\n              if (!options.modifiers) {\n                log.warn(`modifier-used-without-options-for-${identifier}`, [\n                  'Your plugin must set `modifiers: true` in its options to support modifiers.',\n                ])\n              }\n\n              return utilityModifier\n            },\n          }\n\n          let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n          let ruleSets = []\n            .concat(modifiersEnabled ? rule(value, extras) : rule(value))\n            .filter(Boolean)\n            .map((declaration) => ({\n              [nameClass(identifier, modifier)]: declaration,\n            }))\n\n          return ruleSets\n        }\n\n        let withOffsets = [{ sort: offset, layer: 'components', options }, wrapped]\n\n        if (!context.candidateRuleMap.has(prefixedIdentifier)) {\n          context.candidateRuleMap.set(prefixedIdentifier, [])\n        }\n\n        context.candidateRuleMap.get(prefixedIdentifier).push(withOffsets)\n      }\n    },\n    addVariant(variantName, variantFunctions, options = {}) {\n      variantFunctions = [].concat(variantFunctions).map((variantFunction) => {\n        if (typeof variantFunction !== 'string') {\n          // Safelist public API functions\n          return (api = {}) => {\n            let { args, modifySelectors, container, separator, wrap, format } = api\n            let result = variantFunction(\n              Object.assign(\n                { modifySelectors, container, separator },\n                options.type === VARIANT_TYPES.MatchVariant && { args, wrap, format }\n              )\n            )\n\n            if (typeof result === 'string' && !isValidVariantFormatString(result)) {\n              throw new Error(\n                `Your custom variant \\`${variantName}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`\n              )\n            }\n\n            if (Array.isArray(result)) {\n              return result\n                .filter((variant) => typeof variant === 'string')\n                .map((variant) => parseVariant(variant))\n            }\n\n            // result may be undefined with legacy variants that use APIs like `modifySelectors`\n            // result may also be a postcss node if someone was returning the result from `modifySelectors`\n            return result && typeof result === 'string' && parseVariant(result)(api)\n          }\n        }\n\n        if (!isValidVariantFormatString(variantFunction)) {\n          throw new Error(\n            `Your custom variant \\`${variantName}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`\n          )\n        }\n\n        return parseVariant(variantFunction)\n      })\n\n      insertInto(variantList, variantName, options)\n      variantMap.set(variantName, variantFunctions)\n      context.variantOptions.set(variantName, options)\n    },\n    matchVariant(variant, variantFn, options) {\n      // A unique identifier that \"groups\" these variants together.\n      // This is for internal use only which is why it is not present in the types\n      let id = options?.id ?? ++variantIdentifier\n      let isSpecial = variant === '@'\n\n      let modifiersEnabled = flagEnabled(tailwindConfig, 'generalizedModifiers')\n\n      for (let [key, value] of Object.entries(options?.values ?? {})) {\n        if (key === 'DEFAULT') continue\n\n        api.addVariant(\n          isSpecial ? `${variant}${key}` : `${variant}-${key}`,\n          ({ args, container }) => {\n            return variantFn(\n              value,\n              modifiersEnabled ? { modifier: args?.modifier, container } : { container }\n            )\n          },\n\n          {\n            ...options,\n            value,\n            id,\n            type: VARIANT_TYPES.MatchVariant,\n            variantInfo: VARIANT_INFO.Base,\n          }\n        )\n      }\n\n      let hasDefault = 'DEFAULT' in (options?.values ?? {})\n\n      api.addVariant(\n        variant,\n        ({ args, container }) => {\n          if (args?.value === sharedState.NONE && !hasDefault) {\n            return null\n          }\n\n          return variantFn(\n            args?.value === sharedState.NONE\n              ? options.values.DEFAULT\n              : // Falling back to args if it is a string, otherwise '' for older intellisense\n                // (JetBrains) plugins.\n                args?.value ?? (typeof args === 'string' ? args : ''),\n            modifiersEnabled ? { modifier: args?.modifier, container } : { container }\n          )\n        },\n        {\n          ...options,\n          id,\n          type: VARIANT_TYPES.MatchVariant,\n          variantInfo: VARIANT_INFO.Dynamic,\n        }\n      )\n    },\n  }\n\n  return api\n}\n\nlet fileModifiedMapCache = new WeakMap()\nexport function getFileModifiedMap(context) {\n  if (!fileModifiedMapCache.has(context)) {\n    fileModifiedMapCache.set(context, new Map())\n  }\n  return fileModifiedMapCache.get(context)\n}\n\nfunction trackModified(files, fileModifiedMap) {\n  let changed = false\n  let mtimesToCommit = new Map()\n\n  for (let file of files) {\n    if (!file) continue\n\n    let parsed = url.parse(file)\n    let pathname = parsed.hash ? parsed.href.replace(parsed.hash, '') : parsed.href\n    pathname = parsed.search ? pathname.replace(parsed.search, '') : pathname\n    let newModified = fs.statSync(decodeURIComponent(pathname), { throwIfNoEntry: false })?.mtimeMs\n    if (!newModified) {\n      // It could happen that a file is passed in that doesn't exist. E.g.:\n      // postcss-cli will provide you a fake path when reading from stdin. This\n      // path then looks like /path-to-your-project/stdin In that case we just\n      // want to ignore it and don't track changes at all.\n      continue\n    }\n\n    if (!fileModifiedMap.has(file) || newModified > fileModifiedMap.get(file)) {\n      changed = true\n    }\n\n    mtimesToCommit.set(file, newModified)\n  }\n\n  return [changed, mtimesToCommit]\n}\n\nfunction extractVariantAtRules(node) {\n  node.walkAtRules((atRule) => {\n    if (['responsive', 'variants'].includes(atRule.name)) {\n      extractVariantAtRules(atRule)\n      atRule.before(atRule.nodes)\n      atRule.remove()\n    }\n  })\n}\n\nfunction collectLayerPlugins(root) {\n  let layerPlugins = []\n\n  root.each((node) => {\n    if (node.type === 'atrule' && ['responsive', 'variants'].includes(node.name)) {\n      node.name = 'layer'\n      node.params = 'utilities'\n    }\n  })\n\n  // Walk @layer rules and treat them like plugins\n  root.walkAtRules('layer', (layerRule) => {\n    extractVariantAtRules(layerRule)\n\n    if (layerRule.params === 'base') {\n      for (let node of layerRule.nodes) {\n        layerPlugins.push(function ({ addBase }) {\n          addBase(node, { respectPrefix: false })\n        })\n      }\n      layerRule.remove()\n    } else if (layerRule.params === 'components') {\n      for (let node of layerRule.nodes) {\n        layerPlugins.push(function ({ addComponents }) {\n          addComponents(node, { respectPrefix: false, preserveSource: true })\n        })\n      }\n      layerRule.remove()\n    } else if (layerRule.params === 'utilities') {\n      for (let node of layerRule.nodes) {\n        layerPlugins.push(function ({ addUtilities }) {\n          addUtilities(node, { respectPrefix: false, preserveSource: true })\n        })\n      }\n      layerRule.remove()\n    }\n  })\n\n  return layerPlugins\n}\n\nfunction resolvePlugins(context, root) {\n  let corePluginList = Object.entries({ ...variantPlugins, ...corePlugins })\n    .map(([name, plugin]) => {\n      if (!context.tailwindConfig.corePlugins.includes(name)) {\n        return null\n      }\n\n      return plugin\n    })\n    .filter(Boolean)\n\n  let userPlugins = context.tailwindConfig.plugins.map((plugin) => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin()\n    }\n\n    return typeof plugin === 'function' ? plugin : plugin.handler\n  })\n\n  let layerPlugins = collectLayerPlugins(root)\n\n  // TODO: This is a workaround for backwards compatibility, since custom variants\n  // were historically sorted before screen/stackable variants.\n  let beforeVariants = [\n    variantPlugins['childVariant'],\n    variantPlugins['pseudoElementVariants'],\n    variantPlugins['pseudoClassVariants'],\n    variantPlugins['hasVariants'],\n    variantPlugins['ariaVariants'],\n    variantPlugins['dataVariants'],\n  ]\n  let afterVariants = [\n    variantPlugins['supportsVariants'],\n    variantPlugins['reducedMotionVariants'],\n    variantPlugins['prefersContrastVariants'],\n    variantPlugins['screenVariants'],\n    variantPlugins['orientationVariants'],\n    variantPlugins['directionVariants'],\n    variantPlugins['darkVariants'],\n    variantPlugins['forcedColorsVariants'],\n    variantPlugins['printVariant'],\n  ]\n\n  // This is a compatibility fix for the pre 3.4 dark mode behavior\n  // `class` retains the old behavior, but `selector` keeps the new behavior\n  let isLegacyDarkMode =\n    context.tailwindConfig.darkMode === 'class' ||\n    (Array.isArray(context.tailwindConfig.darkMode) &&\n      context.tailwindConfig.darkMode[0] === 'class')\n\n  if (isLegacyDarkMode) {\n    afterVariants = [\n      variantPlugins['supportsVariants'],\n      variantPlugins['reducedMotionVariants'],\n      variantPlugins['prefersContrastVariants'],\n      variantPlugins['darkVariants'],\n      variantPlugins['screenVariants'],\n      variantPlugins['orientationVariants'],\n      variantPlugins['directionVariants'],\n      variantPlugins['forcedColorsVariants'],\n      variantPlugins['printVariant'],\n    ]\n  }\n\n  return [...corePluginList, ...beforeVariants, ...userPlugins, ...afterVariants, ...layerPlugins]\n}\n\nfunction registerPlugins(plugins, context) {\n  let variantList = []\n  let variantMap = new Map()\n  context.variantMap = variantMap\n\n  let offsets = new Offsets()\n  context.offsets = offsets\n\n  let classList = new Set()\n\n  let pluginApi = buildPluginApi(context.tailwindConfig, context, {\n    variantList,\n    variantMap,\n    offsets,\n    classList,\n  })\n\n  for (let plugin of plugins) {\n    if (Array.isArray(plugin)) {\n      for (let pluginItem of plugin) {\n        pluginItem(pluginApi)\n      }\n    } else {\n      plugin?.(pluginApi)\n    }\n  }\n\n  // Make sure to record bit masks for every variant\n  offsets.recordVariants(variantList, (variant) => variantMap.get(variant).length)\n\n  // Build variantMap\n  for (let [variantName, variantFunctions] of variantMap.entries()) {\n    context.variantMap.set(\n      variantName,\n      variantFunctions.map((variantFunction, idx) => [\n        offsets.forVariant(variantName, idx),\n        variantFunction,\n      ])\n    )\n  }\n\n  let safelist = (context.tailwindConfig.safelist ?? []).filter(Boolean)\n  if (safelist.length > 0) {\n    let checks = []\n\n    for (let value of safelist) {\n      if (typeof value === 'string') {\n        context.changedContent.push({ content: value, extension: 'html' })\n        continue\n      }\n\n      if (value instanceof RegExp) {\n        log.warn('root-regex', [\n          'Regular expressions in `safelist` work differently in Tailwind CSS v3.0.',\n          'Update your `safelist` configuration to eliminate this warning.',\n          'https://tailwindcss.com/docs/content-configuration#safelisting-classes',\n        ])\n        continue\n      }\n\n      checks.push(value)\n    }\n\n    if (checks.length > 0) {\n      let patternMatchingCount = new Map()\n      let prefixLength = context.tailwindConfig.prefix.length\n      let checkImportantUtils = checks.some((check) => check.pattern.source.includes('!'))\n\n      for (let util of classList) {\n        let utils = Array.isArray(util)\n          ? (() => {\n              let [utilName, options] = util\n              let values = Object.keys(options?.values ?? {})\n              let classes = values.map((value) => formatClass(utilName, value))\n\n              if (options?.supportsNegativeValues) {\n                // This is the normal negated version\n                // e.g. `-inset-1` or `-tw-inset-1`\n                classes = [...classes, ...classes.map((cls) => '-' + cls)]\n\n                // This is the negated version *after* the prefix\n                // e.g. `tw--inset-1`\n                // The prefix is already attached to util name\n                // So we add the negative after the prefix\n                classes = [\n                  ...classes,\n                  ...classes.map(\n                    (cls) => cls.slice(0, prefixLength) + '-' + cls.slice(prefixLength)\n                  ),\n                ]\n              }\n\n              if (options.types.some(({ type }) => type === 'color')) {\n                classes = [\n                  ...classes,\n                  ...classes.flatMap((cls) =>\n                    Object.keys(context.tailwindConfig.theme.opacity).map(\n                      (opacity) => `${cls}/${opacity}`\n                    )\n                  ),\n                ]\n              }\n\n              if (checkImportantUtils && options?.respectImportant) {\n                classes = [...classes, ...classes.map((cls) => '!' + cls)]\n              }\n\n              return classes\n            })()\n          : [util]\n\n        for (let util of utils) {\n          for (let { pattern, variants = [] } of checks) {\n            // RegExp with the /g flag are stateful, so let's reset the last\n            // index pointer to reset the state.\n            pattern.lastIndex = 0\n\n            if (!patternMatchingCount.has(pattern)) {\n              patternMatchingCount.set(pattern, 0)\n            }\n\n            if (!pattern.test(util)) continue\n\n            patternMatchingCount.set(pattern, patternMatchingCount.get(pattern) + 1)\n\n            context.changedContent.push({ content: util, extension: 'html' })\n            for (let variant of variants) {\n              context.changedContent.push({\n                content: variant + context.tailwindConfig.separator + util,\n                extension: 'html',\n              })\n            }\n          }\n        }\n      }\n\n      for (let [regex, count] of patternMatchingCount.entries()) {\n        if (count !== 0) continue\n\n        log.warn([\n          `The safelist pattern \\`${regex}\\` doesn't match any Tailwind CSS classes.`,\n          'Fix this pattern or remove it from your `safelist` configuration.',\n          'https://tailwindcss.com/docs/content-configuration#safelisting-classes',\n        ])\n      }\n    }\n  }\n\n  let darkClassName = [].concat(context.tailwindConfig.darkMode ?? 'media')[1] ?? 'dark'\n\n  // A list of utilities that are used by certain Tailwind CSS utilities but\n  // that don't exist on their own. This will result in them \"not existing\" and\n  // sorting could be weird since you still require them in order to make the\n  // host utilities work properly. (Thanks Biology)\n  let parasiteUtilities = [\n    prefix(context, darkClassName),\n    prefix(context, 'group'),\n    prefix(context, 'peer'),\n  ]\n  context.getClassOrder = function getClassOrder(classes) {\n    // Sort classes so they're ordered in a deterministic manner\n    let sorted = [...classes].sort((a, z) => {\n      if (a === z) return 0\n      if (a < z) return -1\n      return 1\n    })\n\n    // Non-util classes won't be generated, so we default them to null\n    let sortedClassNames = new Map(sorted.map((className) => [className, null]))\n\n    // Sort all classes in order\n    // Non-tailwind classes won't be generated and will be left as `null`\n    let rules = generateRules(new Set(sorted), context, true)\n    rules = context.offsets.sort(rules)\n\n    let idx = BigInt(parasiteUtilities.length)\n\n    for (const [, rule] of rules) {\n      let candidate = rule.raws.tailwind.candidate\n\n      // When multiple rules match a candidate\n      // always take the position of the first one\n      sortedClassNames.set(candidate, sortedClassNames.get(candidate) ?? idx++)\n    }\n\n    return classes.map((className) => {\n      let order = sortedClassNames.get(className) ?? null\n      let parasiteIndex = parasiteUtilities.indexOf(className)\n\n      if (order === null && parasiteIndex !== -1) {\n        // This will make sure that it is at the very beginning of the\n        // `components` layer which technically means 'before any\n        // components'.\n        order = BigInt(parasiteIndex)\n      }\n\n      return [className, order]\n    })\n  }\n\n  // Generate a list of strings for autocompletion purposes, e.g.\n  // ['uppercase', 'lowercase', ...]\n  context.getClassList = function getClassList(options = {}) {\n    let output = []\n\n    for (let util of classList) {\n      if (Array.isArray(util)) {\n        let [utilName, utilOptions] = util\n        let negativeClasses = []\n\n        let modifiers = Object.keys(utilOptions?.modifiers ?? {})\n\n        if (utilOptions?.types?.some(({ type }) => type === 'color')) {\n          modifiers.push(...Object.keys(context.tailwindConfig.theme.opacity ?? {}))\n        }\n\n        let metadata = { modifiers }\n        let includeMetadata = options.includeMetadata && modifiers.length > 0\n\n        for (let [key, value] of Object.entries(utilOptions?.values ?? {})) {\n          // Ignore undefined and null values\n          if (value == null) {\n            continue\n          }\n\n          let cls = formatClass(utilName, key)\n          output.push(includeMetadata ? [cls, metadata] : cls)\n\n          if (utilOptions?.supportsNegativeValues && negateValue(value)) {\n            let cls = formatClass(utilName, `-${key}`)\n            negativeClasses.push(includeMetadata ? [cls, metadata] : cls)\n          }\n        }\n\n        output.push(...negativeClasses)\n      } else {\n        output.push(util)\n      }\n    }\n\n    return output\n  }\n\n  // Generate a list of available variants with meta information of the type of variant.\n  context.getVariants = function getVariants() {\n    let result = []\n    for (let [name, options] of context.variantOptions.entries()) {\n      if (options.variantInfo === VARIANT_INFO.Base) continue\n\n      result.push({\n        name,\n        isArbitrary: options.type === Symbol.for('MATCH_VARIANT'),\n        values: Object.keys(options.values ?? {}),\n        hasDash: name !== '@',\n        selectors({ modifier, value } = {}) {\n          let candidate = '__TAILWIND_PLACEHOLDER__'\n\n          let rule = postcss.rule({ selector: `.${candidate}` })\n          let container = postcss.root({ nodes: [rule.clone()] })\n\n          let before = container.toString()\n\n          let fns = (context.variantMap.get(name) ?? []).flatMap(([_, fn]) => fn)\n          let formatStrings = []\n          for (let fn of fns) {\n            let localFormatStrings = []\n\n            let api = {\n              args: { modifier, value: options.values?.[value] ?? value },\n              separator: context.tailwindConfig.separator,\n              modifySelectors(modifierFunction) {\n                // Run the modifierFunction over each rule\n                container.each((rule) => {\n                  if (rule.type !== 'rule') {\n                    return\n                  }\n\n                  rule.selectors = rule.selectors.map((selector) => {\n                    return modifierFunction({\n                      get className() {\n                        return getClassNameFromSelector(selector)\n                      },\n                      selector,\n                    })\n                  })\n                })\n\n                return container\n              },\n              format(str) {\n                localFormatStrings.push(str)\n              },\n              wrap(wrapper) {\n                localFormatStrings.push(`@${wrapper.name} ${wrapper.params} { & }`)\n              },\n              container,\n            }\n\n            let ruleWithVariant = fn(api)\n            if (localFormatStrings.length > 0) {\n              formatStrings.push(localFormatStrings)\n            }\n\n            if (Array.isArray(ruleWithVariant)) {\n              for (let variantFunction of ruleWithVariant) {\n                localFormatStrings = []\n                variantFunction(api)\n                formatStrings.push(localFormatStrings)\n              }\n            }\n          }\n\n          // Reverse engineer the result of the `container`\n          let manualFormatStrings = []\n          let after = container.toString()\n\n          if (before !== after) {\n            // Figure out all selectors\n            container.walkRules((rule) => {\n              let modified = rule.selector\n\n              // Rebuild the base selector, this is what plugin authors would do\n              // as well. E.g.: `${variant}${separator}${className}`.\n              // However, plugin authors probably also prepend or append certain\n              // classes, pseudos, ids, ...\n              let rebuiltBase = selectorParser((selectors) => {\n                selectors.walkClasses((classNode) => {\n                  classNode.value = `${name}${context.tailwindConfig.separator}${classNode.value}`\n                })\n              }).processSync(modified)\n\n              // Now that we know the original selector, the new selector, and\n              // the rebuild part in between, we can replace the part that plugin\n              // authors need to rebuild with `&`, and eventually store it in the\n              // collectedFormats. Similar to what `format('...')` would do.\n              //\n              // E.g.:\n              //                   variant: foo\n              //                  selector: .markdown > p\n              //      modified (by plugin): .foo .foo\\\\:markdown > p\n              //    rebuiltBase (internal): .foo\\\\:markdown > p\n              //                    format: .foo &\n              manualFormatStrings.push(modified.replace(rebuiltBase, '&').replace(candidate, '&'))\n            })\n\n            // Figure out all atrules\n            container.walkAtRules((atrule) => {\n              manualFormatStrings.push(`@${atrule.name} (${atrule.params}) { & }`)\n            })\n          }\n\n          let isArbitraryVariant = !(value in (options.values ?? {}))\n          let internalFeatures = options[INTERNAL_FEATURES] ?? {}\n\n          let respectPrefix = (() => {\n            if (isArbitraryVariant) return false\n            if (internalFeatures.respectPrefix === false) return false\n            return true\n          })()\n\n          formatStrings = formatStrings.map((format) =>\n            format.map((str) => ({\n              format: str,\n              respectPrefix,\n            }))\n          )\n\n          manualFormatStrings = manualFormatStrings.map((format) => ({\n            format,\n            respectPrefix,\n          }))\n\n          let opts = {\n            candidate,\n            context,\n          }\n\n          let result = formatStrings.map((formats) =>\n            finalizeSelector(`.${candidate}`, formatVariantSelector(formats, opts), opts)\n              .replace(`.${candidate}`, '&')\n              .replace('{ & }', '')\n              .trim()\n          )\n\n          if (manualFormatStrings.length > 0) {\n            result.push(\n              formatVariantSelector(manualFormatStrings, opts)\n                .toString()\n                .replace(`.${candidate}`, '&')\n            )\n          }\n\n          return result\n        },\n      })\n    }\n\n    return result\n  }\n}\n\n/**\n * Mark as class as retroactively invalid\n *\n *\n * @param {string} candidate\n */\nfunction markInvalidUtilityCandidate(context, candidate) {\n  if (!context.classCache.has(candidate)) {\n    return\n  }\n\n  // Mark this as not being a real utility\n  context.notClassCache.add(candidate)\n\n  // Remove it from any candidate-specific caches\n  context.classCache.delete(candidate)\n  context.applyClassCache.delete(candidate)\n  context.candidateRuleMap.delete(candidate)\n  context.candidateRuleCache.delete(candidate)\n\n  // Ensure the stylesheet gets rebuilt\n  context.stylesheetCache = null\n}\n\n/**\n * Mark as class as retroactively invalid\n *\n * @param {import('postcss').Node} node\n */\nfunction markInvalidUtilityNode(context, node) {\n  let candidate = node.raws.tailwind.candidate\n\n  if (!candidate) {\n    return\n  }\n\n  for (const entry of context.ruleCache) {\n    if (entry[1].raws.tailwind.candidate === candidate) {\n      context.ruleCache.delete(entry)\n      // context.postCssNodeCache.delete(node)\n    }\n  }\n\n  markInvalidUtilityCandidate(context, candidate)\n}\n\nexport function createContext(tailwindConfig, changedContent = [], root = postcss.root()) {\n  let context = {\n    disposables: [],\n    ruleCache: new Set(),\n    candidateRuleCache: new Map(),\n    classCache: new Map(),\n    applyClassCache: new Map(),\n    // Seed the not class cache with the blocklist (which is only strings)\n    notClassCache: new Set(tailwindConfig.blocklist ?? []),\n    postCssNodeCache: new Map(),\n    candidateRuleMap: new Map(),\n    tailwindConfig,\n    changedContent: changedContent,\n    variantMap: new Map(),\n    stylesheetCache: null,\n    variantOptions: new Map(),\n\n    markInvalidUtilityCandidate: (candidate) => markInvalidUtilityCandidate(context, candidate),\n    markInvalidUtilityNode: (node) => markInvalidUtilityNode(context, node),\n  }\n\n  let resolvedPlugins = resolvePlugins(context, root)\n  registerPlugins(resolvedPlugins, context)\n\n  return context\n}\n\nlet contextMap = sharedState.contextMap\nlet configContextMap = sharedState.configContextMap\nlet contextSourcesMap = sharedState.contextSourcesMap\n\nexport function getContext(\n  root,\n  result,\n  tailwindConfig,\n  userConfigPath,\n  tailwindConfigHash,\n  contextDependencies\n) {\n  let sourcePath = result.opts.from\n  let isConfigFile = userConfigPath !== null\n\n  env.DEBUG && console.log('Source path:', sourcePath)\n\n  let existingContext\n\n  if (isConfigFile && contextMap.has(sourcePath)) {\n    existingContext = contextMap.get(sourcePath)\n  } else if (configContextMap.has(tailwindConfigHash)) {\n    let context = configContextMap.get(tailwindConfigHash)\n    contextSourcesMap.get(context).add(sourcePath)\n    contextMap.set(sourcePath, context)\n\n    existingContext = context\n  }\n\n  let cssDidChange = hasContentChanged(sourcePath, root)\n\n  // If there's already a context in the cache and we don't need to\n  // reset the context, return the cached context.\n  if (existingContext) {\n    let [contextDependenciesChanged, mtimesToCommit] = trackModified(\n      [...contextDependencies],\n      getFileModifiedMap(existingContext)\n    )\n    if (!contextDependenciesChanged && !cssDidChange) {\n      return [existingContext, false, mtimesToCommit]\n    }\n  }\n\n  // If this source is in the context map, get the old context.\n  // Remove this source from the context sources for the old context,\n  // and clean up that context if no one else is using it. This can be\n  // called by many processes in rapid succession, so we check for presence\n  // first because the first process to run this code will wipe it out first.\n  if (contextMap.has(sourcePath)) {\n    let oldContext = contextMap.get(sourcePath)\n    if (contextSourcesMap.has(oldContext)) {\n      contextSourcesMap.get(oldContext).delete(sourcePath)\n      if (contextSourcesMap.get(oldContext).size === 0) {\n        contextSourcesMap.delete(oldContext)\n        for (let [tailwindConfigHash, context] of configContextMap) {\n          if (context === oldContext) {\n            configContextMap.delete(tailwindConfigHash)\n          }\n        }\n        for (let disposable of oldContext.disposables.splice(0)) {\n          disposable(oldContext)\n        }\n      }\n    }\n  }\n\n  env.DEBUG && console.log('Setting up new context...')\n\n  let context = createContext(tailwindConfig, [], root)\n\n  Object.assign(context, {\n    userConfigPath,\n  })\n\n  let [, mtimesToCommit] = trackModified([...contextDependencies], getFileModifiedMap(context))\n\n  // ---\n\n  // Update all context tracking state\n\n  configContextMap.set(tailwindConfigHash, context)\n  contextMap.set(sourcePath, context)\n\n  if (!contextSourcesMap.has(context)) {\n    contextSourcesMap.set(context, new Set())\n  }\n\n  contextSourcesMap.get(context).add(sourcePath)\n\n  return [context, true, mtimesToCommit]\n}\n", "import postcss from 'postcss'\nimport isPlainObject from './isPlainObject'\n\nexport default function transformThemeValue(themeSection) {\n  if (['fontSize', 'outline'].includes(themeSection)) {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      if (Array.isArray(value)) value = value[0]\n\n      return value\n    }\n  }\n\n  if (themeSection === 'fontFamily') {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      let families = Array.isArray(value) && isPlainObject(value[1]) ? value[0] : value\n      return Array.isArray(families) ? families.join(', ') : families\n    }\n  }\n\n  if (\n    [\n      'boxShadow',\n      'transitionProperty',\n      'transitionDuration',\n      'transitionDelay',\n      'transitionTimingFunction',\n      'backgroundImage',\n      'backgroundSize',\n      'backgroundColor',\n      'cursor',\n      'animation',\n    ].includes(themeSection)\n  ) {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      if (Array.isArray(value)) value = value.join(', ')\n\n      return value\n    }\n  }\n\n  // For backwards compatibility reasons, before we switched to underscores\n  // instead of commas for arbitrary values.\n  if (['gridTemplateColumns', 'gridTemplateRows', 'objectPosition'].includes(themeSection)) {\n    return (value) => {\n      if (typeof value === 'function') value = value({})\n      if (typeof value === 'string') value = postcss.list.comma(value).join(' ')\n\n      return value\n    }\n  }\n\n  return (value, opts = {}) => {\n    if (typeof value === 'function') {\n      value = value(opts)\n    }\n\n    return value\n  }\n}\n", "export const join = (): string => '';\n", "import fs from 'fs'\nimport * as path from 'path'\nimport postcss from 'postcss'\nimport createUtilityPlugin from './util/createUtilityPlugin'\nimport buildMediaQuery from './util/buildMediaQuery'\nimport escapeClassName from './util/escapeClassName'\nimport parseAnimationValue from './util/parseAnimationValue'\nimport flattenColorPalette from './util/flattenColorPalette'\nimport withAlphaVariable, { withAlphaValue } from './util/withAlphaVariable'\nimport toColorValue from './util/toColorValue'\nimport isPlainObject from './util/isPlainObject'\nimport transformThemeValue from './util/transformThemeValue'\nimport { version as tailwindVersion } from '../package.json'\nimport log from './util/log'\nimport {\n  normalizeScreens,\n  isScreenSortable,\n  compareScreens,\n  toScreen,\n} from './util/normalizeScreens'\nimport { formatBoxShadowValue, parseBoxShadowValue } from './util/parseBoxShadowValue'\nimport { removeAlphaVariables } from './util/removeAlphaVariables'\nimport { flagEnabled } from './featureFlags'\nimport { normalize } from './util/dataTypes'\nimport { INTERNAL_FEATURES } from './lib/setupContextUtils'\n\nexport let variantPlugins = {\n  childVariant: ({ addVariant }) => {\n    addVariant('*', '& > *')\n  },\n  pseudoElementVariants: ({ addVariant }) => {\n    addVariant('first-letter', '&::first-letter')\n    addVariant('first-line', '&::first-line')\n\n    addVariant('marker', [\n      ({ container }) => {\n        removeAlphaVariables(container, ['--tw-text-opacity'])\n\n        return '& *::marker'\n      },\n      ({ container }) => {\n        removeAlphaVariables(container, ['--tw-text-opacity'])\n\n        return '&::marker'\n      },\n    ])\n\n    addVariant('selection', ['& *::selection', '&::selection'])\n\n    addVariant('file', '&::file-selector-button')\n\n    addVariant('placeholder', '&::placeholder')\n\n    addVariant('backdrop', '&::backdrop')\n\n    addVariant('before', ({ container }) => {\n      container.walkRules((rule) => {\n        let foundContent = false\n        rule.walkDecls('content', () => {\n          foundContent = true\n        })\n\n        if (!foundContent) {\n          rule.prepend(postcss.decl({ prop: 'content', value: 'var(--tw-content)' }))\n        }\n      })\n\n      return '&::before'\n    })\n\n    addVariant('after', ({ container }) => {\n      container.walkRules((rule) => {\n        let foundContent = false\n        rule.walkDecls('content', () => {\n          foundContent = true\n        })\n\n        if (!foundContent) {\n          rule.prepend(postcss.decl({ prop: 'content', value: 'var(--tw-content)' }))\n        }\n      })\n\n      return '&::after'\n    })\n  },\n\n  pseudoClassVariants: ({ addVariant, matchVariant, config, prefix }) => {\n    let pseudoVariants = [\n      // Positional\n      ['first', '&:first-child'],\n      ['last', '&:last-child'],\n      ['only', '&:only-child'],\n      ['odd', '&:nth-child(odd)'],\n      ['even', '&:nth-child(even)'],\n      'first-of-type',\n      'last-of-type',\n      'only-of-type',\n\n      // State\n      [\n        'visited',\n        ({ container }) => {\n          removeAlphaVariables(container, [\n            '--tw-text-opacity',\n            '--tw-border-opacity',\n            '--tw-bg-opacity',\n          ])\n\n          return '&:visited'\n        },\n      ],\n      'target',\n      ['open', '&[open]'],\n\n      // Forms\n      'default',\n      'checked',\n      'indeterminate',\n      'placeholder-shown',\n      'autofill',\n      'optional',\n      'required',\n      'valid',\n      'invalid',\n      'in-range',\n      'out-of-range',\n      'read-only',\n\n      // Content\n      'empty',\n\n      // Interactive\n      'focus-within',\n      [\n        'hover',\n        !flagEnabled(config(), 'hoverOnlyWhenSupported')\n          ? '&:hover'\n          : '@media (hover: hover) and (pointer: fine) { &:hover }',\n      ],\n      'focus',\n      'focus-visible',\n      'active',\n      'enabled',\n      'disabled',\n    ].map((variant) => (Array.isArray(variant) ? variant : [variant, `&:${variant}`]))\n\n    for (let [variantName, state] of pseudoVariants) {\n      addVariant(variantName, (ctx) => {\n        let result = typeof state === 'function' ? state(ctx) : state\n\n        return result\n      })\n    }\n\n    let variants = {\n      group: (_, { modifier }) =>\n        modifier\n          ? [`:merge(${prefix('.group')}\\\\/${escapeClassName(modifier)})`, ' &']\n          : [`:merge(${prefix('.group')})`, ' &'],\n      peer: (_, { modifier }) =>\n        modifier\n          ? [`:merge(${prefix('.peer')}\\\\/${escapeClassName(modifier)})`, ' ~ &']\n          : [`:merge(${prefix('.peer')})`, ' ~ &'],\n    }\n\n    for (let [name, fn] of Object.entries(variants)) {\n      matchVariant(\n        name,\n        (value = '', extra) => {\n          let result = normalize(typeof value === 'function' ? value(extra) : value)\n          if (!result.includes('&')) result = '&' + result\n\n          let [a, b] = fn('', extra)\n\n          let start = null\n          let end = null\n          let quotes = 0\n\n          for (let i = 0; i < result.length; ++i) {\n            let c = result[i]\n            if (c === '&') {\n              start = i\n            } else if (c === \"'\" || c === '\"') {\n              quotes += 1\n            } else if (start !== null && c === ' ' && !quotes) {\n              end = i\n            }\n          }\n\n          if (start !== null && end === null) {\n            end = result.length\n          }\n\n          // Basically this but can handle quotes:\n          // result.replace(/&(\\S+)?/g, (_, pseudo = '') => a + pseudo + b)\n\n          return result.slice(0, start) + a + result.slice(start + 1, end) + b + result.slice(end)\n        },\n        {\n          values: Object.fromEntries(pseudoVariants),\n          [INTERNAL_FEATURES]: {\n            respectPrefix: false,\n          },\n        }\n      )\n    }\n  },\n\n  directionVariants: ({ addVariant }) => {\n    addVariant('ltr', '&:where([dir=\"ltr\"], [dir=\"ltr\"] *)')\n    addVariant('rtl', '&:where([dir=\"rtl\"], [dir=\"rtl\"] *)')\n  },\n\n  reducedMotionVariants: ({ addVariant }) => {\n    addVariant('motion-safe', '@media (prefers-reduced-motion: no-preference)')\n    addVariant('motion-reduce', '@media (prefers-reduced-motion: reduce)')\n  },\n\n  darkVariants: ({ config, addVariant }) => {\n    let [mode, selector = '.dark'] = [].concat(config('darkMode', 'media'))\n\n    if (mode === false) {\n      mode = 'media'\n      log.warn('darkmode-false', [\n        'The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.',\n        'Change `darkMode` to `media` or remove it entirely.',\n        'https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration',\n      ])\n    }\n\n    if (mode === 'variant') {\n      let formats\n      if (Array.isArray(selector)) {\n        formats = selector\n      } else if (typeof selector === 'function') {\n        formats = selector\n      } else if (typeof selector === 'string') {\n        formats = [selector]\n      }\n\n      // TODO: We could also add these warnings if the user passes a function that returns string | string[]\n      // But this is an advanced enough use case that it's probably not necessary\n      if (Array.isArray(formats)) {\n        for (let format of formats) {\n          if (format === '.dark') {\n            mode = false\n            log.warn('darkmode-variant-without-selector', [\n              'When using `variant` for `darkMode`, you must provide a selector.',\n              'Example: `darkMode: [\"variant\", \".your-selector &\"]`',\n            ])\n          } else if (!format.includes('&')) {\n            mode = false\n            log.warn('darkmode-variant-without-ampersand', [\n              'When using `variant` for `darkMode`, your selector must contain `&`.',\n              'Example `darkMode: [\"variant\", \".your-selector &\"]`',\n            ])\n          }\n        }\n      }\n\n      selector = formats\n    }\n\n    if (mode === 'selector') {\n      // New preferred behavior\n      addVariant('dark', `&:where(${selector}, ${selector} *)`)\n    } else if (mode === 'media') {\n      addVariant('dark', '@media (prefers-color-scheme: dark)')\n    } else if (mode === 'variant') {\n      addVariant('dark', selector)\n    } else if (mode === 'class') {\n      // Old behavior\n      addVariant('dark', `:is(${selector} &)`)\n    }\n  },\n\n  printVariant: ({ addVariant }) => {\n    addVariant('print', '@media print')\n  },\n\n  screenVariants: ({ theme, addVariant, matchVariant }) => {\n    let rawScreens = theme('screens') ?? {}\n    let areSimpleScreens = Object.values(rawScreens).every((v) => typeof v === 'string')\n    let screens = normalizeScreens(theme('screens'))\n\n    /** @type {Set<string>} */\n    let unitCache = new Set([])\n\n    /** @param {string} value */\n    function units(value) {\n      return value.match(/(\\D+)$/)?.[1] ?? '(none)'\n    }\n\n    /** @param {string} value */\n    function recordUnits(value) {\n      if (value !== undefined) {\n        unitCache.add(units(value))\n      }\n    }\n\n    /** @param {string} value */\n    function canUseUnits(value) {\n      recordUnits(value)\n\n      // If the cache was empty it'll become 1 because we've just added the current unit\n      // If the cache was not empty and the units are the same the size doesn't change\n      // Otherwise, if the units are different from what is already known the size will always be > 1\n      return unitCache.size === 1\n    }\n\n    for (const screen of screens) {\n      for (const value of screen.values) {\n        recordUnits(value.min)\n        recordUnits(value.max)\n      }\n    }\n\n    let screensUseConsistentUnits = unitCache.size <= 1\n\n    /**\n     * @typedef {import('./util/normalizeScreens').Screen} Screen\n     */\n\n    /**\n     * @param {'min' | 'max'} type\n     * @returns {Record<string, Screen>}\n     */\n    function buildScreenValues(type) {\n      return Object.fromEntries(\n        screens\n          .filter((screen) => isScreenSortable(screen).result)\n          .map((screen) => {\n            let { min, max } = screen.values[0]\n\n            if (type === 'min' && min !== undefined) {\n              return screen\n            } else if (type === 'min' && max !== undefined) {\n              return { ...screen, not: !screen.not }\n            } else if (type === 'max' && max !== undefined) {\n              return screen\n            } else if (type === 'max' && min !== undefined) {\n              return { ...screen, not: !screen.not }\n            }\n          })\n          .map((screen) => [screen.name, screen])\n      )\n    }\n\n    /**\n     * @param {'min' | 'max'} type\n     * @returns {(a: { value: string | Screen }, z: { value: string | Screen }) => number}\n     */\n    function buildSort(type) {\n      return (a, z) => compareScreens(type, a.value, z.value)\n    }\n\n    let maxSort = buildSort('max')\n    let minSort = buildSort('min')\n\n    /** @param {'min'|'max'} type */\n    function buildScreenVariant(type) {\n      return (value) => {\n        if (!areSimpleScreens) {\n          log.warn('complex-screen-config', [\n            'The `min-*` and `max-*` variants are not supported with a `screens` configuration containing objects.',\n          ])\n\n          return []\n        } else if (!screensUseConsistentUnits) {\n          log.warn('mixed-screen-units', [\n            'The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.',\n          ])\n\n          return []\n        } else if (typeof value === 'string' && !canUseUnits(value)) {\n          log.warn('minmax-have-mixed-units', [\n            'The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.',\n          ])\n\n          return []\n        }\n\n        return [`@media ${buildMediaQuery(toScreen(value, type))}`]\n      }\n    }\n\n    matchVariant('max', buildScreenVariant('max'), {\n      sort: maxSort,\n      values: areSimpleScreens ? buildScreenValues('max') : {},\n    })\n\n    // screens and min-* are sorted together when they can be\n    let id = 'min-screens'\n    for (let screen of screens) {\n      addVariant(screen.name, `@media ${buildMediaQuery(screen)}`, {\n        id,\n        sort: areSimpleScreens && screensUseConsistentUnits ? minSort : undefined,\n        value: screen,\n      })\n    }\n\n    matchVariant('min', buildScreenVariant('min'), {\n      id,\n      sort: minSort,\n    })\n  },\n\n  supportsVariants: ({ matchVariant, theme }) => {\n    matchVariant(\n      'supports',\n      (value = '') => {\n        let check = normalize(value)\n        let isRaw = /^\\w*\\s*\\(/.test(check)\n\n        // Chrome has a bug where `(condtion1)or(condition2)` is not valid\n        // But `(condition1) or (condition2)` is supported.\n        check = isRaw ? check.replace(/\\b(and|or|not)\\b/g, ' $1 ') : check\n\n        if (isRaw) {\n          return `@supports ${check}`\n        }\n\n        if (!check.includes(':')) {\n          check = `${check}: var(--tw)`\n        }\n\n        if (!(check.startsWith('(') && check.endsWith(')'))) {\n          check = `(${check})`\n        }\n\n        return `@supports ${check}`\n      },\n      { values: theme('supports') ?? {} }\n    )\n  },\n\n  hasVariants: ({ matchVariant }) => {\n    matchVariant('has', (value) => `&:has(${normalize(value)})`, { values: {} })\n    matchVariant(\n      'group-has',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.group\\\\/${modifier}):has(${normalize(value)}) &`\n          : `:merge(.group):has(${normalize(value)}) &`,\n      { values: {} }\n    )\n    matchVariant(\n      'peer-has',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.peer\\\\/${modifier}):has(${normalize(value)}) ~ &`\n          : `:merge(.peer):has(${normalize(value)}) ~ &`,\n      { values: {} }\n    )\n  },\n\n  ariaVariants: ({ matchVariant, theme }) => {\n    matchVariant('aria', (value) => `&[aria-${normalize(value)}]`, { values: theme('aria') ?? {} })\n    matchVariant(\n      'group-aria',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.group\\\\/${modifier})[aria-${normalize(value)}] &`\n          : `:merge(.group)[aria-${normalize(value)}] &`,\n      { values: theme('aria') ?? {} }\n    )\n    matchVariant(\n      'peer-aria',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.peer\\\\/${modifier})[aria-${normalize(value)}] ~ &`\n          : `:merge(.peer)[aria-${normalize(value)}] ~ &`,\n      { values: theme('aria') ?? {} }\n    )\n  },\n\n  dataVariants: ({ matchVariant, theme }) => {\n    matchVariant('data', (value) => `&[data-${normalize(value)}]`, { values: theme('data') ?? {} })\n    matchVariant(\n      'group-data',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.group\\\\/${modifier})[data-${normalize(value)}] &`\n          : `:merge(.group)[data-${normalize(value)}] &`,\n      { values: theme('data') ?? {} }\n    )\n    matchVariant(\n      'peer-data',\n      (value, { modifier }) =>\n        modifier\n          ? `:merge(.peer\\\\/${modifier})[data-${normalize(value)}] ~ &`\n          : `:merge(.peer)[data-${normalize(value)}] ~ &`,\n      { values: theme('data') ?? {} }\n    )\n  },\n\n  orientationVariants: ({ addVariant }) => {\n    addVariant('portrait', '@media (orientation: portrait)')\n    addVariant('landscape', '@media (orientation: landscape)')\n  },\n\n  prefersContrastVariants: ({ addVariant }) => {\n    addVariant('contrast-more', '@media (prefers-contrast: more)')\n    addVariant('contrast-less', '@media (prefers-contrast: less)')\n  },\n\n  forcedColorsVariants: ({ addVariant }) => {\n    addVariant('forced-colors', '@media (forced-colors: active)')\n  },\n}\n\nlet cssTransformValue = [\n  'translate(var(--tw-translate-x), var(--tw-translate-y))',\n  'rotate(var(--tw-rotate))',\n  'skewX(var(--tw-skew-x))',\n  'skewY(var(--tw-skew-y))',\n  'scaleX(var(--tw-scale-x))',\n  'scaleY(var(--tw-scale-y))',\n].join(' ')\n\nlet cssFilterValue = [\n  'var(--tw-blur)',\n  'var(--tw-brightness)',\n  'var(--tw-contrast)',\n  'var(--tw-grayscale)',\n  'var(--tw-hue-rotate)',\n  'var(--tw-invert)',\n  'var(--tw-saturate)',\n  'var(--tw-sepia)',\n  'var(--tw-drop-shadow)',\n].join(' ')\n\nlet cssBackdropFilterValue = [\n  'var(--tw-backdrop-blur)',\n  'var(--tw-backdrop-brightness)',\n  'var(--tw-backdrop-contrast)',\n  'var(--tw-backdrop-grayscale)',\n  'var(--tw-backdrop-hue-rotate)',\n  'var(--tw-backdrop-invert)',\n  'var(--tw-backdrop-opacity)',\n  'var(--tw-backdrop-saturate)',\n  'var(--tw-backdrop-sepia)',\n].join(' ')\n\nexport let corePlugins = {\n  preflight: ({ addBase }) => {\n    let preflightStyles = postcss.parse(\n      fs.readFileSync(path.join(__dirname, './css/preflight.css'), 'utf8')\n    )\n\n    addBase([\n      postcss.comment({\n        text: `! tailwindcss v${tailwindVersion} | MIT License | https://tailwindcss.com`,\n      }),\n      ...preflightStyles.nodes,\n    ])\n  },\n\n  container: (() => {\n    function extractMinWidths(breakpoints = []) {\n      return breakpoints\n        .flatMap((breakpoint) => breakpoint.values.map((breakpoint) => breakpoint.min))\n        .filter((v) => v !== undefined)\n    }\n\n    function mapMinWidthsToPadding(minWidths, screens, paddings) {\n      if (typeof paddings === 'undefined') {\n        return []\n      }\n\n      if (!(typeof paddings === 'object' && paddings !== null)) {\n        return [\n          {\n            screen: 'DEFAULT',\n            minWidth: 0,\n            padding: paddings,\n          },\n        ]\n      }\n\n      let mapping = []\n\n      if (paddings.DEFAULT) {\n        mapping.push({\n          screen: 'DEFAULT',\n          minWidth: 0,\n          padding: paddings.DEFAULT,\n        })\n      }\n\n      for (let minWidth of minWidths) {\n        for (let screen of screens) {\n          for (let { min } of screen.values) {\n            if (min === minWidth) {\n              mapping.push({ minWidth, padding: paddings[screen.name] })\n            }\n          }\n        }\n      }\n\n      return mapping\n    }\n\n    return function ({ addComponents, theme }) {\n      let screens = normalizeScreens(theme('container.screens', theme('screens')))\n      let minWidths = extractMinWidths(screens)\n      let paddings = mapMinWidthsToPadding(minWidths, screens, theme('container.padding'))\n\n      let generatePaddingFor = (minWidth) => {\n        let paddingConfig = paddings.find((padding) => padding.minWidth === minWidth)\n\n        if (!paddingConfig) {\n          return {}\n        }\n\n        return {\n          paddingRight: paddingConfig.padding,\n          paddingLeft: paddingConfig.padding,\n        }\n      }\n\n      let atRules = Array.from(\n        new Set(minWidths.slice().sort((a, z) => parseInt(a) - parseInt(z)))\n      ).map((minWidth) => ({\n        [`@media (min-width: ${minWidth})`]: {\n          '.container': {\n            'max-width': minWidth,\n            ...generatePaddingFor(minWidth),\n          },\n        },\n      }))\n\n      addComponents([\n        {\n          '.container': Object.assign(\n            { width: '100%' },\n            theme('container.center', false) ? { marginRight: 'auto', marginLeft: 'auto' } : {},\n            generatePaddingFor(0)\n          ),\n        },\n        ...atRules,\n      ])\n    }\n  })(),\n\n  accessibility: ({ addUtilities }) => {\n    addUtilities({\n      '.sr-only': {\n        position: 'absolute',\n        width: '1px',\n        height: '1px',\n        padding: '0',\n        margin: '-1px',\n        overflow: 'hidden',\n        clip: 'rect(0, 0, 0, 0)',\n        whiteSpace: 'nowrap',\n        borderWidth: '0',\n      },\n      '.not-sr-only': {\n        position: 'static',\n        width: 'auto',\n        height: 'auto',\n        padding: '0',\n        margin: '0',\n        overflow: 'visible',\n        clip: 'auto',\n        whiteSpace: 'normal',\n      },\n    })\n  },\n\n  pointerEvents: ({ addUtilities }) => {\n    addUtilities({\n      '.pointer-events-none': { 'pointer-events': 'none' },\n      '.pointer-events-auto': { 'pointer-events': 'auto' },\n    })\n  },\n\n  visibility: ({ addUtilities }) => {\n    addUtilities({\n      '.visible': { visibility: 'visible' },\n      '.invisible': { visibility: 'hidden' },\n      '.collapse': { visibility: 'collapse' },\n    })\n  },\n\n  position: ({ addUtilities }) => {\n    addUtilities({\n      '.static': { position: 'static' },\n      '.fixed': { position: 'fixed' },\n      '.absolute': { position: 'absolute' },\n      '.relative': { position: 'relative' },\n      '.sticky': { position: 'sticky' },\n    })\n  },\n\n  inset: createUtilityPlugin(\n    'inset',\n    [\n      ['inset', ['inset']],\n      [\n        ['inset-x', ['left', 'right']],\n        ['inset-y', ['top', 'bottom']],\n      ],\n      [\n        ['start', ['inset-inline-start']],\n        ['end', ['inset-inline-end']],\n        ['top', ['top']],\n        ['right', ['right']],\n        ['bottom', ['bottom']],\n        ['left', ['left']],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  isolation: ({ addUtilities }) => {\n    addUtilities({\n      '.isolate': { isolation: 'isolate' },\n      '.isolation-auto': { isolation: 'auto' },\n    })\n  },\n\n  zIndex: createUtilityPlugin('zIndex', [['z', ['zIndex']]], { supportsNegativeValues: true }),\n  order: createUtilityPlugin('order', undefined, { supportsNegativeValues: true }),\n  gridColumn: createUtilityPlugin('gridColumn', [['col', ['gridColumn']]]),\n  gridColumnStart: createUtilityPlugin('gridColumnStart', [['col-start', ['gridColumnStart']]]),\n  gridColumnEnd: createUtilityPlugin('gridColumnEnd', [['col-end', ['gridColumnEnd']]]),\n  gridRow: createUtilityPlugin('gridRow', [['row', ['gridRow']]]),\n  gridRowStart: createUtilityPlugin('gridRowStart', [['row-start', ['gridRowStart']]]),\n  gridRowEnd: createUtilityPlugin('gridRowEnd', [['row-end', ['gridRowEnd']]]),\n\n  float: ({ addUtilities }) => {\n    addUtilities({\n      '.float-start': { float: 'inline-start' },\n      '.float-end': { float: 'inline-end' },\n      '.float-right': { float: 'right' },\n      '.float-left': { float: 'left' },\n      '.float-none': { float: 'none' },\n    })\n  },\n\n  clear: ({ addUtilities }) => {\n    addUtilities({\n      '.clear-start': { clear: 'inline-start' },\n      '.clear-end': { clear: 'inline-end' },\n      '.clear-left': { clear: 'left' },\n      '.clear-right': { clear: 'right' },\n      '.clear-both': { clear: 'both' },\n      '.clear-none': { clear: 'none' },\n    })\n  },\n\n  margin: createUtilityPlugin(\n    'margin',\n    [\n      ['m', ['margin']],\n      [\n        ['mx', ['margin-left', 'margin-right']],\n        ['my', ['margin-top', 'margin-bottom']],\n      ],\n      [\n        ['ms', ['margin-inline-start']],\n        ['me', ['margin-inline-end']],\n        ['mt', ['margin-top']],\n        ['mr', ['margin-right']],\n        ['mb', ['margin-bottom']],\n        ['ml', ['margin-left']],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  boxSizing: ({ addUtilities }) => {\n    addUtilities({\n      '.box-border': { 'box-sizing': 'border-box' },\n      '.box-content': { 'box-sizing': 'content-box' },\n    })\n  },\n\n  lineClamp: ({ matchUtilities, addUtilities, theme }) => {\n    matchUtilities(\n      {\n        'line-clamp': (value) => ({\n          overflow: 'hidden',\n          display: '-webkit-box',\n          '-webkit-box-orient': 'vertical',\n          '-webkit-line-clamp': `${value}`,\n        }),\n      },\n      { values: theme('lineClamp') }\n    )\n\n    addUtilities({\n      '.line-clamp-none': {\n        overflow: 'visible',\n        display: 'block',\n        '-webkit-box-orient': 'horizontal',\n        '-webkit-line-clamp': 'none',\n      },\n    })\n  },\n\n  display: ({ addUtilities }) => {\n    addUtilities({\n      '.block': { display: 'block' },\n      '.inline-block': { display: 'inline-block' },\n      '.inline': { display: 'inline' },\n      '.flex': { display: 'flex' },\n      '.inline-flex': { display: 'inline-flex' },\n      '.table': { display: 'table' },\n      '.inline-table': { display: 'inline-table' },\n      '.table-caption': { display: 'table-caption' },\n      '.table-cell': { display: 'table-cell' },\n      '.table-column': { display: 'table-column' },\n      '.table-column-group': { display: 'table-column-group' },\n      '.table-footer-group': { display: 'table-footer-group' },\n      '.table-header-group': { display: 'table-header-group' },\n      '.table-row-group': { display: 'table-row-group' },\n      '.table-row': { display: 'table-row' },\n      '.flow-root': { display: 'flow-root' },\n      '.grid': { display: 'grid' },\n      '.inline-grid': { display: 'inline-grid' },\n      '.contents': { display: 'contents' },\n      '.list-item': { display: 'list-item' },\n      '.hidden': { display: 'none' },\n    })\n  },\n\n  aspectRatio: createUtilityPlugin('aspectRatio', [['aspect', ['aspect-ratio']]]),\n\n  size: createUtilityPlugin('size', [['size', ['width', 'height']]]),\n\n  height: createUtilityPlugin('height', [['h', ['height']]]),\n  maxHeight: createUtilityPlugin('maxHeight', [['max-h', ['maxHeight']]]),\n  minHeight: createUtilityPlugin('minHeight', [['min-h', ['minHeight']]]),\n\n  width: createUtilityPlugin('width', [['w', ['width']]]),\n  minWidth: createUtilityPlugin('minWidth', [['min-w', ['minWidth']]]),\n  maxWidth: createUtilityPlugin('maxWidth', [['max-w', ['maxWidth']]]),\n\n  flex: createUtilityPlugin('flex'),\n  flexShrink: createUtilityPlugin('flexShrink', [\n    ['flex-shrink', ['flex-shrink']], // Deprecated\n    ['shrink', ['flex-shrink']],\n  ]),\n  flexGrow: createUtilityPlugin('flexGrow', [\n    ['flex-grow', ['flex-grow']], // Deprecated\n    ['grow', ['flex-grow']],\n  ]),\n  flexBasis: createUtilityPlugin('flexBasis', [['basis', ['flex-basis']]]),\n\n  tableLayout: ({ addUtilities }) => {\n    addUtilities({\n      '.table-auto': { 'table-layout': 'auto' },\n      '.table-fixed': { 'table-layout': 'fixed' },\n    })\n  },\n\n  captionSide: ({ addUtilities }) => {\n    addUtilities({\n      '.caption-top': { 'caption-side': 'top' },\n      '.caption-bottom': { 'caption-side': 'bottom' },\n    })\n  },\n\n  borderCollapse: ({ addUtilities }) => {\n    addUtilities({\n      '.border-collapse': { 'border-collapse': 'collapse' },\n      '.border-separate': { 'border-collapse': 'separate' },\n    })\n  },\n\n  borderSpacing: ({ addDefaults, matchUtilities, theme }) => {\n    addDefaults('border-spacing', {\n      '--tw-border-spacing-x': 0,\n      '--tw-border-spacing-y': 0,\n    })\n\n    matchUtilities(\n      {\n        'border-spacing': (value) => {\n          return {\n            '--tw-border-spacing-x': value,\n            '--tw-border-spacing-y': value,\n            '@defaults border-spacing': {},\n            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',\n          }\n        },\n        'border-spacing-x': (value) => {\n          return {\n            '--tw-border-spacing-x': value,\n            '@defaults border-spacing': {},\n            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',\n          }\n        },\n        'border-spacing-y': (value) => {\n          return {\n            '--tw-border-spacing-y': value,\n            '@defaults border-spacing': {},\n            'border-spacing': 'var(--tw-border-spacing-x) var(--tw-border-spacing-y)',\n          }\n        },\n      },\n      { values: theme('borderSpacing') }\n    )\n  },\n\n  transformOrigin: createUtilityPlugin('transformOrigin', [['origin', ['transformOrigin']]]),\n  translate: createUtilityPlugin(\n    'translate',\n    [\n      [\n        [\n          'translate-x',\n          [['@defaults transform', {}], '--tw-translate-x', ['transform', cssTransformValue]],\n        ],\n        [\n          'translate-y',\n          [['@defaults transform', {}], '--tw-translate-y', ['transform', cssTransformValue]],\n        ],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n  rotate: createUtilityPlugin(\n    'rotate',\n    [['rotate', [['@defaults transform', {}], '--tw-rotate', ['transform', cssTransformValue]]]],\n    { supportsNegativeValues: true }\n  ),\n  skew: createUtilityPlugin(\n    'skew',\n    [\n      [\n        ['skew-x', [['@defaults transform', {}], '--tw-skew-x', ['transform', cssTransformValue]]],\n        ['skew-y', [['@defaults transform', {}], '--tw-skew-y', ['transform', cssTransformValue]]],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n  scale: createUtilityPlugin(\n    'scale',\n    [\n      [\n        'scale',\n        [\n          ['@defaults transform', {}],\n          '--tw-scale-x',\n          '--tw-scale-y',\n          ['transform', cssTransformValue],\n        ],\n      ],\n      [\n        [\n          'scale-x',\n          [['@defaults transform', {}], '--tw-scale-x', ['transform', cssTransformValue]],\n        ],\n        [\n          'scale-y',\n          [['@defaults transform', {}], '--tw-scale-y', ['transform', cssTransformValue]],\n        ],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  transform: ({ addDefaults, addUtilities }) => {\n    addDefaults('transform', {\n      '--tw-translate-x': '0',\n      '--tw-translate-y': '0',\n      '--tw-rotate': '0',\n      '--tw-skew-x': '0',\n      '--tw-skew-y': '0',\n      '--tw-scale-x': '1',\n      '--tw-scale-y': '1',\n    })\n\n    addUtilities({\n      '.transform': { '@defaults transform': {}, transform: cssTransformValue },\n      '.transform-cpu': {\n        transform: cssTransformValue,\n      },\n      '.transform-gpu': {\n        transform: cssTransformValue.replace(\n          'translate(var(--tw-translate-x), var(--tw-translate-y))',\n          'translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)'\n        ),\n      },\n      '.transform-none': { transform: 'none' },\n    })\n  },\n\n  animation: ({ matchUtilities, theme, config }) => {\n    let prefixName = (name) => escapeClassName(config('prefix') + name)\n    let keyframes = Object.fromEntries(\n      Object.entries(theme('keyframes') ?? {}).map(([key, value]) => {\n        return [key, { [`@keyframes ${prefixName(key)}`]: value }]\n      })\n    )\n\n    matchUtilities(\n      {\n        animate: (value) => {\n          let animations = parseAnimationValue(value)\n\n          return [\n            ...animations.flatMap((animation) => keyframes[animation.name]),\n            {\n              animation: animations\n                .map(({ name, value }) => {\n                  if (name === undefined || keyframes[name] === undefined) {\n                    return value\n                  }\n                  return value.replace(name, prefixName(name))\n                })\n                .join(', '),\n            },\n          ]\n        },\n      },\n      { values: theme('animation') }\n    )\n  },\n\n  cursor: createUtilityPlugin('cursor'),\n\n  touchAction: ({ addDefaults, addUtilities }) => {\n    addDefaults('touch-action', {\n      '--tw-pan-x': ' ',\n      '--tw-pan-y': ' ',\n      '--tw-pinch-zoom': ' ',\n    })\n\n    let cssTouchActionValue = 'var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)'\n\n    addUtilities({\n      '.touch-auto': { 'touch-action': 'auto' },\n      '.touch-none': { 'touch-action': 'none' },\n      '.touch-pan-x': {\n        '@defaults touch-action': {},\n        '--tw-pan-x': 'pan-x',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-left': {\n        '@defaults touch-action': {},\n        '--tw-pan-x': 'pan-left',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-right': {\n        '@defaults touch-action': {},\n        '--tw-pan-x': 'pan-right',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-y': {\n        '@defaults touch-action': {},\n        '--tw-pan-y': 'pan-y',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-up': {\n        '@defaults touch-action': {},\n        '--tw-pan-y': 'pan-up',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pan-down': {\n        '@defaults touch-action': {},\n        '--tw-pan-y': 'pan-down',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-pinch-zoom': {\n        '@defaults touch-action': {},\n        '--tw-pinch-zoom': 'pinch-zoom',\n        'touch-action': cssTouchActionValue,\n      },\n      '.touch-manipulation': { 'touch-action': 'manipulation' },\n    })\n  },\n\n  userSelect: ({ addUtilities }) => {\n    addUtilities({\n      '.select-none': { 'user-select': 'none' },\n      '.select-text': { 'user-select': 'text' },\n      '.select-all': { 'user-select': 'all' },\n      '.select-auto': { 'user-select': 'auto' },\n    })\n  },\n\n  resize: ({ addUtilities }) => {\n    addUtilities({\n      '.resize-none': { resize: 'none' },\n      '.resize-y': { resize: 'vertical' },\n      '.resize-x': { resize: 'horizontal' },\n      '.resize': { resize: 'both' },\n    })\n  },\n\n  scrollSnapType: ({ addDefaults, addUtilities }) => {\n    addDefaults('scroll-snap-type', {\n      '--tw-scroll-snap-strictness': 'proximity',\n    })\n\n    addUtilities({\n      '.snap-none': { 'scroll-snap-type': 'none' },\n      '.snap-x': {\n        '@defaults scroll-snap-type': {},\n        'scroll-snap-type': 'x var(--tw-scroll-snap-strictness)',\n      },\n      '.snap-y': {\n        '@defaults scroll-snap-type': {},\n        'scroll-snap-type': 'y var(--tw-scroll-snap-strictness)',\n      },\n      '.snap-both': {\n        '@defaults scroll-snap-type': {},\n        'scroll-snap-type': 'both var(--tw-scroll-snap-strictness)',\n      },\n      '.snap-mandatory': { '--tw-scroll-snap-strictness': 'mandatory' },\n      '.snap-proximity': { '--tw-scroll-snap-strictness': 'proximity' },\n    })\n  },\n\n  scrollSnapAlign: ({ addUtilities }) => {\n    addUtilities({\n      '.snap-start': { 'scroll-snap-align': 'start' },\n      '.snap-end': { 'scroll-snap-align': 'end' },\n      '.snap-center': { 'scroll-snap-align': 'center' },\n      '.snap-align-none': { 'scroll-snap-align': 'none' },\n    })\n  },\n\n  scrollSnapStop: ({ addUtilities }) => {\n    addUtilities({\n      '.snap-normal': { 'scroll-snap-stop': 'normal' },\n      '.snap-always': { 'scroll-snap-stop': 'always' },\n    })\n  },\n\n  scrollMargin: createUtilityPlugin(\n    'scrollMargin',\n    [\n      ['scroll-m', ['scroll-margin']],\n      [\n        ['scroll-mx', ['scroll-margin-left', 'scroll-margin-right']],\n        ['scroll-my', ['scroll-margin-top', 'scroll-margin-bottom']],\n      ],\n      [\n        ['scroll-ms', ['scroll-margin-inline-start']],\n        ['scroll-me', ['scroll-margin-inline-end']],\n        ['scroll-mt', ['scroll-margin-top']],\n        ['scroll-mr', ['scroll-margin-right']],\n        ['scroll-mb', ['scroll-margin-bottom']],\n        ['scroll-ml', ['scroll-margin-left']],\n      ],\n    ],\n    { supportsNegativeValues: true }\n  ),\n\n  scrollPadding: createUtilityPlugin('scrollPadding', [\n    ['scroll-p', ['scroll-padding']],\n    [\n      ['scroll-px', ['scroll-padding-left', 'scroll-padding-right']],\n      ['scroll-py', ['scroll-padding-top', 'scroll-padding-bottom']],\n    ],\n    [\n      ['scroll-ps', ['scroll-padding-inline-start']],\n      ['scroll-pe', ['scroll-padding-inline-end']],\n      ['scroll-pt', ['scroll-padding-top']],\n      ['scroll-pr', ['scroll-padding-right']],\n      ['scroll-pb', ['scroll-padding-bottom']],\n      ['scroll-pl', ['scroll-padding-left']],\n    ],\n  ]),\n\n  listStylePosition: ({ addUtilities }) => {\n    addUtilities({\n      '.list-inside': { 'list-style-position': 'inside' },\n      '.list-outside': { 'list-style-position': 'outside' },\n    })\n  },\n  listStyleType: createUtilityPlugin('listStyleType', [['list', ['listStyleType']]]),\n  listStyleImage: createUtilityPlugin('listStyleImage', [['list-image', ['listStyleImage']]]),\n\n  appearance: ({ addUtilities }) => {\n    addUtilities({\n      '.appearance-none': { appearance: 'none' },\n      '.appearance-auto': { appearance: 'auto' },\n    })\n  },\n\n  columns: createUtilityPlugin('columns', [['columns', ['columns']]]),\n\n  breakBefore: ({ addUtilities }) => {\n    addUtilities({\n      '.break-before-auto': { 'break-before': 'auto' },\n      '.break-before-avoid': { 'break-before': 'avoid' },\n      '.break-before-all': { 'break-before': 'all' },\n      '.break-before-avoid-page': { 'break-before': 'avoid-page' },\n      '.break-before-page': { 'break-before': 'page' },\n      '.break-before-left': { 'break-before': 'left' },\n      '.break-before-right': { 'break-before': 'right' },\n      '.break-before-column': { 'break-before': 'column' },\n    })\n  },\n\n  breakInside: ({ addUtilities }) => {\n    addUtilities({\n      '.break-inside-auto': { 'break-inside': 'auto' },\n      '.break-inside-avoid': { 'break-inside': 'avoid' },\n      '.break-inside-avoid-page': { 'break-inside': 'avoid-page' },\n      '.break-inside-avoid-column': { 'break-inside': 'avoid-column' },\n    })\n  },\n\n  breakAfter: ({ addUtilities }) => {\n    addUtilities({\n      '.break-after-auto': { 'break-after': 'auto' },\n      '.break-after-avoid': { 'break-after': 'avoid' },\n      '.break-after-all': { 'break-after': 'all' },\n      '.break-after-avoid-page': { 'break-after': 'avoid-page' },\n      '.break-after-page': { 'break-after': 'page' },\n      '.break-after-left': { 'break-after': 'left' },\n      '.break-after-right': { 'break-after': 'right' },\n      '.break-after-column': { 'break-after': 'column' },\n    })\n  },\n\n  gridAutoColumns: createUtilityPlugin('gridAutoColumns', [['auto-cols', ['gridAutoColumns']]]),\n\n  gridAutoFlow: ({ addUtilities }) => {\n    addUtilities({\n      '.grid-flow-row': { gridAutoFlow: 'row' },\n      '.grid-flow-col': { gridAutoFlow: 'column' },\n      '.grid-flow-dense': { gridAutoFlow: 'dense' },\n      '.grid-flow-row-dense': { gridAutoFlow: 'row dense' },\n      '.grid-flow-col-dense': { gridAutoFlow: 'column dense' },\n    })\n  },\n\n  gridAutoRows: createUtilityPlugin('gridAutoRows', [['auto-rows', ['gridAutoRows']]]),\n  gridTemplateColumns: createUtilityPlugin('gridTemplateColumns', [\n    ['grid-cols', ['gridTemplateColumns']],\n  ]),\n  gridTemplateRows: createUtilityPlugin('gridTemplateRows', [['grid-rows', ['gridTemplateRows']]]),\n\n  flexDirection: ({ addUtilities }) => {\n    addUtilities({\n      '.flex-row': { 'flex-direction': 'row' },\n      '.flex-row-reverse': { 'flex-direction': 'row-reverse' },\n      '.flex-col': { 'flex-direction': 'column' },\n      '.flex-col-reverse': { 'flex-direction': 'column-reverse' },\n    })\n  },\n\n  flexWrap: ({ addUtilities }) => {\n    addUtilities({\n      '.flex-wrap': { 'flex-wrap': 'wrap' },\n      '.flex-wrap-reverse': { 'flex-wrap': 'wrap-reverse' },\n      '.flex-nowrap': { 'flex-wrap': 'nowrap' },\n    })\n  },\n\n  placeContent: ({ addUtilities }) => {\n    addUtilities({\n      '.place-content-center': { 'place-content': 'center' },\n      '.place-content-start': { 'place-content': 'start' },\n      '.place-content-end': { 'place-content': 'end' },\n      '.place-content-between': { 'place-content': 'space-between' },\n      '.place-content-around': { 'place-content': 'space-around' },\n      '.place-content-evenly': { 'place-content': 'space-evenly' },\n      '.place-content-baseline': { 'place-content': 'baseline' },\n      '.place-content-stretch': { 'place-content': 'stretch' },\n    })\n  },\n\n  placeItems: ({ addUtilities }) => {\n    addUtilities({\n      '.place-items-start': { 'place-items': 'start' },\n      '.place-items-end': { 'place-items': 'end' },\n      '.place-items-center': { 'place-items': 'center' },\n      '.place-items-baseline': { 'place-items': 'baseline' },\n      '.place-items-stretch': { 'place-items': 'stretch' },\n    })\n  },\n\n  alignContent: ({ addUtilities }) => {\n    addUtilities({\n      '.content-normal': { 'align-content': 'normal' },\n      '.content-center': { 'align-content': 'center' },\n      '.content-start': { 'align-content': 'flex-start' },\n      '.content-end': { 'align-content': 'flex-end' },\n      '.content-between': { 'align-content': 'space-between' },\n      '.content-around': { 'align-content': 'space-around' },\n      '.content-evenly': { 'align-content': 'space-evenly' },\n      '.content-baseline': { 'align-content': 'baseline' },\n      '.content-stretch': { 'align-content': 'stretch' },\n    })\n  },\n\n  alignItems: ({ addUtilities }) => {\n    addUtilities({\n      '.items-start': { 'align-items': 'flex-start' },\n      '.items-end': { 'align-items': 'flex-end' },\n      '.items-center': { 'align-items': 'center' },\n      '.items-baseline': { 'align-items': 'baseline' },\n      '.items-stretch': { 'align-items': 'stretch' },\n    })\n  },\n\n  justifyContent: ({ addUtilities }) => {\n    addUtilities({\n      '.justify-normal': { 'justify-content': 'normal' },\n      '.justify-start': { 'justify-content': 'flex-start' },\n      '.justify-end': { 'justify-content': 'flex-end' },\n      '.justify-center': { 'justify-content': 'center' },\n      '.justify-between': { 'justify-content': 'space-between' },\n      '.justify-around': { 'justify-content': 'space-around' },\n      '.justify-evenly': { 'justify-content': 'space-evenly' },\n      '.justify-stretch': { 'justify-content': 'stretch' },\n    })\n  },\n\n  justifyItems: ({ addUtilities }) => {\n    addUtilities({\n      '.justify-items-start': { 'justify-items': 'start' },\n      '.justify-items-end': { 'justify-items': 'end' },\n      '.justify-items-center': { 'justify-items': 'center' },\n      '.justify-items-stretch': { 'justify-items': 'stretch' },\n    })\n  },\n\n  gap: createUtilityPlugin('gap', [\n    ['gap', ['gap']],\n    [\n      ['gap-x', ['columnGap']],\n      ['gap-y', ['rowGap']],\n    ],\n  ]),\n\n  space: ({ matchUtilities, addUtilities, theme }) => {\n    matchUtilities(\n      {\n        'space-x': (value) => {\n          value = value === '0' ? '0px' : value\n\n          if (__OXIDE__) {\n            return {\n              '& > :not([hidden]) ~ :not([hidden])': {\n                '--tw-space-x-reverse': '0',\n                'margin-inline-end': `calc(${value} * var(--tw-space-x-reverse))`,\n                'margin-inline-start': `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`,\n              },\n            }\n          }\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '--tw-space-x-reverse': '0',\n              'margin-right': `calc(${value} * var(--tw-space-x-reverse))`,\n              'margin-left': `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`,\n            },\n          }\n        },\n        'space-y': (value) => {\n          value = value === '0' ? '0px' : value\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '--tw-space-y-reverse': '0',\n              'margin-top': `calc(${value} * calc(1 - var(--tw-space-y-reverse)))`,\n              'margin-bottom': `calc(${value} * var(--tw-space-y-reverse))`,\n            },\n          }\n        },\n      },\n      { values: theme('space'), supportsNegativeValues: true }\n    )\n\n    addUtilities({\n      '.space-y-reverse > :not([hidden]) ~ :not([hidden])': { '--tw-space-y-reverse': '1' },\n      '.space-x-reverse > :not([hidden]) ~ :not([hidden])': { '--tw-space-x-reverse': '1' },\n    })\n  },\n\n  divideWidth: ({ matchUtilities, addUtilities, theme }) => {\n    matchUtilities(\n      {\n        'divide-x': (value) => {\n          value = value === '0' ? '0px' : value\n\n          if (__OXIDE__) {\n            return {\n              '& > :not([hidden]) ~ :not([hidden])': {\n                '@defaults border-width': {},\n                '--tw-divide-x-reverse': '0',\n                'border-inline-end-width': `calc(${value} * var(--tw-divide-x-reverse))`,\n                'border-inline-start-width': `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`,\n              },\n            }\n          }\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '@defaults border-width': {},\n              '--tw-divide-x-reverse': '0',\n              'border-right-width': `calc(${value} * var(--tw-divide-x-reverse))`,\n              'border-left-width': `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`,\n            },\n          }\n        },\n        'divide-y': (value) => {\n          value = value === '0' ? '0px' : value\n\n          return {\n            '& > :not([hidden]) ~ :not([hidden])': {\n              '@defaults border-width': {},\n              '--tw-divide-y-reverse': '0',\n              'border-top-width': `calc(${value} * calc(1 - var(--tw-divide-y-reverse)))`,\n              'border-bottom-width': `calc(${value} * var(--tw-divide-y-reverse))`,\n            },\n          }\n        },\n      },\n      { values: theme('divideWidth'), type: ['line-width', 'length', 'any'] }\n    )\n\n    addUtilities({\n      '.divide-y-reverse > :not([hidden]) ~ :not([hidden])': {\n        '@defaults border-width': {},\n        '--tw-divide-y-reverse': '1',\n      },\n      '.divide-x-reverse > :not([hidden]) ~ :not([hidden])': {\n        '@defaults border-width': {},\n        '--tw-divide-x-reverse': '1',\n      },\n    })\n  },\n\n  divideStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.divide-solid > :not([hidden]) ~ :not([hidden])': { 'border-style': 'solid' },\n      '.divide-dashed > :not([hidden]) ~ :not([hidden])': { 'border-style': 'dashed' },\n      '.divide-dotted > :not([hidden]) ~ :not([hidden])': { 'border-style': 'dotted' },\n      '.divide-double > :not([hidden]) ~ :not([hidden])': { 'border-style': 'double' },\n      '.divide-none > :not([hidden]) ~ :not([hidden])': { 'border-style': 'none' },\n    })\n  },\n\n  divideColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        divide: (value) => {\n          if (!corePlugins('divideOpacity')) {\n            return {\n              ['& > :not([hidden]) ~ :not([hidden])']: {\n                'border-color': toColorValue(value),\n              },\n            }\n          }\n\n          return {\n            ['& > :not([hidden]) ~ :not([hidden])']: withAlphaVariable({\n              color: value,\n              property: 'border-color',\n              variable: '--tw-divide-opacity',\n            }),\n          }\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('divideColor'))),\n        type: ['color', 'any'],\n      }\n    )\n  },\n\n  divideOpacity: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'divide-opacity': (value) => {\n          return { [`& > :not([hidden]) ~ :not([hidden])`]: { '--tw-divide-opacity': value } }\n        },\n      },\n      { values: theme('divideOpacity') }\n    )\n  },\n\n  placeSelf: ({ addUtilities }) => {\n    addUtilities({\n      '.place-self-auto': { 'place-self': 'auto' },\n      '.place-self-start': { 'place-self': 'start' },\n      '.place-self-end': { 'place-self': 'end' },\n      '.place-self-center': { 'place-self': 'center' },\n      '.place-self-stretch': { 'place-self': 'stretch' },\n    })\n  },\n\n  alignSelf: ({ addUtilities }) => {\n    addUtilities({\n      '.self-auto': { 'align-self': 'auto' },\n      '.self-start': { 'align-self': 'flex-start' },\n      '.self-end': { 'align-self': 'flex-end' },\n      '.self-center': { 'align-self': 'center' },\n      '.self-stretch': { 'align-self': 'stretch' },\n      '.self-baseline': { 'align-self': 'baseline' },\n    })\n  },\n\n  justifySelf: ({ addUtilities }) => {\n    addUtilities({\n      '.justify-self-auto': { 'justify-self': 'auto' },\n      '.justify-self-start': { 'justify-self': 'start' },\n      '.justify-self-end': { 'justify-self': 'end' },\n      '.justify-self-center': { 'justify-self': 'center' },\n      '.justify-self-stretch': { 'justify-self': 'stretch' },\n    })\n  },\n\n  overflow: ({ addUtilities }) => {\n    addUtilities({\n      '.overflow-auto': { overflow: 'auto' },\n      '.overflow-hidden': { overflow: 'hidden' },\n      '.overflow-clip': { overflow: 'clip' },\n      '.overflow-visible': { overflow: 'visible' },\n      '.overflow-scroll': { overflow: 'scroll' },\n      '.overflow-x-auto': { 'overflow-x': 'auto' },\n      '.overflow-y-auto': { 'overflow-y': 'auto' },\n      '.overflow-x-hidden': { 'overflow-x': 'hidden' },\n      '.overflow-y-hidden': { 'overflow-y': 'hidden' },\n      '.overflow-x-clip': { 'overflow-x': 'clip' },\n      '.overflow-y-clip': { 'overflow-y': 'clip' },\n      '.overflow-x-visible': { 'overflow-x': 'visible' },\n      '.overflow-y-visible': { 'overflow-y': 'visible' },\n      '.overflow-x-scroll': { 'overflow-x': 'scroll' },\n      '.overflow-y-scroll': { 'overflow-y': 'scroll' },\n    })\n  },\n\n  overscrollBehavior: ({ addUtilities }) => {\n    addUtilities({\n      '.overscroll-auto': { 'overscroll-behavior': 'auto' },\n      '.overscroll-contain': { 'overscroll-behavior': 'contain' },\n      '.overscroll-none': { 'overscroll-behavior': 'none' },\n      '.overscroll-y-auto': { 'overscroll-behavior-y': 'auto' },\n      '.overscroll-y-contain': { 'overscroll-behavior-y': 'contain' },\n      '.overscroll-y-none': { 'overscroll-behavior-y': 'none' },\n      '.overscroll-x-auto': { 'overscroll-behavior-x': 'auto' },\n      '.overscroll-x-contain': { 'overscroll-behavior-x': 'contain' },\n      '.overscroll-x-none': { 'overscroll-behavior-x': 'none' },\n    })\n  },\n\n  scrollBehavior: ({ addUtilities }) => {\n    addUtilities({\n      '.scroll-auto': { 'scroll-behavior': 'auto' },\n      '.scroll-smooth': { 'scroll-behavior': 'smooth' },\n    })\n  },\n\n  textOverflow: ({ addUtilities }) => {\n    addUtilities({\n      '.truncate': { overflow: 'hidden', 'text-overflow': 'ellipsis', 'white-space': 'nowrap' },\n      '.overflow-ellipsis': { 'text-overflow': 'ellipsis' }, // Deprecated\n      '.text-ellipsis': { 'text-overflow': 'ellipsis' },\n      '.text-clip': { 'text-overflow': 'clip' },\n    })\n  },\n\n  hyphens: ({ addUtilities }) => {\n    addUtilities({\n      '.hyphens-none': { hyphens: 'none' },\n      '.hyphens-manual': { hyphens: 'manual' },\n      '.hyphens-auto': { hyphens: 'auto' },\n    })\n  },\n\n  whitespace: ({ addUtilities }) => {\n    addUtilities({\n      '.whitespace-normal': { 'white-space': 'normal' },\n      '.whitespace-nowrap': { 'white-space': 'nowrap' },\n      '.whitespace-pre': { 'white-space': 'pre' },\n      '.whitespace-pre-line': { 'white-space': 'pre-line' },\n      '.whitespace-pre-wrap': { 'white-space': 'pre-wrap' },\n      '.whitespace-break-spaces': { 'white-space': 'break-spaces' },\n    })\n  },\n\n  textWrap: ({ addUtilities }) => {\n    addUtilities({\n      '.text-wrap': { 'text-wrap': 'wrap' },\n      '.text-nowrap': { 'text-wrap': 'nowrap' },\n      '.text-balance': { 'text-wrap': 'balance' },\n      '.text-pretty': { 'text-wrap': 'pretty' },\n    })\n  },\n\n  wordBreak: ({ addUtilities }) => {\n    addUtilities({\n      '.break-normal': { 'overflow-wrap': 'normal', 'word-break': 'normal' },\n      '.break-words': { 'overflow-wrap': 'break-word' },\n      '.break-all': { 'word-break': 'break-all' },\n      '.break-keep': { 'word-break': 'keep-all' },\n    })\n  },\n\n  borderRadius: createUtilityPlugin('borderRadius', [\n    ['rounded', ['border-radius']],\n    [\n      ['rounded-s', ['border-start-start-radius', 'border-end-start-radius']],\n      ['rounded-e', ['border-start-end-radius', 'border-end-end-radius']],\n      ['rounded-t', ['border-top-left-radius', 'border-top-right-radius']],\n      ['rounded-r', ['border-top-right-radius', 'border-bottom-right-radius']],\n      ['rounded-b', ['border-bottom-right-radius', 'border-bottom-left-radius']],\n      ['rounded-l', ['border-top-left-radius', 'border-bottom-left-radius']],\n    ],\n    [\n      ['rounded-ss', ['border-start-start-radius']],\n      ['rounded-se', ['border-start-end-radius']],\n      ['rounded-ee', ['border-end-end-radius']],\n      ['rounded-es', ['border-end-start-radius']],\n      ['rounded-tl', ['border-top-left-radius']],\n      ['rounded-tr', ['border-top-right-radius']],\n      ['rounded-br', ['border-bottom-right-radius']],\n      ['rounded-bl', ['border-bottom-left-radius']],\n    ],\n  ]),\n\n  borderWidth: createUtilityPlugin(\n    'borderWidth',\n    [\n      ['border', [['@defaults border-width', {}], 'border-width']],\n      [\n        ['border-x', [['@defaults border-width', {}], 'border-left-width', 'border-right-width']],\n        ['border-y', [['@defaults border-width', {}], 'border-top-width', 'border-bottom-width']],\n      ],\n      [\n        ['border-s', [['@defaults border-width', {}], 'border-inline-start-width']],\n        ['border-e', [['@defaults border-width', {}], 'border-inline-end-width']],\n        ['border-t', [['@defaults border-width', {}], 'border-top-width']],\n        ['border-r', [['@defaults border-width', {}], 'border-right-width']],\n        ['border-b', [['@defaults border-width', {}], 'border-bottom-width']],\n        ['border-l', [['@defaults border-width', {}], 'border-left-width']],\n      ],\n    ],\n    { type: ['line-width', 'length'] }\n  ),\n\n  borderStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.border-solid': { 'border-style': 'solid' },\n      '.border-dashed': { 'border-style': 'dashed' },\n      '.border-dotted': { 'border-style': 'dotted' },\n      '.border-double': { 'border-style': 'double' },\n      '.border-hidden': { 'border-style': 'hidden' },\n      '.border-none': { 'border-style': 'none' },\n    })\n  },\n\n  borderColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        border: (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('borderColor'))),\n        type: ['color', 'any'],\n      }\n    )\n\n    matchUtilities(\n      {\n        'border-x': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-left-color': toColorValue(value),\n              'border-right-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: ['border-left-color', 'border-right-color'],\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-y': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-top-color': toColorValue(value),\n              'border-bottom-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: ['border-top-color', 'border-bottom-color'],\n            variable: '--tw-border-opacity',\n          })\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('borderColor'))),\n        type: ['color', 'any'],\n      }\n    )\n\n    matchUtilities(\n      {\n        'border-s': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-inline-start-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-inline-start-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-e': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-inline-end-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-inline-end-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-t': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-top-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-top-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-r': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-right-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-right-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-b': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-bottom-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-bottom-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n        'border-l': (value) => {\n          if (!corePlugins('borderOpacity')) {\n            return {\n              'border-left-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'border-left-color',\n            variable: '--tw-border-opacity',\n          })\n        },\n      },\n      {\n        values: (({ DEFAULT: _, ...colors }) => colors)(flattenColorPalette(theme('borderColor'))),\n        type: ['color', 'any'],\n      }\n    )\n  },\n\n  borderOpacity: createUtilityPlugin('borderOpacity', [\n    ['border-opacity', ['--tw-border-opacity']],\n  ]),\n\n  backgroundColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        bg: (value) => {\n          if (!corePlugins('backgroundOpacity')) {\n            return {\n              'background-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'background-color',\n            variable: '--tw-bg-opacity',\n          })\n        },\n      },\n      { values: flattenColorPalette(theme('backgroundColor')), type: ['color', 'any'] }\n    )\n  },\n\n  backgroundOpacity: createUtilityPlugin('backgroundOpacity', [\n    ['bg-opacity', ['--tw-bg-opacity']],\n  ]),\n  backgroundImage: createUtilityPlugin('backgroundImage', [['bg', ['background-image']]], {\n    type: ['lookup', 'image', 'url'],\n  }),\n  gradientColorStops: (() => {\n    function transparentTo(value) {\n      return withAlphaValue(value, 0, 'rgb(255 255 255 / 0)')\n    }\n\n    return function ({ matchUtilities, theme, addDefaults }) {\n      addDefaults('gradient-color-stops', {\n        '--tw-gradient-from-position': ' ',\n        '--tw-gradient-via-position': ' ',\n        '--tw-gradient-to-position': ' ',\n      })\n\n      let options = {\n        values: flattenColorPalette(theme('gradientColorStops')),\n        type: ['color', 'any'],\n      }\n\n      let positionOptions = {\n        values: theme('gradientColorStopPositions'),\n        type: ['length', 'percentage'],\n      }\n\n      matchUtilities(\n        {\n          from: (value) => {\n            let transparentToValue = transparentTo(value)\n\n            return {\n              '@defaults gradient-color-stops': {},\n              '--tw-gradient-from': `${toColorValue(value)} var(--tw-gradient-from-position)`,\n              '--tw-gradient-to': `${transparentToValue} var(--tw-gradient-to-position)`,\n              '--tw-gradient-stops': `var(--tw-gradient-from), var(--tw-gradient-to)`,\n            }\n          },\n        },\n        options\n      )\n\n      matchUtilities(\n        {\n          from: (value) => {\n            return {\n              '--tw-gradient-from-position': value,\n            }\n          },\n        },\n        positionOptions\n      )\n\n      matchUtilities(\n        {\n          via: (value) => {\n            let transparentToValue = transparentTo(value)\n\n            return {\n              '@defaults gradient-color-stops': {},\n              '--tw-gradient-to': `${transparentToValue}  var(--tw-gradient-to-position)`,\n              '--tw-gradient-stops': `var(--tw-gradient-from), ${toColorValue(\n                value\n              )} var(--tw-gradient-via-position), var(--tw-gradient-to)`,\n            }\n          },\n        },\n        options\n      )\n\n      matchUtilities(\n        {\n          via: (value) => {\n            return {\n              '--tw-gradient-via-position': value,\n            }\n          },\n        },\n        positionOptions\n      )\n\n      matchUtilities(\n        {\n          to: (value) => ({\n            '@defaults gradient-color-stops': {},\n            '--tw-gradient-to': `${toColorValue(value)} var(--tw-gradient-to-position)`,\n          }),\n        },\n        options\n      )\n\n      matchUtilities(\n        {\n          to: (value) => {\n            return {\n              '--tw-gradient-to-position': value,\n            }\n          },\n        },\n        positionOptions\n      )\n    }\n  })(),\n\n  boxDecorationBreak: ({ addUtilities }) => {\n    addUtilities({\n      '.decoration-slice': { 'box-decoration-break': 'slice' }, // Deprecated\n      '.decoration-clone': { 'box-decoration-break': 'clone' }, // Deprecated\n      '.box-decoration-slice': { 'box-decoration-break': 'slice' },\n      '.box-decoration-clone': { 'box-decoration-break': 'clone' },\n    })\n  },\n\n  backgroundSize: createUtilityPlugin('backgroundSize', [['bg', ['background-size']]], {\n    type: ['lookup', 'length', 'percentage', 'size'],\n  }),\n\n  backgroundAttachment: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-fixed': { 'background-attachment': 'fixed' },\n      '.bg-local': { 'background-attachment': 'local' },\n      '.bg-scroll': { 'background-attachment': 'scroll' },\n    })\n  },\n\n  backgroundClip: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-clip-border': { 'background-clip': 'border-box' },\n      '.bg-clip-padding': { 'background-clip': 'padding-box' },\n      '.bg-clip-content': { 'background-clip': 'content-box' },\n      '.bg-clip-text': { 'background-clip': 'text' },\n    })\n  },\n\n  backgroundPosition: createUtilityPlugin('backgroundPosition', [['bg', ['background-position']]], {\n    type: ['lookup', ['position', { preferOnConflict: true }]],\n  }),\n\n  backgroundRepeat: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-repeat': { 'background-repeat': 'repeat' },\n      '.bg-no-repeat': { 'background-repeat': 'no-repeat' },\n      '.bg-repeat-x': { 'background-repeat': 'repeat-x' },\n      '.bg-repeat-y': { 'background-repeat': 'repeat-y' },\n      '.bg-repeat-round': { 'background-repeat': 'round' },\n      '.bg-repeat-space': { 'background-repeat': 'space' },\n    })\n  },\n\n  backgroundOrigin: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-origin-border': { 'background-origin': 'border-box' },\n      '.bg-origin-padding': { 'background-origin': 'padding-box' },\n      '.bg-origin-content': { 'background-origin': 'content-box' },\n    })\n  },\n\n  fill: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        fill: (value) => {\n          return { fill: toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('fill')), type: ['color', 'any'] }\n    )\n  },\n\n  stroke: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        stroke: (value) => {\n          return { stroke: toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('stroke')), type: ['color', 'url', 'any'] }\n    )\n  },\n\n  strokeWidth: createUtilityPlugin('strokeWidth', [['stroke', ['stroke-width']]], {\n    type: ['length', 'number', 'percentage'],\n  }),\n\n  objectFit: ({ addUtilities }) => {\n    addUtilities({\n      '.object-contain': { 'object-fit': 'contain' },\n      '.object-cover': { 'object-fit': 'cover' },\n      '.object-fill': { 'object-fit': 'fill' },\n      '.object-none': { 'object-fit': 'none' },\n      '.object-scale-down': { 'object-fit': 'scale-down' },\n    })\n  },\n  objectPosition: createUtilityPlugin('objectPosition', [['object', ['object-position']]]),\n\n  padding: createUtilityPlugin('padding', [\n    ['p', ['padding']],\n    [\n      ['px', ['padding-left', 'padding-right']],\n      ['py', ['padding-top', 'padding-bottom']],\n    ],\n    [\n      ['ps', ['padding-inline-start']],\n      ['pe', ['padding-inline-end']],\n      ['pt', ['padding-top']],\n      ['pr', ['padding-right']],\n      ['pb', ['padding-bottom']],\n      ['pl', ['padding-left']],\n    ],\n  ]),\n\n  textAlign: ({ addUtilities }) => {\n    addUtilities({\n      '.text-left': { 'text-align': 'left' },\n      '.text-center': { 'text-align': 'center' },\n      '.text-right': { 'text-align': 'right' },\n      '.text-justify': { 'text-align': 'justify' },\n      '.text-start': { 'text-align': 'start' },\n      '.text-end': { 'text-align': 'end' },\n    })\n  },\n\n  textIndent: createUtilityPlugin('textIndent', [['indent', ['text-indent']]], {\n    supportsNegativeValues: true,\n  }),\n\n  verticalAlign: ({ addUtilities, matchUtilities }) => {\n    addUtilities({\n      '.align-baseline': { 'vertical-align': 'baseline' },\n      '.align-top': { 'vertical-align': 'top' },\n      '.align-middle': { 'vertical-align': 'middle' },\n      '.align-bottom': { 'vertical-align': 'bottom' },\n      '.align-text-top': { 'vertical-align': 'text-top' },\n      '.align-text-bottom': { 'vertical-align': 'text-bottom' },\n      '.align-sub': { 'vertical-align': 'sub' },\n      '.align-super': { 'vertical-align': 'super' },\n    })\n\n    matchUtilities({ align: (value) => ({ 'vertical-align': value }) })\n  },\n\n  fontFamily: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        font: (value) => {\n          let [families, options = {}] =\n            Array.isArray(value) && isPlainObject(value[1]) ? value : [value]\n          let { fontFeatureSettings, fontVariationSettings } = options\n\n          return {\n            'font-family': Array.isArray(families) ? families.join(', ') : families,\n            ...(fontFeatureSettings === undefined\n              ? {}\n              : { 'font-feature-settings': fontFeatureSettings }),\n            ...(fontVariationSettings === undefined\n              ? {}\n              : { 'font-variation-settings': fontVariationSettings }),\n          }\n        },\n      },\n      {\n        values: theme('fontFamily'),\n        type: ['lookup', 'generic-name', 'family-name'],\n      }\n    )\n  },\n\n  fontSize: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        text: (value, { modifier }) => {\n          let [fontSize, options] = Array.isArray(value) ? value : [value]\n\n          if (modifier) {\n            return {\n              'font-size': fontSize,\n              'line-height': modifier,\n            }\n          }\n\n          let { lineHeight, letterSpacing, fontWeight } = isPlainObject(options)\n            ? options\n            : { lineHeight: options }\n\n          return {\n            'font-size': fontSize,\n            ...(lineHeight === undefined ? {} : { 'line-height': lineHeight }),\n            ...(letterSpacing === undefined ? {} : { 'letter-spacing': letterSpacing }),\n            ...(fontWeight === undefined ? {} : { 'font-weight': fontWeight }),\n          }\n        },\n      },\n      {\n        values: theme('fontSize'),\n        modifiers: theme('lineHeight'),\n        type: ['absolute-size', 'relative-size', 'length', 'percentage'],\n      }\n    )\n  },\n\n  fontWeight: createUtilityPlugin('fontWeight', [['font', ['fontWeight']]], {\n    type: ['lookup', 'number', 'any'],\n  }),\n\n  textTransform: ({ addUtilities }) => {\n    addUtilities({\n      '.uppercase': { 'text-transform': 'uppercase' },\n      '.lowercase': { 'text-transform': 'lowercase' },\n      '.capitalize': { 'text-transform': 'capitalize' },\n      '.normal-case': { 'text-transform': 'none' },\n    })\n  },\n\n  fontStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.italic': { 'font-style': 'italic' },\n      '.not-italic': { 'font-style': 'normal' },\n    })\n  },\n\n  fontVariantNumeric: ({ addDefaults, addUtilities }) => {\n    let cssFontVariantNumericValue =\n      'var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)'\n\n    addDefaults('font-variant-numeric', {\n      '--tw-ordinal': ' ',\n      '--tw-slashed-zero': ' ',\n      '--tw-numeric-figure': ' ',\n      '--tw-numeric-spacing': ' ',\n      '--tw-numeric-fraction': ' ',\n    })\n\n    addUtilities({\n      '.normal-nums': { 'font-variant-numeric': 'normal' },\n      '.ordinal': {\n        '@defaults font-variant-numeric': {},\n        '--tw-ordinal': 'ordinal',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.slashed-zero': {\n        '@defaults font-variant-numeric': {},\n        '--tw-slashed-zero': 'slashed-zero',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.lining-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-figure': 'lining-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.oldstyle-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-figure': 'oldstyle-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.proportional-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-spacing': 'proportional-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.tabular-nums': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-spacing': 'tabular-nums',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.diagonal-fractions': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-fraction': 'diagonal-fractions',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n      '.stacked-fractions': {\n        '@defaults font-variant-numeric': {},\n        '--tw-numeric-fraction': 'stacked-fractions',\n        'font-variant-numeric': cssFontVariantNumericValue,\n      },\n    })\n  },\n\n  lineHeight: createUtilityPlugin('lineHeight', [['leading', ['lineHeight']]]),\n  letterSpacing: createUtilityPlugin('letterSpacing', [['tracking', ['letterSpacing']]], {\n    supportsNegativeValues: true,\n  }),\n\n  textColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        text: (value) => {\n          if (!corePlugins('textOpacity')) {\n            return { color: toColorValue(value) }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: 'color',\n            variable: '--tw-text-opacity',\n          })\n        },\n      },\n      { values: flattenColorPalette(theme('textColor')), type: ['color', 'any'] }\n    )\n  },\n\n  textOpacity: createUtilityPlugin('textOpacity', [['text-opacity', ['--tw-text-opacity']]]),\n\n  textDecoration: ({ addUtilities }) => {\n    addUtilities({\n      '.underline': { 'text-decoration-line': 'underline' },\n      '.overline': { 'text-decoration-line': 'overline' },\n      '.line-through': { 'text-decoration-line': 'line-through' },\n      '.no-underline': { 'text-decoration-line': 'none' },\n    })\n  },\n\n  textDecorationColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        decoration: (value) => {\n          return { 'text-decoration-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('textDecorationColor')), type: ['color', 'any'] }\n    )\n  },\n\n  textDecorationStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.decoration-solid': { 'text-decoration-style': 'solid' },\n      '.decoration-double': { 'text-decoration-style': 'double' },\n      '.decoration-dotted': { 'text-decoration-style': 'dotted' },\n      '.decoration-dashed': { 'text-decoration-style': 'dashed' },\n      '.decoration-wavy': { 'text-decoration-style': 'wavy' },\n    })\n  },\n\n  textDecorationThickness: createUtilityPlugin(\n    'textDecorationThickness',\n    [['decoration', ['text-decoration-thickness']]],\n    { type: ['length', 'percentage'] }\n  ),\n\n  textUnderlineOffset: createUtilityPlugin(\n    'textUnderlineOffset',\n    [['underline-offset', ['text-underline-offset']]],\n    { type: ['length', 'percentage', 'any'] }\n  ),\n\n  fontSmoothing: ({ addUtilities }) => {\n    addUtilities({\n      '.antialiased': {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n      },\n      '.subpixel-antialiased': {\n        '-webkit-font-smoothing': 'auto',\n        '-moz-osx-font-smoothing': 'auto',\n      },\n    })\n  },\n\n  placeholderColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        placeholder: (value) => {\n          if (!corePlugins('placeholderOpacity')) {\n            return {\n              '&::placeholder': {\n                color: toColorValue(value),\n              },\n            }\n          }\n\n          return {\n            '&::placeholder': withAlphaVariable({\n              color: value,\n              property: 'color',\n              variable: '--tw-placeholder-opacity',\n            }),\n          }\n        },\n      },\n      { values: flattenColorPalette(theme('placeholderColor')), type: ['color', 'any'] }\n    )\n  },\n\n  placeholderOpacity: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'placeholder-opacity': (value) => {\n          return { ['&::placeholder']: { '--tw-placeholder-opacity': value } }\n        },\n      },\n      { values: theme('placeholderOpacity') }\n    )\n  },\n\n  caretColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        caret: (value) => {\n          return { 'caret-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('caretColor')), type: ['color', 'any'] }\n    )\n  },\n\n  accentColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        accent: (value) => {\n          return { 'accent-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('accentColor')), type: ['color', 'any'] }\n    )\n  },\n\n  opacity: createUtilityPlugin('opacity', [['opacity', ['opacity']]]),\n\n  backgroundBlendMode: ({ addUtilities }) => {\n    addUtilities({\n      '.bg-blend-normal': { 'background-blend-mode': 'normal' },\n      '.bg-blend-multiply': { 'background-blend-mode': 'multiply' },\n      '.bg-blend-screen': { 'background-blend-mode': 'screen' },\n      '.bg-blend-overlay': { 'background-blend-mode': 'overlay' },\n      '.bg-blend-darken': { 'background-blend-mode': 'darken' },\n      '.bg-blend-lighten': { 'background-blend-mode': 'lighten' },\n      '.bg-blend-color-dodge': { 'background-blend-mode': 'color-dodge' },\n      '.bg-blend-color-burn': { 'background-blend-mode': 'color-burn' },\n      '.bg-blend-hard-light': { 'background-blend-mode': 'hard-light' },\n      '.bg-blend-soft-light': { 'background-blend-mode': 'soft-light' },\n      '.bg-blend-difference': { 'background-blend-mode': 'difference' },\n      '.bg-blend-exclusion': { 'background-blend-mode': 'exclusion' },\n      '.bg-blend-hue': { 'background-blend-mode': 'hue' },\n      '.bg-blend-saturation': { 'background-blend-mode': 'saturation' },\n      '.bg-blend-color': { 'background-blend-mode': 'color' },\n      '.bg-blend-luminosity': { 'background-blend-mode': 'luminosity' },\n    })\n  },\n\n  mixBlendMode: ({ addUtilities }) => {\n    addUtilities({\n      '.mix-blend-normal': { 'mix-blend-mode': 'normal' },\n      '.mix-blend-multiply': { 'mix-blend-mode': 'multiply' },\n      '.mix-blend-screen': { 'mix-blend-mode': 'screen' },\n      '.mix-blend-overlay': { 'mix-blend-mode': 'overlay' },\n      '.mix-blend-darken': { 'mix-blend-mode': 'darken' },\n      '.mix-blend-lighten': { 'mix-blend-mode': 'lighten' },\n      '.mix-blend-color-dodge': { 'mix-blend-mode': 'color-dodge' },\n      '.mix-blend-color-burn': { 'mix-blend-mode': 'color-burn' },\n      '.mix-blend-hard-light': { 'mix-blend-mode': 'hard-light' },\n      '.mix-blend-soft-light': { 'mix-blend-mode': 'soft-light' },\n      '.mix-blend-difference': { 'mix-blend-mode': 'difference' },\n      '.mix-blend-exclusion': { 'mix-blend-mode': 'exclusion' },\n      '.mix-blend-hue': { 'mix-blend-mode': 'hue' },\n      '.mix-blend-saturation': { 'mix-blend-mode': 'saturation' },\n      '.mix-blend-color': { 'mix-blend-mode': 'color' },\n      '.mix-blend-luminosity': { 'mix-blend-mode': 'luminosity' },\n      '.mix-blend-plus-lighter': { 'mix-blend-mode': 'plus-lighter' },\n    })\n  },\n\n  boxShadow: (() => {\n    let transformValue = transformThemeValue('boxShadow')\n    let defaultBoxShadow = [\n      `var(--tw-ring-offset-shadow, 0 0 #0000)`,\n      `var(--tw-ring-shadow, 0 0 #0000)`,\n      `var(--tw-shadow)`,\n    ].join(', ')\n\n    return function ({ matchUtilities, addDefaults, theme }) {\n      addDefaults(' box-shadow', {\n        '--tw-ring-offset-shadow': '0 0 #0000',\n        '--tw-ring-shadow': '0 0 #0000',\n        '--tw-shadow': '0 0 #0000',\n        '--tw-shadow-colored': '0 0 #0000',\n      })\n\n      matchUtilities(\n        {\n          shadow: (value) => {\n            value = transformValue(value)\n\n            let ast = parseBoxShadowValue(value)\n            for (let shadow of ast) {\n              // Don't override color if the whole shadow is a variable\n              if (!shadow.valid) {\n                continue\n              }\n\n              shadow.color = 'var(--tw-shadow-color)'\n            }\n\n            return {\n              '@defaults box-shadow': {},\n              '--tw-shadow': value === 'none' ? '0 0 #0000' : value,\n              '--tw-shadow-colored': value === 'none' ? '0 0 #0000' : formatBoxShadowValue(ast),\n              'box-shadow': defaultBoxShadow,\n            }\n          },\n        },\n        { values: theme('boxShadow'), type: ['shadow'] }\n      )\n    }\n  })(),\n\n  boxShadowColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        shadow: (value) => {\n          return {\n            '--tw-shadow-color': toColorValue(value),\n            '--tw-shadow': 'var(--tw-shadow-colored)',\n          }\n        },\n      },\n      { values: flattenColorPalette(theme('boxShadowColor')), type: ['color', 'any'] }\n    )\n  },\n\n  outlineStyle: ({ addUtilities }) => {\n    addUtilities({\n      '.outline-none': {\n        outline: '2px solid transparent',\n        'outline-offset': '2px',\n      },\n      '.outline': { 'outline-style': 'solid' },\n      '.outline-dashed': { 'outline-style': 'dashed' },\n      '.outline-dotted': { 'outline-style': 'dotted' },\n      '.outline-double': { 'outline-style': 'double' },\n    })\n  },\n\n  outlineWidth: createUtilityPlugin('outlineWidth', [['outline', ['outline-width']]], {\n    type: ['length', 'number', 'percentage'],\n  }),\n\n  outlineOffset: createUtilityPlugin('outlineOffset', [['outline-offset', ['outline-offset']]], {\n    type: ['length', 'number', 'percentage', 'any'],\n    supportsNegativeValues: true,\n  }),\n\n  outlineColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        outline: (value) => {\n          return { 'outline-color': toColorValue(value) }\n        },\n      },\n      { values: flattenColorPalette(theme('outlineColor')), type: ['color', 'any'] }\n    )\n  },\n\n  ringWidth: ({ matchUtilities, addDefaults, addUtilities, theme, config }) => {\n    let ringColorDefault = (() => {\n      if (flagEnabled(config(), 'respectDefaultRingColorOpacity')) {\n        return theme('ringColor.DEFAULT')\n      }\n\n      let ringOpacityDefault = theme('ringOpacity.DEFAULT', '0.5')\n\n      if (!theme('ringColor')?.DEFAULT) {\n        return `rgb(147 197 253 / ${ringOpacityDefault})`\n      }\n\n      return withAlphaValue(\n        theme('ringColor')?.DEFAULT,\n        ringOpacityDefault,\n        `rgb(147 197 253 / ${ringOpacityDefault})`\n      )\n    })()\n\n    addDefaults('ring-width', {\n      '--tw-ring-inset': ' ',\n      '--tw-ring-offset-width': theme('ringOffsetWidth.DEFAULT', '0px'),\n      '--tw-ring-offset-color': theme('ringOffsetColor.DEFAULT', '#fff'),\n      '--tw-ring-color': ringColorDefault,\n      '--tw-ring-offset-shadow': '0 0 #0000',\n      '--tw-ring-shadow': '0 0 #0000',\n      '--tw-shadow': '0 0 #0000',\n      '--tw-shadow-colored': '0 0 #0000',\n    })\n\n    matchUtilities(\n      {\n        ring: (value) => {\n          return {\n            '@defaults ring-width': {},\n            '--tw-ring-offset-shadow': `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n            '--tw-ring-shadow': `var(--tw-ring-inset) 0 0 0 calc(${value} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n            'box-shadow': [\n              `var(--tw-ring-offset-shadow)`,\n              `var(--tw-ring-shadow)`,\n              `var(--tw-shadow, 0 0 #0000)`,\n            ].join(', '),\n          }\n        },\n      },\n      { values: theme('ringWidth'), type: 'length' }\n    )\n\n    addUtilities({\n      '.ring-inset': { '@defaults ring-width': {}, '--tw-ring-inset': 'inset' },\n    })\n  },\n\n  ringColor: ({ matchUtilities, theme, corePlugins }) => {\n    matchUtilities(\n      {\n        ring: (value) => {\n          if (!corePlugins('ringOpacity')) {\n            return {\n              '--tw-ring-color': toColorValue(value),\n            }\n          }\n\n          return withAlphaVariable({\n            color: value,\n            property: '--tw-ring-color',\n            variable: '--tw-ring-opacity',\n          })\n        },\n      },\n      {\n        values: Object.fromEntries(\n          Object.entries(flattenColorPalette(theme('ringColor'))).filter(\n            ([modifier]) => modifier !== 'DEFAULT'\n          )\n        ),\n        type: ['color', 'any'],\n      }\n    )\n  },\n\n  ringOpacity: (helpers) => {\n    let { config } = helpers\n\n    return createUtilityPlugin('ringOpacity', [['ring-opacity', ['--tw-ring-opacity']]], {\n      filterDefault: !flagEnabled(config(), 'respectDefaultRingColorOpacity'),\n    })(helpers)\n  },\n  ringOffsetWidth: createUtilityPlugin(\n    'ringOffsetWidth',\n    [['ring-offset', ['--tw-ring-offset-width']]],\n    { type: 'length' }\n  ),\n\n  ringOffsetColor: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'ring-offset': (value) => {\n          return {\n            '--tw-ring-offset-color': toColorValue(value),\n          }\n        },\n      },\n      { values: flattenColorPalette(theme('ringOffsetColor')), type: ['color', 'any'] }\n    )\n  },\n\n  blur: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        blur: (value) => {\n          return {\n            '--tw-blur': `blur(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('blur') }\n    )\n  },\n\n  brightness: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        brightness: (value) => {\n          return {\n            '--tw-brightness': `brightness(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('brightness') }\n    )\n  },\n\n  contrast: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        contrast: (value) => {\n          return {\n            '--tw-contrast': `contrast(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('contrast') }\n    )\n  },\n\n  dropShadow: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'drop-shadow': (value) => {\n          return {\n            '--tw-drop-shadow': Array.isArray(value)\n              ? value.map((v) => `drop-shadow(${v})`).join(' ')\n              : `drop-shadow(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('dropShadow') }\n    )\n  },\n\n  grayscale: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        grayscale: (value) => {\n          return {\n            '--tw-grayscale': `grayscale(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('grayscale') }\n    )\n  },\n\n  hueRotate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'hue-rotate': (value) => {\n          return {\n            '--tw-hue-rotate': `hue-rotate(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('hueRotate'), supportsNegativeValues: true }\n    )\n  },\n\n  invert: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        invert: (value) => {\n          return {\n            '--tw-invert': `invert(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('invert') }\n    )\n  },\n\n  saturate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        saturate: (value) => {\n          return {\n            '--tw-saturate': `saturate(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('saturate') }\n    )\n  },\n\n  sepia: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        sepia: (value) => {\n          return {\n            '--tw-sepia': `sepia(${value})`,\n            '@defaults filter': {},\n            filter: cssFilterValue,\n          }\n        },\n      },\n      { values: theme('sepia') }\n    )\n  },\n\n  filter: ({ addDefaults, addUtilities }) => {\n    addDefaults('filter', {\n      '--tw-blur': ' ',\n      '--tw-brightness': ' ',\n      '--tw-contrast': ' ',\n      '--tw-grayscale': ' ',\n      '--tw-hue-rotate': ' ',\n      '--tw-invert': ' ',\n      '--tw-saturate': ' ',\n      '--tw-sepia': ' ',\n      '--tw-drop-shadow': ' ',\n    })\n    addUtilities({\n      '.filter': { '@defaults filter': {}, filter: cssFilterValue },\n      '.filter-none': { filter: 'none' },\n    })\n  },\n\n  backdropBlur: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-blur': (value) => {\n          return {\n            '--tw-backdrop-blur': `blur(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropBlur') }\n    )\n  },\n\n  backdropBrightness: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-brightness': (value) => {\n          return {\n            '--tw-backdrop-brightness': `brightness(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropBrightness') }\n    )\n  },\n\n  backdropContrast: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-contrast': (value) => {\n          return {\n            '--tw-backdrop-contrast': `contrast(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropContrast') }\n    )\n  },\n\n  backdropGrayscale: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-grayscale': (value) => {\n          return {\n            '--tw-backdrop-grayscale': `grayscale(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropGrayscale') }\n    )\n  },\n\n  backdropHueRotate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-hue-rotate': (value) => {\n          return {\n            '--tw-backdrop-hue-rotate': `hue-rotate(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropHueRotate'), supportsNegativeValues: true }\n    )\n  },\n\n  backdropInvert: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-invert': (value) => {\n          return {\n            '--tw-backdrop-invert': `invert(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropInvert') }\n    )\n  },\n\n  backdropOpacity: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-opacity': (value) => {\n          return {\n            '--tw-backdrop-opacity': `opacity(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropOpacity') }\n    )\n  },\n\n  backdropSaturate: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-saturate': (value) => {\n          return {\n            '--tw-backdrop-saturate': `saturate(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropSaturate') }\n    )\n  },\n\n  backdropSepia: ({ matchUtilities, theme }) => {\n    matchUtilities(\n      {\n        'backdrop-sepia': (value) => {\n          return {\n            '--tw-backdrop-sepia': `sepia(${value})`,\n            '@defaults backdrop-filter': {},\n            'backdrop-filter': cssBackdropFilterValue,\n          }\n        },\n      },\n      { values: theme('backdropSepia') }\n    )\n  },\n\n  backdropFilter: ({ addDefaults, addUtilities }) => {\n    addDefaults('backdrop-filter', {\n      '--tw-backdrop-blur': ' ',\n      '--tw-backdrop-brightness': ' ',\n      '--tw-backdrop-contrast': ' ',\n      '--tw-backdrop-grayscale': ' ',\n      '--tw-backdrop-hue-rotate': ' ',\n      '--tw-backdrop-invert': ' ',\n      '--tw-backdrop-opacity': ' ',\n      '--tw-backdrop-saturate': ' ',\n      '--tw-backdrop-sepia': ' ',\n    })\n    addUtilities({\n      '.backdrop-filter': {\n        '@defaults backdrop-filter': {},\n        'backdrop-filter': cssBackdropFilterValue,\n      },\n      '.backdrop-filter-none': { 'backdrop-filter': 'none' },\n    })\n  },\n\n  transitionProperty: ({ matchUtilities, theme }) => {\n    let defaultTimingFunction = theme('transitionTimingFunction.DEFAULT')\n    let defaultDuration = theme('transitionDuration.DEFAULT')\n\n    matchUtilities(\n      {\n        transition: (value) => {\n          return {\n            'transition-property': value,\n            ...(value === 'none'\n              ? {}\n              : {\n                  'transition-timing-function': defaultTimingFunction,\n                  'transition-duration': defaultDuration,\n                }),\n          }\n        },\n      },\n      { values: theme('transitionProperty') }\n    )\n  },\n\n  transitionDelay: createUtilityPlugin('transitionDelay', [['delay', ['transitionDelay']]]),\n  transitionDuration: createUtilityPlugin(\n    'transitionDuration',\n    [['duration', ['transitionDuration']]],\n    { filterDefault: true }\n  ),\n  transitionTimingFunction: createUtilityPlugin(\n    'transitionTimingFunction',\n    [['ease', ['transitionTimingFunction']]],\n    { filterDefault: true }\n  ),\n  willChange: createUtilityPlugin('willChange', [['will-change', ['will-change']]]),\n  content: createUtilityPlugin('content', [\n    ['content', ['--tw-content', ['content', 'var(--tw-content)']]],\n  ]),\n  forcedColorAdjust: ({ addUtilities }) => {\n    addUtilities({\n      '.forced-color-adjust-auto': { 'forced-color-adjust': 'auto' },\n      '.forced-color-adjust-none': { 'forced-color-adjust': 'none' },\n    })\n  },\n}\n", "import transformThemeValue from './transformThemeValue'\n\nexport default function createUtilityPlugin(\n  themeKey,\n  utilityVariations = [[themeKey, [themeKey]]],\n  { filterDefault = false, ...options } = {}\n) {\n  let transformValue = transformThemeValue(themeKey)\n  return function ({ matchUtilities, theme }) {\n    for (let utilityVariation of utilityVariations) {\n      let group = Array.isArray(utilityVariation[0]) ? utilityVariation : [utilityVariation]\n\n      matchUtilities(\n        group.reduce((obj, [classPrefix, properties]) => {\n          return Object.assign(obj, {\n            [classPrefix]: (value) => {\n              return properties.reduce((obj, name) => {\n                if (Array.isArray(name)) {\n                  return Object.assign(obj, { [name[0]]: name[1] })\n                }\n                return Object.assign(obj, { [name]: transformValue(value) })\n              }, {})\n            },\n          })\n        }, {}),\n        {\n          ...options,\n          values: filterDefault\n            ? Object.fromEntries(\n                Object.entries(theme(themeKey) ?? {}).filter(([modifier]) => modifier !== 'DEFAULT')\n              )\n            : theme(themeKey),\n        }\n      )\n    }\n  }\n}\n", "export default function buildMediaQuery(screens) {\n  screens = Array.isArray(screens) ? screens : [screens]\n\n  return screens\n    .map((screen) => {\n      let values = screen.values.map((screen) => {\n        if (screen.raw !== undefined) {\n          return screen.raw\n        }\n\n        return [\n          screen.min && `(min-width: ${screen.min})`,\n          screen.max && `(max-width: ${screen.max})`,\n        ]\n          .filter(Boolean)\n          .join(' and ')\n      })\n\n      return screen.not ? `not all and ${values}` : values\n    })\n    .join(', ')\n}\n", "const DIRECTIONS = new Set(['normal', 'reverse', 'alternate', 'alternate-reverse'])\nconst PLAY_STATES = new Set(['running', 'paused'])\nconst FILL_MODES = new Set(['none', 'forwards', 'backwards', 'both'])\nconst ITERATION_COUNTS = new Set(['infinite'])\nconst TIMINGS = new Set([\n  'linear',\n  'ease',\n  'ease-in',\n  'ease-out',\n  'ease-in-out',\n  'step-start',\n  'step-end',\n])\nconst TIMING_FNS = ['cubic-bezier', 'steps']\n\nconst COMMA = /\\,(?![^(]*\\))/g // Comma separator that is not located between brackets. E.g.: `cubiz-bezier(a, b, c)` these don't count.\nconst SPACE = /\\ +(?![^(]*\\))/g // Similar to the one above, but with spaces instead.\nconst TIME = /^(-?[\\d.]+m?s)$/\nconst DIGIT = /^(\\d+)$/\n\nexport default function parseAnimationValue(input) {\n  let animations = input.split(COMMA)\n  return animations.map((animation) => {\n    let value = animation.trim()\n    let result = { value }\n    let parts = value.split(SPACE)\n    let seen = new Set()\n\n    for (let part of parts) {\n      if (!seen.has('DIRECTIONS') && DIRECTIONS.has(part)) {\n        result.direction = part\n        seen.add('DIRECTIONS')\n      } else if (!seen.has('PLAY_STATES') && PLAY_STATES.has(part)) {\n        result.playState = part\n        seen.add('PLAY_STATES')\n      } else if (!seen.has('FILL_MODES') && FILL_MODES.has(part)) {\n        result.fillMode = part\n        seen.add('FILL_MODES')\n      } else if (\n        !seen.has('ITERATION_COUNTS') &&\n        (ITERATION_COUNTS.has(part) || DIGIT.test(part))\n      ) {\n        result.iterationCount = part\n        seen.add('ITERATION_COUNTS')\n      } else if (!seen.has('TIMING_FUNCTION') && TIMINGS.has(part)) {\n        result.timingFunction = part\n        seen.add('TIMING_FUNCTION')\n      } else if (!seen.has('TIMING_FUNCTION') && TIMING_FNS.some((f) => part.startsWith(`${f}(`))) {\n        result.timingFunction = part\n        seen.add('TIMING_FUNCTION')\n      } else if (!seen.has('DURATION') && TIME.test(part)) {\n        result.duration = part\n        seen.add('DURATION')\n      } else if (!seen.has('DELAY') && TIME.test(part)) {\n        result.delay = part\n        seen.add('DELAY')\n      } else if (!seen.has('NAME')) {\n        result.name = part\n        seen.add('NAME')\n      } else {\n        if (!result.unknown) result.unknown = []\n        result.unknown.push(part)\n      }\n    }\n\n    return result\n  })\n}\n", "const flattenColorPalette = (colors) =>\n  Object.assign(\n    {},\n    ...Object.entries(colors ?? {}).flatMap(([color, values]) =>\n      typeof values == 'object'\n        ? Object.entries(flattenColorPalette(values)).map(([number, hex]) => ({\n            [color + (number === 'DEFAULT' ? '' : `-${number}`)]: hex,\n          }))\n        : [{ [`${color}`]: values }]\n    )\n  )\n\nexport default flattenColorPalette\n", "export default function toColorValue(maybeFunction) {\n  return typeof maybeFunction === 'function' ? maybeFunction({}) : maybeFunction\n}\n", "/**\n * @typedef {object} ScreenValue\n * @property {number|undefined} min\n * @property {number|undefined} max\n * @property {string|undefined} raw\n */\n\n/**\n * @typedef {object} Screen\n * @property {string} name\n * @property {boolean} not\n * @property {ScreenValue[]} values\n */\n\n/**\n * A function that normalizes the various forms that the screens object can be\n * provided in.\n *\n * Input(s):\n *   - ['100px', '200px'] // Raw strings\n *   - { sm: '100px', md: '200px' } // Object with string values\n *   - { sm: { min: '100px' }, md: { max: '100px' } } // Object with object values\n *   - { sm: [{ min: '100px' }, { max: '200px' }] } // Object with object array (multiple values)\n *\n * Output(s):\n *   - [{ name: 'sm', values: [{ min: '100px', max: '200px' }] }] // List of objects, that contains multiple values\n *\n * @returns {Screen[]}\n */\nexport function normalizeScreens(screens, root = true) {\n  if (Array.isArray(screens)) {\n    return screens.map((screen) => {\n      if (root && Array.isArray(screen)) {\n        throw new Error('The tuple syntax is not supported for `screens`.')\n      }\n\n      if (typeof screen === 'string') {\n        return { name: screen.toString(), not: false, values: [{ min: screen, max: undefined }] }\n      }\n\n      let [name, options] = screen\n      name = name.toString()\n\n      if (typeof options === 'string') {\n        return { name, not: false, values: [{ min: options, max: undefined }] }\n      }\n\n      if (Array.isArray(options)) {\n        return { name, not: false, values: options.map((option) => resolveValue(option)) }\n      }\n\n      return { name, not: false, values: [resolveValue(options)] }\n    })\n  }\n\n  return normalizeScreens(Object.entries(screens ?? {}), false)\n}\n\n/**\n * @param {Screen} screen\n * @returns {{result: false, reason: string} | {result: true, reason: null}}\n */\nexport function isScreenSortable(screen) {\n  if (screen.values.length !== 1) {\n    return { result: false, reason: 'multiple-values' }\n  } else if (screen.values[0].raw !== undefined) {\n    return { result: false, reason: 'raw-values' }\n  } else if (screen.values[0].min !== undefined && screen.values[0].max !== undefined) {\n    return { result: false, reason: 'min-and-max' }\n  }\n\n  return { result: true, reason: null }\n}\n\n/**\n * @param {'min' | 'max'} type\n * @param {Screen | 'string'} a\n * @param {Screen | 'string'} z\n * @returns {number}\n */\nexport function compareScreens(type, a, z) {\n  let aScreen = toScreen(a, type)\n  let zScreen = toScreen(z, type)\n\n  let aSorting = isScreenSortable(aScreen)\n  let bSorting = isScreenSortable(zScreen)\n\n  // These cases should never happen and indicate a bug in Tailwind CSS itself\n  if (aSorting.reason === 'multiple-values' || bSorting.reason === 'multiple-values') {\n    throw new Error(\n      'Attempted to sort a screen with multiple values. This should never happen. Please open a bug report.'\n    )\n  } else if (aSorting.reason === 'raw-values' || bSorting.reason === 'raw-values') {\n    throw new Error(\n      'Attempted to sort a screen with raw values. This should never happen. Please open a bug report.'\n    )\n  } else if (aSorting.reason === 'min-and-max' || bSorting.reason === 'min-and-max') {\n    throw new Error(\n      'Attempted to sort a screen with both min and max values. This should never happen. Please open a bug report.'\n    )\n  }\n\n  // Let the sorting begin\n  let { min: aMin, max: aMax } = aScreen.values[0]\n  let { min: zMin, max: zMax } = zScreen.values[0]\n\n  // Negating screens flip their behavior. Basically `not min-width` is `max-width`\n  if (a.not) [aMin, aMax] = [aMax, aMin]\n  if (z.not) [zMin, zMax] = [zMax, zMin]\n\n  aMin = aMin === undefined ? aMin : parseFloat(aMin)\n  aMax = aMax === undefined ? aMax : parseFloat(aMax)\n  zMin = zMin === undefined ? zMin : parseFloat(zMin)\n  zMax = zMax === undefined ? zMax : parseFloat(zMax)\n\n  let [aValue, zValue] = type === 'min' ? [aMin, zMin] : [zMax, aMax]\n\n  return aValue - zValue\n}\n\n/**\n *\n * @param {PartialScreen> | string} value\n * @param {'min' | 'max'} type\n * @returns {Screen}\n */\nexport function toScreen(value, type) {\n  if (typeof value === 'object') {\n    return value\n  }\n\n  return {\n    name: 'arbitrary-screen',\n    values: [{ [type]: value }],\n  }\n}\n\nfunction resolveValue({ 'min-width': _minWidth, min = _minWidth, max, raw } = {}) {\n  return { min, max, raw }\n}\n", "/**\n * This function removes any uses of CSS variables used as an alpha channel\n *\n * This is required for selectors like `:visited` which do not allow\n * changes in opacity or external control using CSS variables.\n *\n * @param {import('postcss').Container} container\n * @param {string[]} toRemove\n */\nexport function removeAlphaVariables(container, toRemove) {\n  container.walkDecls((decl) => {\n    if (toRemove.includes(decl.prop)) {\n      decl.remove()\n\n      return\n    }\n\n    for (let varName of toRemove) {\n      if (decl.value.includes(`/ var(${varName})`)) {\n        decl.value = decl.value.replace(`/ var(${varName})`, '')\n      }\n    }\n  })\n}\n", "/**\n * Parse a path string into an array of path segments.\n *\n * Square bracket notation `a[b]` may be used to \"escape\" dots that would otherwise be interpreted as path separators.\n *\n * Example:\n * a -> ['a']\n * a.b.c -> ['a', 'b', 'c']\n * a[b].c -> ['a', 'b', 'c']\n * a[b.c].e.f -> ['a', 'b.c', 'e', 'f']\n * a[b][c][d] -> ['a', 'b', 'c', 'd']\n *\n * @param {string|string[]} path\n **/\nexport function toPath(path) {\n  if (Array.isArray(path)) return path\n\n  let openBrackets = path.split('[').length - 1\n  let closedBrackets = path.split(']').length - 1\n\n  if (openBrackets !== closedBrackets) {\n    throw new Error(`Path is invalid. Has unbalanced brackets: ${path}`)\n  }\n\n  return path.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean)\n}\n", "let matchingBrackets = new Map([\n  ['{', '}'],\n  ['[', ']'],\n  ['(', ')'],\n])\nlet inverseMatchingBrackets = new Map(\n  Array.from(matchingBrackets.entries()).map(([k, v]) => [v, k])\n)\n\nlet quotes = new Set(['\"', \"'\", '`'])\n\n// Arbitrary values must contain balanced brackets (), [] and {}. Escaped\n// values don't count, and brackets inside quotes also don't count.\n//\n// E.g.: w-[this-is]w-[weird-and-invalid]\n// E.g.: w-[this-is\\\\]w-\\\\[weird-but-valid]\n// E.g.: content-['this-is-also-valid]-weirdly-enough']\nexport default function isSyntacticallyValidPropertyValue(value) {\n  let stack = []\n  let inQuotes = false\n\n  for (let i = 0; i < value.length; i++) {\n    let char = value[i]\n\n    if (char === ':' && !inQuotes && stack.length === 0) {\n      return false\n    }\n\n    // Non-escaped quotes allow us to \"allow\" anything in between\n    if (quotes.has(char) && value[i - 1] !== '\\\\') {\n      inQuotes = !inQuotes\n    }\n\n    if (inQuotes) continue\n    if (value[i - 1] === '\\\\') continue // Escaped\n\n    if (matchingBrackets.has(char)) {\n      stack.push(char)\n    } else if (inverseMatchingBrackets.has(char)) {\n      let inverse = inverseMatchingBrackets.get(char)\n\n      // Nothing to pop from, therefore it is unbalanced\n      if (stack.length <= 0) {\n        return false\n      }\n\n      // Popped value must match the inverse value, otherwise it is unbalanced\n      if (stack.pop() !== inverse) {\n        return false\n      }\n    }\n  }\n\n  // If there is still something on the stack, it is also unbalanced\n  if (stack.length > 0) {\n    return false\n  }\n\n  // All good, totally balanced!\n  return true\n}\n", "export default function bigSign(bigIntValue) {\n  return (bigIntValue > 0n) - (bigIntValue < 0n)\n}\n", "// @ts-check\n\n/**\n * We must remap all the old bits to new bits for each set variant\n * Only arbitrary variants are considered as those are the only\n * ones that need to be re-sorted at this time\n *\n * An iterated process that removes and sets individual bits simultaneously\n * will not work because we may have a new bit that is also a later old bit\n * This means that we would be removing a previously set bit which we don't\n * want to do\n *\n * For example (assume `bN` = `1<<N`)\n * Given the \"total\" mapping `[[b1, b3], [b2, b4], [b3, b1], [b4, b2]]`\n * The mapping is \"total\" because:\n * 1. Every input and output is accounted for\n * 2. All combinations are unique\n * 3. No one input maps to multiple outputs and vice versa\n * And, given an offset with all bits set:\n * V = b1 | b2 | b3 | b4\n *\n * Let's explore the issue with removing and setting bits simultaneously:\n * V & ~b1 | b3 = b2 | b3 | b4\n * V & ~b2 | b4 = b3 | b4\n * V & ~b3 | b1 = b1 | b4\n * V & ~b4 | b2 = b1 | b2\n *\n * As you can see, we end up with the wrong result.\n * This is because we're removing a bit that was previously set.\n * And, thus the final result is missing b3 and b4.\n *\n * Now, let's explore the issue with removing the bits first:\n * V & ~b1 = b2 | b3 | b4\n * V & ~b2 = b3 | b4\n * V & ~b3 = b4\n * V & ~b4 = 0\n *\n * And then setting the bits:\n * V | b3 = b3\n * V | b4 = b3 | b4\n * V | b1 = b1 | b3 | b4\n * V | b2 = b1 | b2 | b3 | b4\n *\n * We get the correct result because we're not removing any bits that were\n * previously set thus properly remapping the bits to the new order\n *\n * To collect this into a single operation that can be done simultaneously\n * we must first create a mask for the old bits that are set and a mask for\n * the new bits that are set. Then we can remove the old bits and set the new\n * bits simultaneously in a \"single\" operation like so:\n * OldMask = b1 | b2 | b3 | b4\n * NewMask = b3 | b4 | b1 | b2\n *\n * So this:\n * V & ~oldMask | newMask\n *\n * Expands to this:\n * V & ~b1 & ~b2 & ~b3 & ~b4 | b3 | b4 | b1 | b2\n *\n * Which becomes this:\n * b1 | b2 | b3 | b4\n *\n * Which is the correct result!\n *\n * @param {bigint} num\n * @param {[bigint, bigint][]} mapping\n */\nexport function remapBitfield(num, mapping) {\n  // Create masks for the old and new bits that are set\n  let oldMask = 0n\n  let newMask = 0n\n  for (let [oldBit, newBit] of mapping) {\n    if (num & oldBit) {\n      oldMask = oldMask | oldBit\n      newMask = newMask | newBit\n    }\n  }\n\n  // Remove all old bits\n  // Set all new bits\n  return (num & ~oldMask) | newMask\n}\n", "// @ts-check\n\nimport bigSign from '../util/bigSign'\nimport { remapBitfield } from './remap-bitfield.js'\n\n/**\n * @typedef {'base' | 'defaults' | 'components' | 'utilities' | 'variants' | 'user'} Layer\n */\n\n/**\n * @typedef {object} VariantOption\n * @property {number} id An unique identifier to identify `matchVariant`\n * @property {function | undefined} sort The sort function\n * @property {string|null} value The value we want to compare\n * @property {string|null} modifier The modifier that was used (if any)\n * @property {bigint} variant The variant bitmask\n */\n\n/**\n * @typedef {object} RuleOffset\n * @property {Layer} layer The layer that this rule belongs to\n * @property {Layer} parentLayer The layer that this rule originally belonged to. Only different from layer if this is a variant.\n * @property {bigint} arbitrary 0n if false, 1n if true\n * @property {bigint} variants Dynamic size. 1 bit per registered variant. 0n means no variants\n * @property {bigint} parallelIndex Rule index for the parallel variant. 0 if not applicable.\n * @property {bigint} index Index of the rule / utility in it's given *parent* layer. Monotonically increasing.\n * @property {VariantOption[]} options Some information on how we can sort arbitrary variants\n */\n\nexport class Offsets {\n  constructor() {\n    /**\n     * Offsets for the next rule in a given layer\n     *\n     * @type {Record<Layer, bigint>}\n     */\n    this.offsets = {\n      defaults: 0n,\n      base: 0n,\n      components: 0n,\n      utilities: 0n,\n      variants: 0n,\n      user: 0n,\n    }\n\n    /**\n     * Positions for a given layer\n     *\n     * @type {Record<Layer, bigint>}\n     */\n    this.layerPositions = {\n      defaults: 0n,\n      base: 1n,\n      components: 2n,\n      utilities: 3n,\n\n      // There isn't technically a \"user\" layer, but we need to give it a position\n      // Because it's used for ordering user-css from @apply\n      user: 4n,\n\n      variants: 5n,\n    }\n\n    /**\n     * The total number of functions currently registered across all variants (including arbitrary variants)\n     *\n     * @type {bigint}\n     */\n    this.reservedVariantBits = 0n\n\n    /**\n     * Positions for a given variant\n     *\n     * @type {Map<string, bigint>}\n     */\n    this.variantOffsets = new Map()\n  }\n\n  /**\n   * @param {Layer} layer\n   * @returns {RuleOffset}\n   */\n  create(layer) {\n    return {\n      layer,\n      parentLayer: layer,\n      arbitrary: 0n,\n      variants: 0n,\n      parallelIndex: 0n,\n      index: this.offsets[layer]++,\n      options: [],\n    }\n  }\n\n  /**\n   * @returns {RuleOffset}\n   */\n  arbitraryProperty() {\n    return {\n      ...this.create('utilities'),\n      arbitrary: 1n,\n    }\n  }\n\n  /**\n   * Get the offset for a variant\n   *\n   * @param {string} variant\n   * @param {number} index\n   * @returns {RuleOffset}\n   */\n  forVariant(variant, index = 0) {\n    let offset = this.variantOffsets.get(variant)\n    if (offset === undefined) {\n      throw new Error(`Cannot find offset for unknown variant ${variant}`)\n    }\n\n    return {\n      ...this.create('variants'),\n      variants: offset << BigInt(index),\n    }\n  }\n\n  /**\n   * @param {RuleOffset} rule\n   * @param {RuleOffset} variant\n   * @param {VariantOption} options\n   * @returns {RuleOffset}\n   */\n  applyVariantOffset(rule, variant, options) {\n    options.variant = variant.variants\n\n    return {\n      ...rule,\n      layer: 'variants',\n      parentLayer: rule.layer === 'variants' ? rule.parentLayer : rule.layer,\n      variants: rule.variants | variant.variants,\n      options: options.sort ? [].concat(options, rule.options) : rule.options,\n\n      // TODO: Technically this is wrong. We should be handling parallel index on a per variant basis.\n      // We'll take the max of all the parallel indexes for now.\n      // @ts-ignore\n      parallelIndex: max([rule.parallelIndex, variant.parallelIndex]),\n    }\n  }\n\n  /**\n   * @param {RuleOffset} offset\n   * @param {number} parallelIndex\n   * @returns {RuleOffset}\n   */\n  applyParallelOffset(offset, parallelIndex) {\n    return {\n      ...offset,\n      parallelIndex: BigInt(parallelIndex),\n    }\n  }\n\n  /**\n   * Each variant gets 1 bit per function / rule registered.\n   * This is because multiple variants can be applied to a single rule and we need to know which ones are present and which ones are not.\n   * Additionally, every unique group of variants is grouped together in the stylesheet.\n   *\n   * This grouping is order-independent. For instance, we do not differentiate between `hover:focus` and `focus:hover`.\n   *\n   * @param {string[]} variants\n   * @param {(name: string) => number} getLength\n   */\n  recordVariants(variants, getLength) {\n    for (let variant of variants) {\n      this.recordVariant(variant, getLength(variant))\n    }\n  }\n\n  /**\n   * The same as `recordVariants` but for a single arbitrary variant at runtime.\n   * @param {string} variant\n   * @param {number} fnCount\n   *\n   * @returns {RuleOffset} The highest offset for this variant\n   */\n  recordVariant(variant, fnCount = 1) {\n    this.variantOffsets.set(variant, 1n << this.reservedVariantBits)\n\n    // Ensure space is reserved for each \"function\" in the parallel variant\n    // by offsetting the next variant by the number of parallel variants\n    // in the one we just added.\n\n    // Single functions that return parallel variants are NOT handled separately here\n    // They're offset by 1 (or the number of functions) as usual\n    // And each rule returned is tracked separately since the functions are evaluated lazily.\n    // @see `RuleOffset.parallelIndex`\n    this.reservedVariantBits += BigInt(fnCount)\n\n    return {\n      ...this.create('variants'),\n      variants: this.variantOffsets.get(variant),\n    }\n  }\n\n  /**\n   * @param {RuleOffset} a\n   * @param {RuleOffset} b\n   * @returns {bigint}\n   */\n  compare(a, b) {\n    // Sort layers together\n    if (a.layer !== b.layer) {\n      return this.layerPositions[a.layer] - this.layerPositions[b.layer]\n    }\n\n    // When sorting the `variants` layer, we need to sort based on the parent layer as well within\n    // this variants layer.\n    if (a.parentLayer !== b.parentLayer) {\n      return this.layerPositions[a.parentLayer] - this.layerPositions[b.parentLayer]\n    }\n\n    // Sort based on the sorting function\n    for (let aOptions of a.options) {\n      for (let bOptions of b.options) {\n        if (aOptions.id !== bOptions.id) continue\n        if (!aOptions.sort || !bOptions.sort) continue\n\n        let maxFnVariant = max([aOptions.variant, bOptions.variant]) ?? 0n\n\n        // Create a mask of 0s from bits 1..N where N represents the mask of the Nth bit\n        let mask = ~(maxFnVariant | (maxFnVariant - 1n))\n        let aVariantsAfterFn = a.variants & mask\n        let bVariantsAfterFn = b.variants & mask\n\n        // If the variants the same, we _can_ sort them\n        if (aVariantsAfterFn !== bVariantsAfterFn) {\n          continue\n        }\n\n        let result = aOptions.sort(\n          {\n            value: aOptions.value,\n            modifier: aOptions.modifier,\n          },\n          {\n            value: bOptions.value,\n            modifier: bOptions.modifier,\n          }\n        )\n        if (result !== 0) return result\n      }\n    }\n\n    // Sort variants in the order they were registered\n    if (a.variants !== b.variants) {\n      return a.variants - b.variants\n    }\n\n    // Make sure each rule returned by a parallel variant is sorted in ascending order\n    if (a.parallelIndex !== b.parallelIndex) {\n      return a.parallelIndex - b.parallelIndex\n    }\n\n    // Always sort arbitrary properties after other utilities\n    if (a.arbitrary !== b.arbitrary) {\n      return a.arbitrary - b.arbitrary\n    }\n\n    // Sort utilities, components, etc\u2026 in the order they were registered\n    return a.index - b.index\n  }\n\n  /**\n   * Arbitrary variants are recorded in the order they're encountered.\n   * This means that the order is not stable between environments and sets of content files.\n   *\n   * In order to make the order stable, we need to remap the arbitrary variant offsets to\n   * be in alphabetical order starting from the offset of the first arbitrary variant.\n   */\n  recalculateVariantOffsets() {\n    // Sort the variants by their name\n    let variants = Array.from(this.variantOffsets.entries())\n      .filter(([v]) => v.startsWith('['))\n      .sort(([a], [z]) => fastCompare(a, z))\n\n    // Sort the list of offsets\n    // This is not necessarily a discrete range of numbers which is why\n    // we're using sort instead of creating a range from min/max\n    let newOffsets = variants.map(([, offset]) => offset).sort((a, z) => bigSign(a - z))\n\n    // Create a map from the old offsets to the new offsets in the new sort order\n    /** @type {[bigint, bigint][]} */\n    let mapping = variants.map(([, oldOffset], i) => [oldOffset, newOffsets[i]])\n\n    // Remove any variants that will not move letting us skip\n    // remapping if everything happens to be in order\n    return mapping.filter(([a, z]) => a !== z)\n  }\n\n  /**\n   * @template T\n   * @param {[RuleOffset, T][]} list\n   * @returns {[RuleOffset, T][]}\n   */\n  remapArbitraryVariantOffsets(list) {\n    let mapping = this.recalculateVariantOffsets()\n\n    // No arbitrary variants? Nothing to do.\n    // Everyhing already in order? Nothing to do.\n    if (mapping.length === 0) {\n      return list\n    }\n\n    // Remap every variant offset in the list\n    return list.map((item) => {\n      let [offset, rule] = item\n\n      offset = {\n        ...offset,\n        variants: remapBitfield(offset.variants, mapping),\n      }\n\n      return [offset, rule]\n    })\n  }\n\n  /**\n   * @template T\n   * @param {[RuleOffset, T][]} list\n   * @returns {[RuleOffset, T][]}\n   */\n  sort(list) {\n    list = this.remapArbitraryVariantOffsets(list)\n\n    return list.sort(([a], [b]) => bigSign(this.compare(a, b)))\n  }\n}\n\n/**\n *\n * @param {bigint[]} nums\n * @returns {bigint|null}\n */\nfunction max(nums) {\n  let max = null\n\n  for (const num of nums) {\n    max = max ?? num\n    max = max > num ? max : num\n  }\n\n  return max\n}\n\n/**\n * A fast ASCII order string comparison function.\n *\n * Using `.sort()` without a custom compare function is faster\n * But you can only use that if you're sorting an array of\n * only strings. If you're sorting strings inside objects\n * or arrays, you need must use a custom compare function.\n *\n * @param {string} a\n * @param {string} b\n */\nfunction fastCompare(a, b) {\n  let aLen = a.length\n  let bLen = b.length\n  let minLen = aLen < bLen ? aLen : bLen\n\n  for (let i = 0; i < minLen; i++) {\n    let cmp = a.charCodeAt(i) - b.charCodeAt(i)\n    if (cmp !== 0) return cmp\n  }\n\n  return aLen - bLen\n}\n", "import parser from 'postcss-selector-parser'\nimport { movePseudos } from './pseudoElements'\n\nexport function applyImportantSelector(selector, important) {\n  let sel = parser().astSync(selector)\n\n  sel.each((sel) => {\n    // Wrap with :is if it's not already wrapped\n    let isWrapped =\n      sel.nodes[0].type === 'pseudo' &&\n      sel.nodes[0].value === ':is' &&\n      sel.nodes.every((node) => node.type !== 'combinator')\n\n    if (!isWrapped) {\n      sel.nodes = [\n        parser.pseudo({\n          value: ':is',\n          nodes: [sel.clone()],\n        }),\n      ]\n    }\n\n    movePseudos(sel)\n  })\n\n  return `${important} ${sel.toString()}`\n}\n", "/**\n * @param {import('postcss').Container[]} nodes\n * @param {any} source\n * @param {any} raws\n * @returns {import('postcss').Container[]}\n */\nexport default function cloneNodes(nodes, source = undefined, raws = undefined) {\n  return nodes.map((node) => {\n    let cloned = node.clone()\n\n    if (raws !== undefined) {\n      cloned.raws.tailwind = {\n        ...cloned.raws.tailwind,\n        ...raws,\n      }\n    }\n\n    if (source !== undefined) {\n      traverse(cloned, (node) => {\n        // Do not traverse nodes that have opted\n        // to preserve their original source\n        let shouldPreserveSource = node.raws.tailwind?.preserveSource === true && node.source\n        if (shouldPreserveSource) {\n          return false\n        }\n\n        // Otherwise we can safely replace the source\n        // And continue traversing\n        node.source = source\n      })\n    }\n\n    return cloned\n  })\n}\n\n/**\n * Traverse a tree of nodes and don't traverse children if the callback\n * returns false. Ideally we'd use Container#walk instead of this\n * function but it stops traversing siblings too.\n *\n * @param {import('postcss').Container} node\n * @param {(node: import('postcss').Container) => boolean} onNode\n */\nfunction traverse(node, onNode) {\n  if (onNode(node) !== false) {\n    node.each?.((child) => traverse(child, onNode))\n  }\n}\n", "const REGEX_SPECIAL = /[\\\\^$.*+?()[\\]{}|]/g\nconst REGEX_HAS_SPECIAL = RegExp(REGEX_SPECIAL.source)\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nfunction toSource(source) {\n  source = Array.isArray(source) ? source : [source]\n\n  source = source.map((item) => (item instanceof RegExp ? item.source : item))\n\n  return source.join('')\n}\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function pattern(source) {\n  return new RegExp(toSource(source), 'g')\n}\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function withoutCapturing(source) {\n  return new RegExp(`(?:${toSource(source)})`, 'g')\n}\n\n/**\n * @param {Array<string|RegExp>} sources\n */\nexport function any(sources) {\n  return `(?:${sources.map(toSource).join('|')})`\n}\n\n/**\n * @param {string|RegExp} source\n */\nexport function optional(source) {\n  return `(?:${toSource(source)})?`\n}\n\n/**\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function zeroOrMore(source) {\n  return `(?:${toSource(source)})*`\n}\n\n/**\n * Generate a RegExp that matches balanced brackets for a given depth\n * We have to specify a depth because JS doesn't support recursive groups using ?R\n *\n * Based on https://stackoverflow.com/questions/17759004/how-to-match-string-within-parentheses-nested-in-java/17759264#17759264\n *\n * @param {string|RegExp|Array<string|RegExp>} source\n */\nexport function nestedBrackets(open, close, depth = 1) {\n  return withoutCapturing([\n    escape(open),\n    /[^\\s]*/,\n    depth === 1\n      ? `[^${escape(open)}${escape(close)}\\s]*`\n      : any([`[^${escape(open)}${escape(close)}\\s]*`, nestedBrackets(open, close, depth - 1)]),\n    /[^\\s]*/,\n    escape(close),\n  ])\n}\n\nexport function escape(string) {\n  return string && REGEX_HAS_SPECIAL.test(string)\n    ? string.replace(REGEX_SPECIAL, '\\\\$&')\n    : string || ''\n}\n", "import * as regex from './regex'\n\nexport function defaultExtractor(context) {\n  let patterns = Array.from(buildRegExps(context))\n\n  /**\n   * @param {string} content\n   */\n  return (content) => {\n    /** @type {(string|string)[]} */\n    let results = []\n\n    for (let pattern of patterns) {\n      for (let result of content.match(pattern) ?? []) {\n        results.push(clipAtBalancedParens(result))\n      }\n    }\n\n    return results\n  }\n}\n\nfunction* buildRegExps(context) {\n  let separator = context.tailwindConfig.separator\n  let prefix =\n    context.tailwindConfig.prefix !== ''\n      ? regex.optional(regex.pattern([/-?/, regex.escape(context.tailwindConfig.prefix)]))\n      : ''\n\n  let utility = regex.any([\n    // Arbitrary properties (without square brackets)\n    /\\[[^\\s:'\"`]+:[^\\s\\[\\]]+\\]/,\n\n    // Arbitrary properties with balanced square brackets\n    // This is a targeted fix to continue to allow theme()\n    // with square brackets to work in arbitrary properties\n    // while fixing a problem with the regex matching too much\n    /\\[[^\\s:'\"`\\]]+:[^\\s]+?\\[[^\\s]+\\][^\\s]+?\\]/,\n\n    // Utilities\n    regex.pattern([\n      // Utility Name / Group Name\n      regex.any([\n        /-?(?:\\w+)/,\n\n        // This is here to make sure @container supports everything that other utilities do\n        /@(?:\\w+)/,\n      ]),\n\n      // Normal/Arbitrary values\n      regex.optional(\n        regex.any([\n          regex.pattern([\n            // Arbitrary values\n            regex.any([\n              /-(?:\\w+-)*\\['[^\\s]+'\\]/,\n              /-(?:\\w+-)*\\[\"[^\\s]+\"\\]/,\n              /-(?:\\w+-)*\\[`[^\\s]+`\\]/,\n              /-(?:\\w+-)*\\[(?:[^\\s\\[\\]]+\\[[^\\s\\[\\]]+\\])*[^\\s:\\[\\]]+\\]/,\n            ]),\n\n            // Not immediately followed by an `{[(`\n            /(?![{([]])/,\n\n            // optionally followed by an opacity modifier\n            /(?:\\/[^\\s'\"`\\\\><$]*)?/,\n          ]),\n\n          regex.pattern([\n            // Arbitrary values\n            regex.any([\n              /-(?:\\w+-)*\\['[^\\s]+'\\]/,\n              /-(?:\\w+-)*\\[\"[^\\s]+\"\\]/,\n              /-(?:\\w+-)*\\[`[^\\s]+`\\]/,\n              /-(?:\\w+-)*\\[(?:[^\\s\\[\\]]+\\[[^\\s\\[\\]]+\\])*[^\\s\\[\\]]+\\]/,\n            ]),\n\n            // Not immediately followed by an `{[(`\n            /(?![{([]])/,\n\n            // optionally followed by an opacity modifier\n            /(?:\\/[^\\s'\"`\\\\$]*)?/,\n          ]),\n\n          // Normal values w/o quotes \u2014 may include an opacity modifier\n          /[-\\/][^\\s'\"`\\\\$={><]*/,\n        ])\n      ),\n    ]),\n  ])\n\n  let variantPatterns = [\n    // Without quotes\n    regex.any([\n      // This is here to provide special support for the `@` variant\n      regex.pattern([/@\\[[^\\s\"'`]+\\](\\/[^\\s\"'`]+)?/, separator]),\n\n      // With variant modifier (e.g.: group-[..]/modifier)\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]\\/\\w+/, separator]),\n\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]/, separator]),\n      regex.pattern([/[^\\s\"'`\\[\\\\]+/, separator]),\n    ]),\n\n    // With quotes allowed\n    regex.any([\n      // With variant modifier (e.g.: group-[..]/modifier)\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]\\/\\w+/, separator]),\n\n      regex.pattern([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]/, separator]),\n      regex.pattern([/[^\\s`\\[\\\\]+/, separator]),\n    ]),\n  ]\n\n  for (const variantPattern of variantPatterns) {\n    yield regex.pattern([\n      // Variants\n      '((?=((',\n      variantPattern,\n      ')+))\\\\2)?',\n\n      // Important (optional)\n      /!?/,\n\n      prefix,\n\n      utility,\n    ])\n  }\n\n  // 5. Inner matches\n  yield /[^<>\"'`\\s.(){}[\\]#=%$]*[^<>\"'`\\s.(){}[\\]#=%:$]/g\n}\n\n// We want to capture any \"special\" characters\n// AND the characters immediately following them (if there is one)\nlet SPECIALS = /([\\[\\]'\"`])([^\\[\\]'\"`])?/g\nlet ALLOWED_CLASS_CHARACTERS = /[^\"'`\\s<>\\]]+/\n\n/**\n * Clips a string ensuring that parentheses, quotes, etc\u2026 are balanced\n * Used for arbitrary values only\n *\n * We will go past the end of the balanced parens until we find a non-class character\n *\n * Depth matching behavior:\n * w-[calc(100%-theme('spacing[some_key][1.5]'))]']\n *   \u252C    \u252C          \u252C\u252C       \u252C        \u252C\u252C   \u252C\u252C\u252C\u252C\u252C\u252C\u252C\n *   1    2          3        4        34   3 210 END\n *   \u2570\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2534\u2500\u2500\u2500\u2534\u2500\u2534\u2534\u2534\n *\n * @param {string} input\n */\nfunction clipAtBalancedParens(input) {\n  // We are care about this for arbitrary values\n  if (!input.includes('-[')) {\n    return input\n  }\n\n  let depth = 0\n  let openStringTypes = []\n\n  // Find all parens, brackets, quotes, etc\n  // Stop when we end at a balanced pair\n  // This is naive and will treat mismatched parens as balanced\n  // This shouldn't be a problem in practice though\n  let matches = input.matchAll(SPECIALS)\n\n  // We can't use lookbehind assertions because we have to support Safari\n  // So, instead, we've emulated it using capture groups and we'll re-work the matches to accommodate\n  matches = Array.from(matches).flatMap((match) => {\n    const [, ...groups] = match\n\n    return groups.map((group, idx) =>\n      Object.assign([], match, {\n        index: match.index + idx,\n        0: group,\n      })\n    )\n  })\n\n  for (let match of matches) {\n    let char = match[0]\n    let inStringType = openStringTypes[openStringTypes.length - 1]\n\n    if (char === inStringType) {\n      openStringTypes.pop()\n    } else if (char === \"'\" || char === '\"' || char === '`') {\n      openStringTypes.push(char)\n    }\n\n    if (inStringType) {\n      continue\n    } else if (char === '[') {\n      depth++\n      continue\n    } else if (char === ']') {\n      depth--\n      continue\n    }\n\n    // We've gone one character past the point where we should stop\n    // This means that there was an extra closing `]`\n    // We'll clip to just before it\n    if (depth < 0) {\n      return input.substring(0, match.index - 1)\n    }\n\n    // We've finished balancing the brackets but there still may be characters that can be included\n    // For example in the class `text-[#336699]/[.35]`\n    // The depth goes to `0` at the closing `]` but goes up again at the `[`\n\n    // If we're at zero and encounter a non-class character then we clip the class there\n    if (depth === 0 && !ALLOWED_CLASS_CHARACTERS.test(char)) {\n      return input.substring(0, match.index)\n    }\n  }\n\n  return input\n}\n\n// Regular utilities\n// {{modifier}:}*{namespace}{-{suffix}}*{/{opacityModifier}}?\n\n// Arbitrary values\n// {{modifier}:}*{namespace}-[{arbitraryValue}]{/{opacityModifier}}?\n// arbitraryValue: no whitespace, balanced quotes unless within quotes, balanced brackets unless within quotes\n\n// Arbitrary properties\n// {{modifier}:}*[{validCssPropertyName}:{arbitraryValue}]\n", "import postcss from 'postcss'\nimport parser from 'postcss-selector-parser'\n\nimport { resolveMatches } from './generateRules'\nimport escapeClassName from '../util/escapeClassName'\nimport { applyImportantSelector } from '../util/applyImportantSelector'\nimport { movePseudos } from '../util/pseudoElements'\n\n/** @typedef {Map<string, [any, import('postcss').Rule[]]>} ApplyCache */\n\nfunction extractClasses(node) {\n  /** @type {Map<string, Set<string>>} */\n  let groups = new Map()\n\n  let container = postcss.root({ nodes: [node.clone()] })\n\n  container.walkRules((rule) => {\n    parser((selectors) => {\n      selectors.walkClasses((classSelector) => {\n        let parentSelector = classSelector.parent.toString()\n\n        let classes = groups.get(parentSelector)\n        if (!classes) {\n          groups.set(parentSelector, (classes = new Set()))\n        }\n\n        classes.add(classSelector.value)\n      })\n    }).processSync(rule.selector)\n  })\n\n  let normalizedGroups = Array.from(groups.values(), (classes) => Array.from(classes))\n  let classes = normalizedGroups.flat()\n\n  return Object.assign(classes, { groups: normalizedGroups })\n}\n\nlet selectorExtractor = parser()\n\n/**\n * @param {string} ruleSelectors\n */\nfunction extractSelectors(ruleSelectors) {\n  return selectorExtractor.astSync(ruleSelectors)\n}\n\nfunction extractBaseCandidates(candidates, separator) {\n  let baseClasses = new Set()\n\n  for (let candidate of candidates) {\n    baseClasses.add(candidate.split(separator).pop())\n  }\n\n  return Array.from(baseClasses)\n}\n\nfunction prefix(context, selector) {\n  let prefix = context.tailwindConfig.prefix\n  return typeof prefix === 'function' ? prefix(selector) : prefix + selector\n}\n\nfunction* pathToRoot(node) {\n  yield node\n  while (node.parent) {\n    yield node.parent\n    node = node.parent\n  }\n}\n\n/**\n * Only clone the node itself and not its children\n *\n * @param {*} node\n * @param {*} overrides\n * @returns\n */\nfunction shallowClone(node, overrides = {}) {\n  let children = node.nodes\n  node.nodes = []\n\n  let tmp = node.clone(overrides)\n\n  node.nodes = children\n\n  return tmp\n}\n\n/**\n * Clone just the nodes all the way to the top that are required to represent\n * this singular rule in the tree.\n *\n * For example, if we have CSS like this:\n * ```css\n * @media (min-width: 768px) {\n *   @supports (display: grid) {\n *     .foo {\n *       display: grid;\n *       grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n *     }\n *   }\n *\n *   @supports (backdrop-filter: blur(1px)) {\n *     .bar {\n *       backdrop-filter: blur(1px);\n *     }\n *   }\n *\n *   .baz {\n *     color: orange;\n *   }\n * }\n * ```\n *\n * And we're cloning `.bar` it'll return a cloned version of what's required for just that single node:\n *\n * ```css\n * @media (min-width: 768px) {\n *   @supports (backdrop-filter: blur(1px)) {\n *     .bar {\n *       backdrop-filter: blur(1px);\n *     }\n *   }\n * }\n * ```\n *\n * @param {import('postcss').Node} node\n */\nfunction nestedClone(node) {\n  for (let parent of pathToRoot(node)) {\n    if (node === parent) {\n      continue\n    }\n\n    if (parent.type === 'root') {\n      break\n    }\n\n    node = shallowClone(parent, {\n      nodes: [node],\n    })\n  }\n\n  return node\n}\n\n/**\n * @param {import('postcss').Root} root\n */\nfunction buildLocalApplyCache(root, context) {\n  /** @type {ApplyCache} */\n  let cache = new Map()\n\n  root.walkRules((rule) => {\n    // Ignore rules generated by Tailwind\n    for (let node of pathToRoot(rule)) {\n      if (node.raws.tailwind?.layer !== undefined) {\n        return\n      }\n    }\n\n    // Clone what's required to represent this singular rule in the tree\n    let container = nestedClone(rule)\n    let sort = context.offsets.create('user')\n\n    for (let className of extractClasses(rule)) {\n      let list = cache.get(className) || []\n      cache.set(className, list)\n\n      list.push([\n        {\n          layer: 'user',\n          sort,\n          important: false,\n        },\n        container,\n      ])\n    }\n  })\n\n  return cache\n}\n\n/**\n * @returns {ApplyCache}\n */\nfunction buildApplyCache(applyCandidates, context) {\n  for (let candidate of applyCandidates) {\n    if (context.notClassCache.has(candidate) || context.applyClassCache.has(candidate)) {\n      continue\n    }\n\n    if (context.classCache.has(candidate)) {\n      context.applyClassCache.set(\n        candidate,\n        context.classCache.get(candidate).map(([meta, rule]) => [meta, rule.clone()])\n      )\n      continue\n    }\n\n    let matches = Array.from(resolveMatches(candidate, context))\n\n    if (matches.length === 0) {\n      context.notClassCache.add(candidate)\n      continue\n    }\n\n    context.applyClassCache.set(candidate, matches)\n  }\n\n  return context.applyClassCache\n}\n\n/**\n * Build a cache only when it's first used\n *\n * @param {() => ApplyCache} buildCacheFn\n * @returns {ApplyCache}\n */\nfunction lazyCache(buildCacheFn) {\n  let cache = null\n\n  return {\n    get: (name) => {\n      cache = cache || buildCacheFn()\n\n      return cache.get(name)\n    },\n    has: (name) => {\n      cache = cache || buildCacheFn()\n\n      return cache.has(name)\n    },\n  }\n}\n\n/**\n * Take a series of multiple caches and merge\n * them so they act like one large cache\n *\n * @param {ApplyCache[]} caches\n * @returns {ApplyCache}\n */\nfunction combineCaches(caches) {\n  return {\n    get: (name) => caches.flatMap((cache) => cache.get(name) || []),\n    has: (name) => caches.some((cache) => cache.has(name)),\n  }\n}\n\nfunction extractApplyCandidates(params) {\n  let candidates = params.split(/[\\s\\t\\n]+/g)\n\n  if (candidates[candidates.length - 1] === '!important') {\n    return [candidates.slice(0, -1), true]\n  }\n\n  return [candidates, false]\n}\n\nfunction processApply(root, context, localCache) {\n  let applyCandidates = new Set()\n\n  // Collect all @apply rules and candidates\n  let applies = []\n  root.walkAtRules('apply', (rule) => {\n    let [candidates] = extractApplyCandidates(rule.params)\n\n    for (let util of candidates) {\n      applyCandidates.add(util)\n    }\n\n    applies.push(rule)\n  })\n\n  // Start the @apply process if we have rules with @apply in them\n  if (applies.length === 0) {\n    return\n  }\n\n  // Fill up some caches!\n  let applyClassCache = combineCaches([localCache, buildApplyCache(applyCandidates, context)])\n\n  /**\n   * When we have an apply like this:\n   *\n   * .abc {\n   *    @apply hover:font-bold;\n   * }\n   *\n   * What we essentially will do is resolve to this:\n   *\n   * .abc {\n   *    @apply .hover\\:font-bold:hover {\n   *      font-weight: 500;\n   *    }\n   * }\n   *\n   * Notice that the to-be-applied class is `.hover\\:font-bold:hover` and that the utility candidate was `hover:font-bold`.\n   * What happens in this function is that we prepend a `.` and escape the candidate.\n   * This will result in `.hover\\:font-bold`\n   * Which means that we can replace `.hover\\:font-bold` with `.abc` in `.hover\\:font-bold:hover` resulting in `.abc:hover`\n   *\n   * @param {string} selector\n   * @param {string} utilitySelectors\n   * @param {string} candidate\n   */\n  function replaceSelector(selector, utilitySelectors, candidate) {\n    let selectorList = extractSelectors(selector)\n    let utilitySelectorsList = extractSelectors(utilitySelectors)\n    let candidateList = extractSelectors(`.${escapeClassName(candidate)}`)\n    let candidateClass = candidateList.nodes[0].nodes[0]\n\n    selectorList.each((sel) => {\n      /** @type {Set<import('postcss-selector-parser').Selector>} */\n      let replaced = new Set()\n\n      utilitySelectorsList.each((utilitySelector) => {\n        let hasReplaced = false\n        utilitySelector = utilitySelector.clone()\n\n        utilitySelector.walkClasses((node) => {\n          if (node.value !== candidateClass.value) {\n            return\n          }\n\n          // Don't replace multiple instances of the same class\n          // This is theoretically correct but only partially\n          // We'd need to generate every possible permutation of the replacement\n          // For example with `.foo + .foo { \u2026 }` and `section { @apply foo; }`\n          // We'd need to generate all of these:\n          // - `.foo + .foo`\n          // - `.foo + section`\n          // - `section + .foo`\n          // - `section + section`\n          if (hasReplaced) {\n            return\n          }\n\n          // Since you can only `@apply` class names this is sufficient\n          // We want to replace the matched class name with the selector the user is using\n          // Ex: Replace `.text-blue-500` with `.foo.bar:is(.something-cool)`\n          node.replaceWith(...sel.nodes.map((node) => node.clone()))\n\n          // Record that we did something and we want to use this new selector\n          replaced.add(utilitySelector)\n\n          hasReplaced = true\n        })\n      })\n\n      // Sort tag names before class names (but only sort each group (separated by a combinator)\n      // separately and not in total)\n      // This happens when replacing `.bar` in `.foo.bar` with a tag like `section`\n      for (let sel of replaced) {\n        let groups = [[]]\n        for (let node of sel.nodes) {\n          if (node.type === 'combinator') {\n            groups.push(node)\n            groups.push([])\n          } else {\n            let last = groups[groups.length - 1]\n            last.push(node)\n          }\n        }\n\n        sel.nodes = []\n\n        for (let group of groups) {\n          if (Array.isArray(group)) {\n            group.sort((a, b) => {\n              if (a.type === 'tag' && b.type === 'class') {\n                return -1\n              } else if (a.type === 'class' && b.type === 'tag') {\n                return 1\n              } else if (a.type === 'class' && b.type === 'pseudo' && b.value.startsWith('::')) {\n                return -1\n              } else if (a.type === 'pseudo' && a.value.startsWith('::') && b.type === 'class') {\n                return 1\n              }\n\n              return 0\n            })\n          }\n\n          sel.nodes = sel.nodes.concat(group)\n        }\n      }\n\n      sel.replaceWith(...replaced)\n    })\n\n    return selectorList.toString()\n  }\n\n  let perParentApplies = new Map()\n\n  // Collect all apply candidates and their rules\n  for (let apply of applies) {\n    let [candidates] = perParentApplies.get(apply.parent) || [[], apply.source]\n\n    perParentApplies.set(apply.parent, [candidates, apply.source])\n\n    let [applyCandidates, important] = extractApplyCandidates(apply.params)\n\n    if (apply.parent.type === 'atrule') {\n      if (apply.parent.name === 'screen') {\n        let screenType = apply.parent.params\n\n        throw apply.error(\n          `@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${applyCandidates\n            .map((c) => `${screenType}:${c}`)\n            .join(' ')} instead.`\n        )\n      }\n\n      throw apply.error(\n        `@apply is not supported within nested at-rules like @${apply.parent.name}. You can fix this by un-nesting @${apply.parent.name}.`\n      )\n    }\n\n    for (let applyCandidate of applyCandidates) {\n      if ([prefix(context, 'group'), prefix(context, 'peer')].includes(applyCandidate)) {\n        // TODO: Link to specific documentation page with error code.\n        throw apply.error(`@apply should not be used with the '${applyCandidate}' utility`)\n      }\n\n      if (!applyClassCache.has(applyCandidate)) {\n        throw apply.error(\n          `The \\`${applyCandidate}\\` class does not exist. If \\`${applyCandidate}\\` is a custom class, make sure it is defined within a \\`@layer\\` directive.`\n        )\n      }\n\n      let rules = applyClassCache.get(applyCandidate)\n\n      candidates.push([applyCandidate, important, rules])\n    }\n  }\n\n  for (let [parent, [candidates, atApplySource]] of perParentApplies) {\n    let siblings = []\n\n    for (let [applyCandidate, important, rules] of candidates) {\n      let potentialApplyCandidates = [\n        applyCandidate,\n        ...extractBaseCandidates([applyCandidate], context.tailwindConfig.separator),\n      ]\n\n      for (let [meta, node] of rules) {\n        let parentClasses = extractClasses(parent)\n        let nodeClasses = extractClasses(node)\n\n        // When we encounter a rule like `.dark .a, .b { \u2026 }` we only want to be left with `[.dark, .a]` if the base applyCandidate is `.a` or with `[.b]` if the base applyCandidate is `.b`\n        // So we've split them into groups\n        nodeClasses = nodeClasses.groups\n          .filter((classList) =>\n            classList.some((className) => potentialApplyCandidates.includes(className))\n          )\n          .flat()\n\n        // Add base utility classes from the @apply node to the list of\n        // classes to check whether it intersects and therefore results in a\n        // circular dependency or not.\n        //\n        // E.g.:\n        // .foo {\n        //   @apply hover:a; // This applies \"a\" but with a modifier\n        // }\n        //\n        // We only have to do that with base classes of the `node`, not of the `parent`\n        // E.g.:\n        // .hover\\:foo {\n        //   @apply bar;\n        // }\n        // .bar {\n        //   @apply foo;\n        // }\n        //\n        // This should not result in a circular dependency because we are\n        // just applying `.foo` and the rule above is `.hover\\:foo` which is\n        // unrelated. However, if we were to apply `hover:foo` then we _did_\n        // have to include this one.\n        nodeClasses = nodeClasses.concat(\n          extractBaseCandidates(nodeClasses, context.tailwindConfig.separator)\n        )\n\n        let intersects = parentClasses.some((selector) => nodeClasses.includes(selector))\n        if (intersects) {\n          throw node.error(\n            `You cannot \\`@apply\\` the \\`${applyCandidate}\\` utility here because it creates a circular dependency.`\n          )\n        }\n\n        let root = postcss.root({ nodes: [node.clone()] })\n\n        // Make sure every node in the entire tree points back at the @apply rule that generated it\n        root.walk((node) => {\n          node.source = atApplySource\n        })\n\n        let canRewriteSelector =\n          node.type !== 'atrule' || (node.type === 'atrule' && node.name !== 'keyframes')\n\n        if (canRewriteSelector) {\n          root.walkRules((rule) => {\n            // Let's imagine you have the following structure:\n            //\n            // .foo {\n            //   @apply bar;\n            // }\n            //\n            // @supports (a: b) {\n            //   .bar {\n            //     color: blue\n            //   }\n            //\n            //   .something-unrelated {}\n            // }\n            //\n            // In this case we want to apply `.bar` but it happens to be in\n            // an atrule node. We clone that node instead of the nested one\n            // because we still want that @supports rule to be there once we\n            // applied everything.\n            //\n            // However it happens to be that the `.something-unrelated` is\n            // also in that same shared @supports atrule. This is not good,\n            // and this should not be there. The good part is that this is\n            // a clone already and it can be safely removed. The question is\n            // how do we know we can remove it. Basically what we can do is\n            // match it against the applyCandidate that you want to apply. If\n            // it doesn't match the we can safely delete it.\n            //\n            // If we didn't do this, then the `replaceSelector` function\n            // would have replaced this with something that didn't exist and\n            // therefore it removed the selector altogether. In this specific\n            // case it would result in `{}` instead of `.something-unrelated {}`\n            if (!extractClasses(rule).some((candidate) => candidate === applyCandidate)) {\n              rule.remove()\n              return\n            }\n\n            // Strip the important selector from the parent selector if at the beginning\n            let importantSelector =\n              typeof context.tailwindConfig.important === 'string'\n                ? context.tailwindConfig.important\n                : null\n\n            // We only want to move the \"important\" selector if this is a Tailwind-generated utility\n            // We do *not* want to do this for user CSS that happens to be structured the same\n            let isGenerated = parent.raws.tailwind !== undefined\n\n            let parentSelector =\n              isGenerated && importantSelector && parent.selector.indexOf(importantSelector) === 0\n                ? parent.selector.slice(importantSelector.length)\n                : parent.selector\n\n            // If the selector becomes empty after replacing the important selector\n            // This means that it's the same as the parent selector and we don't want to replace it\n            // Otherwise we'll crash\n            if (parentSelector === '') {\n              parentSelector = parent.selector\n            }\n\n            rule.selector = replaceSelector(parentSelector, rule.selector, applyCandidate)\n\n            // And then re-add it if it was removed\n            if (importantSelector && parentSelector !== parent.selector) {\n              rule.selector = applyImportantSelector(rule.selector, importantSelector)\n            }\n\n            rule.walkDecls((d) => {\n              d.important = meta.important || important\n            })\n\n            // Move pseudo elements to the end of the selector (if necessary)\n            let selector = parser().astSync(rule.selector)\n            selector.each((sel) => movePseudos(sel))\n            rule.selector = selector.toString()\n          })\n        }\n\n        // It could be that the node we were inserted was removed because the class didn't match\n        // If that was the *only* rule in the parent, then we have nothing add so we skip it\n        if (!root.nodes[0]) {\n          continue\n        }\n\n        // Insert it\n        siblings.push([meta.sort, root.nodes[0]])\n      }\n    }\n\n    // Inject the rules, sorted, correctly\n    let nodes = context.offsets.sort(siblings).map((s) => s[1])\n\n    // `parent` refers to the node at `.abc` in: .abc { @apply mt-2 }\n    parent.after(nodes)\n  }\n\n  for (let apply of applies) {\n    // If there are left-over declarations, just remove the @apply\n    if (apply.parent.nodes.length > 1) {\n      apply.remove()\n    } else {\n      // The node is empty, drop the full node\n      apply.parent.remove()\n    }\n  }\n\n  // Do it again, in case we have other `@apply` rules\n  processApply(root, context, localCache)\n}\n\nexport default function expandApplyAtRules(context) {\n  return (root) => {\n    // Build a cache of the user's CSS so we can use it to resolve classes used by @apply\n    let localCache = lazyCache(() => buildLocalApplyCache(root, context))\n\n    processApply(root, context, localCache)\n  }\n}\n", "import dlv from 'dlv'\nimport didYouMean from 'didyoumean'\nimport transformThemeValue from '../util/transformThemeValue'\nimport parseValue from '../value-parser/index'\nimport { normalizeScreens } from '../util/normalizeScreens'\nimport buildMediaQuery from '../util/buildMediaQuery'\nimport { toPath } from '../util/toPath'\nimport { withAlphaValue } from '../util/withAlphaVariable'\nimport { parseColorFormat } from '../util/pluginUtils'\nimport log from '../util/log'\n\nfunction isObject(input) {\n  return typeof input === 'object' && input !== null\n}\n\nfunction findClosestExistingPath(theme, path) {\n  let parts = toPath(path)\n  do {\n    parts.pop()\n\n    if (dlv(theme, parts) !== undefined) break\n  } while (parts.length)\n\n  return parts.length ? parts : undefined\n}\n\nfunction pathToString(path) {\n  if (typeof path === 'string') return path\n  return path.reduce((acc, cur, i) => {\n    if (cur.includes('.')) return `${acc}[${cur}]`\n    return i === 0 ? cur : `${acc}.${cur}`\n  }, '')\n}\n\nfunction list(items) {\n  return items.map((key) => `'${key}'`).join(', ')\n}\n\nfunction listKeys(obj) {\n  return list(Object.keys(obj))\n}\n\nfunction validatePath(config, path, defaultValue, themeOpts = {}) {\n  const pathString = Array.isArray(path) ? pathToString(path) : path.replace(/^['\"]+|['\"]+$/g, '')\n  const pathSegments = Array.isArray(path) ? path : toPath(pathString)\n  const value = dlv(config.theme, pathSegments, defaultValue)\n\n  if (value === undefined) {\n    let error = `'${pathString}' does not exist in your theme config.`\n    const parentSegments = pathSegments.slice(0, -1)\n    const parentValue = dlv(config.theme, parentSegments)\n\n    if (isObject(parentValue)) {\n      const validKeys = Object.keys(parentValue).filter(\n        (key) => validatePath(config, [...parentSegments, key]).isValid\n      )\n      const suggestion = didYouMean(pathSegments[pathSegments.length - 1], validKeys)\n      if (suggestion) {\n        error += ` Did you mean '${pathToString([...parentSegments, suggestion])}'?`\n      } else if (validKeys.length > 0) {\n        error += ` '${pathToString(parentSegments)}' has the following valid keys: ${list(\n          validKeys\n        )}`\n      }\n    } else {\n      const closestPath = findClosestExistingPath(config.theme, pathString)\n      if (closestPath) {\n        const closestValue = dlv(config.theme, closestPath)\n        if (isObject(closestValue)) {\n          error += ` '${pathToString(closestPath)}' has the following keys: ${listKeys(\n            closestValue\n          )}`\n        } else {\n          error += ` '${pathToString(closestPath)}' is not an object.`\n        }\n      } else {\n        error += ` Your theme has the following top-level keys: ${listKeys(config.theme)}`\n      }\n    }\n\n    return {\n      isValid: false,\n      error,\n    }\n  }\n\n  if (\n    !(\n      typeof value === 'string' ||\n      typeof value === 'number' ||\n      typeof value === 'function' ||\n      value instanceof String ||\n      value instanceof Number ||\n      Array.isArray(value)\n    )\n  ) {\n    let error = `'${pathString}' was found but does not resolve to a string.`\n\n    if (isObject(value)) {\n      let validKeys = Object.keys(value).filter(\n        (key) => validatePath(config, [...pathSegments, key]).isValid\n      )\n      if (validKeys.length) {\n        error += ` Did you mean something like '${pathToString([...pathSegments, validKeys[0]])}'?`\n      }\n    }\n\n    return {\n      isValid: false,\n      error,\n    }\n  }\n\n  const [themeSection] = pathSegments\n\n  return {\n    isValid: true,\n    value: transformThemeValue(themeSection)(value, themeOpts),\n  }\n}\n\nfunction extractArgs(node, vNodes, functions) {\n  vNodes = vNodes.map((vNode) => resolveVNode(node, vNode, functions))\n\n  let args = ['']\n\n  for (let vNode of vNodes) {\n    if (vNode.type === 'div' && vNode.value === ',') {\n      args.push('')\n    } else {\n      args[args.length - 1] += parseValue.stringify(vNode)\n    }\n  }\n\n  return args\n}\n\nfunction resolveVNode(node, vNode, functions) {\n  if (vNode.type === 'function' && functions[vNode.value] !== undefined) {\n    let args = extractArgs(node, vNode.nodes, functions)\n    vNode.type = 'word'\n    vNode.value = functions[vNode.value](node, ...args)\n  }\n\n  return vNode\n}\n\nfunction resolveFunctions(node, input, functions) {\n  let hasAnyFn = Object.keys(functions).some((fn) => input.includes(`${fn}(`))\n  if (!hasAnyFn) return input\n\n  return parseValue(input)\n    .walk((vNode) => {\n      resolveVNode(node, vNode, functions)\n    })\n    .toString()\n}\n\nlet nodeTypePropertyMap = {\n  atrule: 'params',\n  decl: 'value',\n}\n\n/**\n * @param {string} path\n * @returns {Iterable<[path: string, alpha: string|undefined]>}\n */\nfunction* toPaths(path) {\n  // Strip quotes from beginning and end of string\n  // This allows the alpha value to be present inside of quotes\n  path = path.replace(/^['\"]+|['\"]+$/g, '')\n\n  let matches = path.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/)\n  let alpha = undefined\n\n  yield [path, undefined]\n\n  if (matches) {\n    path = matches[1]\n    alpha = matches[2]\n\n    yield [path, alpha]\n  }\n}\n\n/**\n *\n * @param {any} config\n * @param {string} path\n * @param {any} defaultValue\n */\nfunction resolvePath(config, path, defaultValue) {\n  const results = Array.from(toPaths(path)).map(([path, alpha]) => {\n    return Object.assign(validatePath(config, path, defaultValue, { opacityValue: alpha }), {\n      resolvedPath: path,\n      alpha,\n    })\n  })\n\n  return results.find((result) => result.isValid) ?? results[0]\n}\n\nexport default function (context) {\n  let config = context.tailwindConfig\n\n  let functions = {\n    theme: (node, path, ...defaultValue) => {\n      let { isValid, value, error, alpha } = resolvePath(\n        config,\n        path,\n        defaultValue.length ? defaultValue : undefined\n      )\n\n      if (!isValid) {\n        let parentNode = node.parent\n        let candidate = parentNode?.raws.tailwind?.candidate\n\n        if (parentNode && candidate !== undefined) {\n          // Remove this utility from any caches\n          context.markInvalidUtilityNode(parentNode)\n\n          // Remove the CSS node from the markup\n          parentNode.remove()\n\n          // Show a warning\n          log.warn('invalid-theme-key-in-class', [\n            `The utility \\`${candidate}\\` contains an invalid theme value and was not generated.`,\n          ])\n\n          return\n        }\n\n        throw node.error(error)\n      }\n\n      let maybeColor = parseColorFormat(value)\n      let isColorFunction = maybeColor !== undefined && typeof maybeColor === 'function'\n\n      if (alpha !== undefined || isColorFunction) {\n        if (alpha === undefined) {\n          alpha = 1.0\n        }\n\n        value = withAlphaValue(maybeColor, alpha, maybeColor)\n      }\n\n      return value\n    },\n    screen: (node, screen) => {\n      screen = screen.replace(/^['\"]+/g, '').replace(/['\"]+$/g, '')\n      let screens = normalizeScreens(config.theme.screens)\n      let screenDefinition = screens.find(({ name }) => name === screen)\n\n      if (!screenDefinition) {\n        throw node.error(`The '${screen}' screen does not exist in your theme.`)\n      }\n\n      return buildMediaQuery(screenDefinition)\n    },\n  }\n  return (root) => {\n    root.walk((node) => {\n      let property = nodeTypePropertyMap[node.type]\n\n      if (property === undefined) {\n        return\n      }\n\n      node[property] = resolveFunctions(node, node[property], functions)\n    })\n  }\n}\n", "import { normalizeScreens } from '../util/normalizeScreens'\nimport buildMediaQuery from '../util/buildMediaQuery'\n\nexport default function ({ tailwindConfig: { theme } }) {\n  return function (css) {\n    css.walkAtRules('screen', (atRule) => {\n      let screen = atRule.params\n      let screens = normalizeScreens(theme.screens)\n      let screenDefinition = screens.find(({ name }) => name === screen)\n\n      if (!screenDefinition) {\n        throw atRule.error(`No \\`${screen}\\` screen found.`)\n      }\n\n      atRule.name = 'media'\n      atRule.params = buildMediaQuery(screenDefinition)\n    })\n  }\n}\n", "import postcss from 'postcss'\nimport selectorParser from 'postcss-selector-parser'\nimport { flagEnabled } from '../featureFlags'\n\nlet getNode = {\n  id(node) {\n    return selectorParser.attribute({\n      attribute: 'id',\n      operator: '=',\n      value: node.value,\n      quoteMark: '\"',\n    })\n  },\n}\n\nfunction minimumImpactSelector(nodes) {\n  let rest = nodes\n    .filter((node) => {\n      // Keep non-pseudo nodes\n      if (node.type !== 'pseudo') return true\n\n      // Keep pseudo nodes that have subnodes\n      // E.g.: `:not()` contains subnodes inside the parentheses\n      if (node.nodes.length > 0) return true\n\n      // Keep pseudo `elements`\n      // This implicitly means that we ignore pseudo `classes`\n      return (\n        node.value.startsWith('::') ||\n        [':before', ':after', ':first-line', ':first-letter'].includes(node.value)\n      )\n    })\n    .reverse()\n\n  let searchFor = new Set(['tag', 'class', 'id', 'attribute'])\n\n  let splitPointIdx = rest.findIndex((n) => searchFor.has(n.type))\n  if (splitPointIdx === -1) return rest.reverse().join('').trim()\n\n  let node = rest[splitPointIdx]\n  let bestNode = getNode[node.type] ? getNode[node.type](node) : node\n\n  rest = rest.slice(0, splitPointIdx)\n\n  let combinatorIdx = rest.findIndex((n) => n.type === 'combinator' && n.value === '>')\n  if (combinatorIdx !== -1) {\n    rest.splice(0, combinatorIdx)\n    rest.unshift(selectorParser.universal())\n  }\n\n  return [bestNode, ...rest.reverse()].join('').trim()\n}\n\nexport let elementSelectorParser = selectorParser((selectors) => {\n  return selectors.map((s) => {\n    let nodes = s.split((n) => n.type === 'combinator' && n.value === ' ').pop()\n    return minimumImpactSelector(nodes)\n  })\n})\n\nlet cache = new Map()\n\nfunction extractElementSelector(selector) {\n  if (!cache.has(selector)) {\n    cache.set(selector, elementSelectorParser.transformSync(selector))\n  }\n\n  return cache.get(selector)\n}\n\nexport default function resolveDefaultsAtRules({ tailwindConfig }) {\n  return (root) => {\n    let variableNodeMap = new Map()\n\n    /** @type {Set<import('postcss').AtRule>} */\n    let universals = new Set()\n\n    root.walkAtRules('defaults', (rule) => {\n      if (rule.nodes && rule.nodes.length > 0) {\n        universals.add(rule)\n        return\n      }\n\n      let variable = rule.params\n      if (!variableNodeMap.has(variable)) {\n        variableNodeMap.set(variable, new Set())\n      }\n\n      variableNodeMap.get(variable).add(rule.parent)\n\n      rule.remove()\n    })\n\n    if (flagEnabled(tailwindConfig, 'optimizeUniversalDefaults')) {\n      for (let universal of universals) {\n        /** @type {Map<string, Set<string>>} */\n        let selectorGroups = new Map()\n\n        let rules = variableNodeMap.get(universal.params) ?? []\n\n        for (let rule of rules) {\n          for (let selector of extractElementSelector(rule.selector)) {\n            // If selector contains a vendor prefix after a pseudo element or class,\n            // we consider them separately because merging the declarations into\n            // a single rule will cause browsers that do not understand the\n            // vendor prefix to throw out the whole rule\n            let selectorGroupName =\n              selector.includes(':-') || selector.includes('::-') ? selector : '__DEFAULT__'\n\n            let selectors = selectorGroups.get(selectorGroupName) ?? new Set()\n            selectorGroups.set(selectorGroupName, selectors)\n\n            selectors.add(selector)\n          }\n        }\n\n        if (flagEnabled(tailwindConfig, 'optimizeUniversalDefaults')) {\n          if (selectorGroups.size === 0) {\n            universal.remove()\n            continue\n          }\n\n          for (let [, selectors] of selectorGroups) {\n            let universalRule = postcss.rule({\n              source: universal.source,\n            })\n\n            universalRule.selectors = [...selectors]\n\n            universalRule.append(universal.nodes.map((node) => node.clone()))\n            universal.before(universalRule)\n          }\n        }\n\n        universal.remove()\n      }\n    } else if (universals.size) {\n      let universalRule = postcss.rule({\n        selectors: ['*', '::before', '::after'],\n      })\n\n      for (let universal of universals) {\n        universalRule.append(universal.nodes)\n\n        if (!universalRule.parent) {\n          universal.before(universalRule)\n        }\n\n        if (!universalRule.source) {\n          universalRule.source = universal.source\n        }\n\n        universal.remove()\n      }\n\n      let backdropRule = universalRule.clone({\n        selectors: ['::backdrop'],\n      })\n\n      universalRule.after(backdropRule)\n    }\n  }\n}\n", "let comparisonMap = {\n  atrule: ['name', 'params'],\n  rule: ['selector'],\n}\nlet types = new Set(Object.keys(comparisonMap))\n\nexport default function collapseAdjacentRules() {\n  function collapseRulesIn(root) {\n    let currentRule = null\n    root.each((node) => {\n      if (!types.has(node.type)) {\n        currentRule = null\n        return\n      }\n\n      if (currentRule === null) {\n        currentRule = node\n        return\n      }\n\n      let properties = comparisonMap[node.type]\n\n      if (node.type === 'atrule' && node.name === 'font-face') {\n        currentRule = node\n      } else if (\n        properties.every(\n          (property) =>\n            (node[property] ?? '').replace(/\\s+/g, ' ') ===\n            (currentRule[property] ?? '').replace(/\\s+/g, ' ')\n        )\n      ) {\n        // An AtRule may not have children (for example if we encounter duplicate @import url(\u2026) rules)\n        if (node.nodes) {\n          currentRule.append(node.nodes)\n        }\n\n        node.remove()\n      } else {\n        currentRule = node\n      }\n    })\n\n    // After we've collapsed adjacent rules & at-rules, we need to collapse\n    // adjacent rules & at-rules that are children of at-rules.\n    // We do not care about nesting rules because Tailwind CSS\n    // explicitly does not handle rule nesting on its own as\n    // the user is expected to use a nesting plugin\n    root.each((node) => {\n      if (node.type === 'atrule') {\n        collapseRulesIn(node)\n      }\n    })\n  }\n\n  return (root) => {\n    collapseRulesIn(root)\n  }\n}\n", "export default function collapseDuplicateDeclarations() {\n  return (root) => {\n    root.walkRules((node) => {\n      let seen = new Map()\n      let droppable = new Set([])\n      let byProperty = new Map()\n\n      node.walkDecls((decl) => {\n        // This could happen if we have nested selectors. In that case the\n        // parent will loop over all its declarations but also the declarations\n        // of nested rules. With this we ensure that we are shallowly checking\n        // declarations.\n        if (decl.parent !== node) {\n          return\n        }\n\n        if (seen.has(decl.prop)) {\n          // Exact same value as what we have seen so far\n          if (seen.get(decl.prop).value === decl.value) {\n            // Keep the last one, drop the one we've seen so far\n            droppable.add(seen.get(decl.prop))\n            // Override the existing one with the new value. This is necessary\n            // so that if we happen to have more than one declaration with the\n            // same value, that we keep removing the previous one. Otherwise we\n            // will only remove the *first* one.\n            seen.set(decl.prop, decl)\n            return\n          }\n\n          // Not the same value, so we need to check if we can merge it so\n          // let's collect it first.\n          if (!byProperty.has(decl.prop)) {\n            byProperty.set(decl.prop, new Set())\n          }\n\n          byProperty.get(decl.prop).add(seen.get(decl.prop))\n          byProperty.get(decl.prop).add(decl)\n        }\n\n        seen.set(decl.prop, decl)\n      })\n\n      // Drop all the duplicate declarations with the exact same value we've\n      // already seen so far.\n      for (let decl of droppable) {\n        decl.remove()\n      }\n\n      // Analyze the declarations based on its unit, drop all the declarations\n      // with the same unit but the last one in the list.\n      for (let declarations of byProperty.values()) {\n        let byUnit = new Map()\n\n        for (let decl of declarations) {\n          let unit = resolveUnit(decl.value)\n          if (unit === null) {\n            // We don't have a unit, so should never try and collapse this\n            // value. This is because we can't know how to do it in a correct\n            // way (e.g.: overrides for older browsers)\n            continue\n          }\n\n          if (!byUnit.has(unit)) {\n            byUnit.set(unit, new Set())\n          }\n\n          byUnit.get(unit).add(decl)\n        }\n\n        for (let declarations of byUnit.values()) {\n          // Get all but the last one\n          let removableDeclarations = Array.from(declarations).slice(0, -1)\n\n          for (let decl of removableDeclarations) {\n            decl.remove()\n          }\n        }\n      }\n    })\n  }\n}\n\nlet UNITLESS_NUMBER = Symbol('unitless-number')\n\nfunction resolveUnit(input) {\n  let result = /^-?\\d*.?\\d+([\\w%]+)?$/g.exec(input)\n\n  if (result) {\n    return result[1] ?? UNITLESS_NUMBER\n  }\n\n  return null\n}\n", "function partitionRules(root) {\n  if (!root.walkAtRules) return\n\n  let applyParents = new Set()\n\n  root.walkAtRules('apply', (rule) => {\n    applyParents.add(rule.parent)\n  })\n\n  if (applyParents.size === 0) {\n    return\n  }\n\n  for (let rule of applyParents) {\n    let nodeGroups = []\n    let lastGroup = []\n\n    for (let node of rule.nodes) {\n      if (node.type === 'atrule' && node.name === 'apply') {\n        if (lastGroup.length > 0) {\n          nodeGroups.push(lastGroup)\n          lastGroup = []\n        }\n        nodeGroups.push([node])\n      } else {\n        lastGroup.push(node)\n      }\n    }\n\n    if (lastGroup.length > 0) {\n      nodeGroups.push(lastGroup)\n    }\n\n    if (nodeGroups.length === 1) {\n      continue\n    }\n\n    for (let group of [...nodeGroups].reverse()) {\n      let clone = rule.clone({ nodes: [] })\n      clone.append(group)\n      rule.after(clone)\n    }\n\n    rule.remove()\n  }\n}\n\nexport default function expandApplyAtRules() {\n  return (root) => {\n    partitionRules(root)\n  }\n}\n", "function isRoot(node) {\n  return node.type === 'root'\n}\n\nfunction isAtLayer(node) {\n  return node.type === 'atrule' && node.name === 'layer'\n}\n\nexport default function (_context) {\n  return (root, result) => {\n    let found = false\n\n    root.walkAtRules('tailwind', (node) => {\n      if (found) return false\n\n      if (node.parent && !(isRoot(node.parent) || isAtLayer(node.parent))) {\n        found = true\n        node.warn(\n          result,\n          [\n            'Nested @tailwind rules were detected, but are not supported.',\n            \"Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix\",\n            'Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy',\n          ].join('\\n')\n        )\n        return false\n      }\n    })\n\n    root.walkRules((rule) => {\n      if (found) return false\n\n      rule.walkRules((nestedRule) => {\n        found = true\n        nestedRule.warn(\n          result,\n          [\n            'Nested CSS was detected, but CSS nesting has not been configured correctly.',\n            'Please enable a CSS nesting plugin *before* Tailwind in your configuration.',\n            'See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting',\n          ].join('\\n')\n        )\n        return false\n      })\n    })\n  }\n}\n", "import normalizeTailwindDirectives from './lib/normalizeTailwindDirectives'\nimport expandTailwindAtRules from './lib/expandTailwindAtRules'\nimport expandApplyAtRules from './lib/expandApplyAtRules'\nimport evaluateTailwindFunctions from './lib/evaluateTailwindFunctions'\nimport substituteScreenAtRules from './lib/substituteScreenAtRules'\nimport resolveDefaultsAtRules from './lib/resolveDefaultsAtRules'\nimport collapseAdjacentRules from './lib/collapseAdjacentRules'\nimport collapseDuplicateDeclarations from './lib/collapseDuplicateDeclarations'\nimport partitionApplyAtRules from './lib/partitionApplyAtRules'\nimport detectNesting from './lib/detectNesting'\nimport { createContext } from './lib/setupContextUtils'\nimport { issueFlagNotices } from './featureFlags'\n\nexport default function processTailwindFeatures(setupContext) {\n  return async function (root, result) {\n    let { tailwindDirectives, applyDirectives } = normalizeTailwindDirectives(root)\n\n    detectNesting()(root, result)\n\n    // Partition apply rules that are found in the css\n    // itself.\n    partitionApplyAtRules()(root, result)\n\n    let context = setupContext({\n      tailwindDirectives,\n      applyDirectives,\n      registerDependency(dependency) {\n        result.messages.push({\n          plugin: 'tailwindcss',\n          parent: result.opts.from,\n          ...dependency,\n        })\n      },\n      createContext(tailwindConfig, changedContent) {\n        return createContext(tailwindConfig, changedContent, root)\n      },\n    })(root, result)\n\n    if (context.tailwindConfig.separator === '-') {\n      throw new Error(\n        \"The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.\"\n      )\n    }\n\n    issueFlagNotices(context.tailwindConfig)\n\n    await expandTailwindAtRules(context)(root, result)\n\n    // Partition apply rules that are generated by\n    // addComponents, addUtilities and so on.\n    partitionApplyAtRules()(root, result)\n    expandApplyAtRules(context)(root, result)\n    evaluateTailwindFunctions(context)(root, result)\n    substituteScreenAtRules(context)(root, result)\n    resolveDefaultsAtRules(context)(root, result)\n    collapseAdjacentRules(context)(root, result)\n    collapseDuplicateDeclarations(context)(root, result)\n  }\n}\n", "export default [\"preflight\",\"container\",\"accessibility\",\"pointerEvents\",\"visibility\",\"position\",\"inset\",\"isolation\",\"zIndex\",\"order\",\"gridColumn\",\"gridColumnStart\",\"gridColumnEnd\",\"gridRow\",\"gridRowStart\",\"gridRowEnd\",\"float\",\"clear\",\"margin\",\"boxSizing\",\"lineClamp\",\"display\",\"aspectRatio\",\"size\",\"height\",\"maxHeight\",\"minHeight\",\"width\",\"minWidth\",\"maxWidth\",\"flex\",\"flexShrink\",\"flexGrow\",\"flexBasis\",\"tableLayout\",\"captionSide\",\"borderCollapse\",\"borderSpacing\",\"transformOrigin\",\"translate\",\"rotate\",\"skew\",\"scale\",\"transform\",\"animation\",\"cursor\",\"touchAction\",\"userSelect\",\"resize\",\"scrollSnapType\",\"scrollSnapAlign\",\"scrollSnapStop\",\"scrollMargin\",\"scrollPadding\",\"listStylePosition\",\"listStyleType\",\"listStyleImage\",\"appearance\",\"columns\",\"breakBefore\",\"breakInside\",\"breakAfter\",\"gridAutoColumns\",\"gridAutoFlow\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"flexDirection\",\"flexWrap\",\"placeContent\",\"placeItems\",\"alignContent\",\"alignItems\",\"justifyContent\",\"justifyItems\",\"gap\",\"space\",\"divideWidth\",\"divideStyle\",\"divideColor\",\"divideOpacity\",\"placeSelf\",\"alignSelf\",\"justifySelf\",\"overflow\",\"overscrollBehavior\",\"scrollBehavior\",\"textOverflow\",\"hyphens\",\"whitespace\",\"textWrap\",\"wordBreak\",\"borderRadius\",\"borderWidth\",\"borderStyle\",\"borderColor\",\"borderOpacity\",\"backgroundColor\",\"backgroundOpacity\",\"backgroundImage\",\"gradientColorStops\",\"boxDecorationBreak\",\"backgroundSize\",\"backgroundAttachment\",\"backgroundClip\",\"backgroundPosition\",\"backgroundRepeat\",\"backgroundOrigin\",\"fill\",\"stroke\",\"strokeWidth\",\"objectFit\",\"objectPosition\",\"padding\",\"textAlign\",\"textIndent\",\"verticalAlign\",\"fontFamily\",\"fontSize\",\"fontWeight\",\"textTransform\",\"fontStyle\",\"fontVariantNumeric\",\"lineHeight\",\"letterSpacing\",\"textColor\",\"textOpacity\",\"textDecoration\",\"textDecorationColor\",\"textDecorationStyle\",\"textDecorationThickness\",\"textUnderlineOffset\",\"fontSmoothing\",\"placeholderColor\",\"placeholderOpacity\",\"caretColor\",\"accentColor\",\"opacity\",\"backgroundBlendMode\",\"mixBlendMode\",\"boxShadow\",\"boxShadowColor\",\"outlineStyle\",\"outlineWidth\",\"outlineOffset\",\"outlineColor\",\"ringWidth\",\"ringColor\",\"ringOpacity\",\"ringOffsetWidth\",\"ringOffsetColor\",\"blur\",\"brightness\",\"contrast\",\"dropShadow\",\"grayscale\",\"hueRotate\",\"invert\",\"saturate\",\"sepia\",\"filter\",\"backdropBlur\",\"backdropBrightness\",\"backdropContrast\",\"backdropGrayscale\",\"backdropHueRotate\",\"backdropInvert\",\"backdropOpacity\",\"backdropSaturate\",\"backdropSepia\",\"backdropFilter\",\"transitionProperty\",\"transitionDelay\",\"transitionDuration\",\"transitionTimingFunction\",\"willChange\",\"content\",\"forcedColorAdjust\"]", "export default function (pluginConfig, plugins) {\n  if (pluginConfig === undefined) {\n    return plugins\n  }\n\n  const pluginNames = Array.isArray(pluginConfig)\n    ? pluginConfig\n    : [\n        ...new Set(\n          plugins\n            .filter((pluginName) => {\n              return pluginConfig !== false && pluginConfig[pluginName] !== false\n            })\n            .concat(\n              Object.keys(pluginConfig).filter((pluginName) => {\n                return pluginConfig[pluginName] !== false\n              })\n            )\n        ),\n      ]\n\n  return pluginNames\n}\n", "import log from '../util/log'\n\nfunction warn({ version, from, to }) {\n  log.warn(`${from}-color-renamed`, [\n    `As of Tailwind CSS ${version}, \\`${from}\\` has been renamed to \\`${to}\\`.`,\n    'Update your configuration file to silence this warning.',\n  ])\n}\n\nexport default {\n  inherit: 'inherit',\n  current: 'currentColor',\n  transparent: 'transparent',\n  black: '#000',\n  white: '#fff',\n  slate: {\n    50: '#f8fafc',\n    100: '#f1f5f9',\n    200: '#e2e8f0',\n    300: '#cbd5e1',\n    400: '#94a3b8',\n    500: '#64748b',\n    600: '#475569',\n    700: '#334155',\n    800: '#1e293b',\n    900: '#0f172a',\n    950: '#020617',\n  },\n  gray: {\n    50: '#f9fafb',\n    100: '#f3f4f6',\n    200: '#e5e7eb',\n    300: '#d1d5db',\n    400: '#9ca3af',\n    500: '#6b7280',\n    600: '#4b5563',\n    700: '#374151',\n    800: '#1f2937',\n    900: '#111827',\n    950: '#030712',\n  },\n  zinc: {\n    50: '#fafafa',\n    100: '#f4f4f5',\n    200: '#e4e4e7',\n    300: '#d4d4d8',\n    400: '#a1a1aa',\n    500: '#71717a',\n    600: '#52525b',\n    700: '#3f3f46',\n    800: '#27272a',\n    900: '#18181b',\n    950: '#09090b',\n  },\n  neutral: {\n    50: '#fafafa',\n    100: '#f5f5f5',\n    200: '#e5e5e5',\n    300: '#d4d4d4',\n    400: '#a3a3a3',\n    500: '#737373',\n    600: '#525252',\n    700: '#404040',\n    800: '#262626',\n    900: '#171717',\n    950: '#0a0a0a',\n  },\n  stone: {\n    50: '#fafaf9',\n    100: '#f5f5f4',\n    200: '#e7e5e4',\n    300: '#d6d3d1',\n    400: '#a8a29e',\n    500: '#78716c',\n    600: '#57534e',\n    700: '#44403c',\n    800: '#292524',\n    900: '#1c1917',\n    950: '#0c0a09',\n  },\n  red: {\n    50: '#fef2f2',\n    100: '#fee2e2',\n    200: '#fecaca',\n    300: '#fca5a5',\n    400: '#f87171',\n    500: '#ef4444',\n    600: '#dc2626',\n    700: '#b91c1c',\n    800: '#991b1b',\n    900: '#7f1d1d',\n    950: '#450a0a',\n  },\n  orange: {\n    50: '#fff7ed',\n    100: '#ffedd5',\n    200: '#fed7aa',\n    300: '#fdba74',\n    400: '#fb923c',\n    500: '#f97316',\n    600: '#ea580c',\n    700: '#c2410c',\n    800: '#9a3412',\n    900: '#7c2d12',\n    950: '#431407',\n  },\n  amber: {\n    50: '#fffbeb',\n    100: '#fef3c7',\n    200: '#fde68a',\n    300: '#fcd34d',\n    400: '#fbbf24',\n    500: '#f59e0b',\n    600: '#d97706',\n    700: '#b45309',\n    800: '#92400e',\n    900: '#78350f',\n    950: '#451a03',\n  },\n  yellow: {\n    50: '#fefce8',\n    100: '#fef9c3',\n    200: '#fef08a',\n    300: '#fde047',\n    400: '#facc15',\n    500: '#eab308',\n    600: '#ca8a04',\n    700: '#a16207',\n    800: '#854d0e',\n    900: '#713f12',\n    950: '#422006',\n  },\n  lime: {\n    50: '#f7fee7',\n    100: '#ecfccb',\n    200: '#d9f99d',\n    300: '#bef264',\n    400: '#a3e635',\n    500: '#84cc16',\n    600: '#65a30d',\n    700: '#4d7c0f',\n    800: '#3f6212',\n    900: '#365314',\n    950: '#1a2e05',\n  },\n  green: {\n    50: '#f0fdf4',\n    100: '#dcfce7',\n    200: '#bbf7d0',\n    300: '#86efac',\n    400: '#4ade80',\n    500: '#22c55e',\n    600: '#16a34a',\n    700: '#15803d',\n    800: '#166534',\n    900: '#14532d',\n    950: '#052e16',\n  },\n  emerald: {\n    50: '#ecfdf5',\n    100: '#d1fae5',\n    200: '#a7f3d0',\n    300: '#6ee7b7',\n    400: '#34d399',\n    500: '#10b981',\n    600: '#059669',\n    700: '#047857',\n    800: '#065f46',\n    900: '#064e3b',\n    950: '#022c22',\n  },\n  teal: {\n    50: '#f0fdfa',\n    100: '#ccfbf1',\n    200: '#99f6e4',\n    300: '#5eead4',\n    400: '#2dd4bf',\n    500: '#14b8a6',\n    600: '#0d9488',\n    700: '#0f766e',\n    800: '#115e59',\n    900: '#134e4a',\n    950: '#042f2e',\n  },\n  cyan: {\n    50: '#ecfeff',\n    100: '#cffafe',\n    200: '#a5f3fc',\n    300: '#67e8f9',\n    400: '#22d3ee',\n    500: '#06b6d4',\n    600: '#0891b2',\n    700: '#0e7490',\n    800: '#155e75',\n    900: '#164e63',\n    950: '#083344',\n  },\n  sky: {\n    50: '#f0f9ff',\n    100: '#e0f2fe',\n    200: '#bae6fd',\n    300: '#7dd3fc',\n    400: '#38bdf8',\n    500: '#0ea5e9',\n    600: '#0284c7',\n    700: '#0369a1',\n    800: '#075985',\n    900: '#0c4a6e',\n    950: '#082f49',\n  },\n  blue: {\n    50: '#eff6ff',\n    100: '#dbeafe',\n    200: '#bfdbfe',\n    300: '#93c5fd',\n    400: '#60a5fa',\n    500: '#3b82f6',\n    600: '#2563eb',\n    700: '#1d4ed8',\n    800: '#1e40af',\n    900: '#1e3a8a',\n    950: '#172554',\n  },\n  indigo: {\n    50: '#eef2ff',\n    100: '#e0e7ff',\n    200: '#c7d2fe',\n    300: '#a5b4fc',\n    400: '#818cf8',\n    500: '#6366f1',\n    600: '#4f46e5',\n    700: '#4338ca',\n    800: '#3730a3',\n    900: '#312e81',\n    950: '#1e1b4b',\n  },\n  violet: {\n    50: '#f5f3ff',\n    100: '#ede9fe',\n    200: '#ddd6fe',\n    300: '#c4b5fd',\n    400: '#a78bfa',\n    500: '#8b5cf6',\n    600: '#7c3aed',\n    700: '#6d28d9',\n    800: '#5b21b6',\n    900: '#4c1d95',\n    950: '#2e1065',\n  },\n  purple: {\n    50: '#faf5ff',\n    100: '#f3e8ff',\n    200: '#e9d5ff',\n    300: '#d8b4fe',\n    400: '#c084fc',\n    500: '#a855f7',\n    600: '#9333ea',\n    700: '#7e22ce',\n    800: '#6b21a8',\n    900: '#581c87',\n    950: '#3b0764',\n  },\n  fuchsia: {\n    50: '#fdf4ff',\n    100: '#fae8ff',\n    200: '#f5d0fe',\n    300: '#f0abfc',\n    400: '#e879f9',\n    500: '#d946ef',\n    600: '#c026d3',\n    700: '#a21caf',\n    800: '#86198f',\n    900: '#701a75',\n    950: '#4a044e',\n  },\n  pink: {\n    50: '#fdf2f8',\n    100: '#fce7f3',\n    200: '#fbcfe8',\n    300: '#f9a8d4',\n    400: '#f472b6',\n    500: '#ec4899',\n    600: '#db2777',\n    700: '#be185d',\n    800: '#9d174d',\n    900: '#831843',\n    950: '#500724',\n  },\n  rose: {\n    50: '#fff1f2',\n    100: '#ffe4e6',\n    200: '#fecdd3',\n    300: '#fda4af',\n    400: '#fb7185',\n    500: '#f43f5e',\n    600: '#e11d48',\n    700: '#be123c',\n    800: '#9f1239',\n    900: '#881337',\n    950: '#4c0519',\n  },\n  get lightBlue() {\n    warn({ version: 'v2.2', from: 'lightBlue', to: 'sky' })\n    return this.sky\n  },\n  get warmGray() {\n    warn({ version: 'v3.0', from: 'warmGray', to: 'stone' })\n    return this.stone\n  },\n  get trueGray() {\n    warn({ version: 'v3.0', from: 'trueGray', to: 'neutral' })\n    return this.neutral\n  },\n  get coolGray() {\n    warn({ version: 'v3.0', from: 'coolGray', to: 'gray' })\n    return this.gray\n  },\n  get blueGray() {\n    warn({ version: 'v3.0', from: 'blueGray', to: 'slate' })\n    return this.slate\n  },\n}\n", "export function defaults(target, ...sources) {\n  for (let source of sources) {\n    for (let k in source) {\n      if (!target?.hasOwnProperty?.(k)) {\n        target[k] = source[k]\n      }\n    }\n\n    for (let k of Object.getOwnPropertySymbols(source)) {\n      if (!target?.hasOwnProperty?.(k)) {\n        target[k] = source[k]\n      }\n    }\n  }\n\n  return target\n}\n", "import { flagEnabled } from '../featureFlags'\nimport log, { dim } from './log'\n\nexport function normalizeConfig(config) {\n  // Quick structure validation\n  /**\n   * type FilePath = string\n   * type RawFile = { raw: string, extension?: string }\n   * type ExtractorFn = (content: string) => Array<string>\n   * type TransformerFn = (content: string) => string\n   *\n   * type Content =\n   *   | Array<FilePath | RawFile>\n   *   | {\n   *       files: Array<FilePath | RawFile>,\n   *       extract?: ExtractorFn | { [extension: string]: ExtractorFn }\n   *       transform?: TransformerFn | { [extension: string]: TransformerFn }\n   *   }\n   */\n  let valid = (() => {\n    // `config.purge` should not exist anymore\n    if (config.purge) {\n      return false\n    }\n\n    // `config.content` should exist\n    if (!config.content) {\n      return false\n    }\n\n    // `config.content` should be an object or an array\n    if (\n      !Array.isArray(config.content) &&\n      !(typeof config.content === 'object' && config.content !== null)\n    ) {\n      return false\n    }\n\n    // When `config.content` is an array, it should consist of FilePaths or RawFiles\n    if (Array.isArray(config.content)) {\n      return config.content.every((path) => {\n        // `path` can be a string\n        if (typeof path === 'string') return true\n\n        // `path` can be an object { raw: string, extension?: string }\n        // `raw` must be a string\n        if (typeof path?.raw !== 'string') return false\n\n        // `extension` (if provided) should also be a string\n        if (path?.extension && typeof path?.extension !== 'string') {\n          return false\n        }\n\n        return true\n      })\n    }\n\n    // When `config.content` is an object\n    if (typeof config.content === 'object' && config.content !== null) {\n      // Only `files`, `relative`, `extract`, and `transform` can exist in `config.content`\n      if (\n        Object.keys(config.content).some(\n          (key) => !['files', 'relative', 'extract', 'transform'].includes(key)\n        )\n      ) {\n        return false\n      }\n\n      // `config.content.files` should exist of FilePaths or RawFiles\n      if (Array.isArray(config.content.files)) {\n        if (\n          !config.content.files.every((path) => {\n            // `path` can be a string\n            if (typeof path === 'string') return true\n\n            // `path` can be an object { raw: string, extension?: string }\n            // `raw` must be a string\n            if (typeof path?.raw !== 'string') return false\n\n            // `extension` (if provided) should also be a string\n            if (path?.extension && typeof path?.extension !== 'string') {\n              return false\n            }\n\n            return true\n          })\n        ) {\n          return false\n        }\n\n        // `config.content.extract` is optional, and can be a Function or a Record<String, Function>\n        if (typeof config.content.extract === 'object') {\n          for (let value of Object.values(config.content.extract)) {\n            if (typeof value !== 'function') {\n              return false\n            }\n          }\n        } else if (\n          !(config.content.extract === undefined || typeof config.content.extract === 'function')\n        ) {\n          return false\n        }\n\n        // `config.content.transform` is optional, and can be a Function or a Record<String, Function>\n        if (typeof config.content.transform === 'object') {\n          for (let value of Object.values(config.content.transform)) {\n            if (typeof value !== 'function') {\n              return false\n            }\n          }\n        } else if (\n          !(\n            config.content.transform === undefined || typeof config.content.transform === 'function'\n          )\n        ) {\n          return false\n        }\n\n        // `config.content.relative` is optional and can be a boolean\n        if (\n          typeof config.content.relative !== 'boolean' &&\n          typeof config.content.relative !== 'undefined'\n        ) {\n          return false\n        }\n      }\n\n      return true\n    }\n\n    return false\n  })()\n\n  if (!valid) {\n    log.warn('purge-deprecation', [\n      'The `purge`/`content` options have changed in Tailwind CSS v3.0.',\n      'Update your configuration file to eliminate this warning.',\n      'https://tailwindcss.com/docs/upgrade-guide#configure-content-sources',\n    ])\n  }\n\n  // Normalize the `safelist`\n  config.safelist = (() => {\n    let { content, purge, safelist } = config\n\n    if (Array.isArray(safelist)) return safelist\n    if (Array.isArray(content?.safelist)) return content.safelist\n    if (Array.isArray(purge?.safelist)) return purge.safelist\n    if (Array.isArray(purge?.options?.safelist)) return purge.options.safelist\n\n    return []\n  })()\n\n  // Normalize the `blocklist`\n  config.blocklist = (() => {\n    let { blocklist } = config\n\n    if (Array.isArray(blocklist)) {\n      if (blocklist.every((item) => typeof item === 'string')) {\n        return blocklist\n      }\n\n      log.warn('blocklist-invalid', [\n        'The `blocklist` option must be an array of strings.',\n        'https://tailwindcss.com/docs/content-configuration#discarding-classes',\n      ])\n    }\n\n    return []\n  })()\n\n  // Normalize prefix option\n  if (typeof config.prefix === 'function') {\n    log.warn('prefix-function', [\n      'As of Tailwind CSS v3.0, `prefix` cannot be a function.',\n      'Update `prefix` in your configuration to be a string to eliminate this warning.',\n      'https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function',\n    ])\n    config.prefix = ''\n  } else {\n    config.prefix = config.prefix ?? ''\n  }\n\n  // Normalize the `content`\n  config.content = {\n    relative: (() => {\n      let { content } = config\n\n      if (content?.relative) {\n        return content.relative\n      }\n\n      return flagEnabled(config, 'relativeContentPathsByDefault')\n    })(),\n\n    files: (() => {\n      let { content, purge } = config\n\n      if (Array.isArray(purge)) return purge\n      if (Array.isArray(purge?.content)) return purge.content\n      if (Array.isArray(content)) return content\n      if (Array.isArray(content?.content)) return content.content\n      if (Array.isArray(content?.files)) return content.files\n\n      return []\n    })(),\n\n    extract: (() => {\n      let extract = (() => {\n        if (config.purge?.extract) return config.purge.extract\n        if (config.content?.extract) return config.content.extract\n\n        if (config.purge?.extract?.DEFAULT) return config.purge.extract.DEFAULT\n        if (config.content?.extract?.DEFAULT) return config.content.extract.DEFAULT\n\n        if (config.purge?.options?.extractors) return config.purge.options.extractors\n        if (config.content?.options?.extractors) return config.content.options.extractors\n\n        return {}\n      })()\n\n      let extractors = {}\n\n      let defaultExtractor = (() => {\n        if (config.purge?.options?.defaultExtractor) {\n          return config.purge.options.defaultExtractor\n        }\n\n        if (config.content?.options?.defaultExtractor) {\n          return config.content.options.defaultExtractor\n        }\n\n        return undefined\n      })()\n\n      if (defaultExtractor !== undefined) {\n        extractors.DEFAULT = defaultExtractor\n      }\n\n      // Functions\n      if (typeof extract === 'function') {\n        extractors.DEFAULT = extract\n      }\n\n      // Arrays\n      else if (Array.isArray(extract)) {\n        for (let { extensions, extractor } of extract ?? []) {\n          for (let extension of extensions) {\n            extractors[extension] = extractor\n          }\n        }\n      }\n\n      // Objects\n      else if (typeof extract === 'object' && extract !== null) {\n        Object.assign(extractors, extract)\n      }\n\n      return extractors\n    })(),\n\n    transform: (() => {\n      let transform = (() => {\n        if (config.purge?.transform) return config.purge.transform\n        if (config.content?.transform) return config.content.transform\n\n        if (config.purge?.transform?.DEFAULT) return config.purge.transform.DEFAULT\n        if (config.content?.transform?.DEFAULT) return config.content.transform.DEFAULT\n\n        return {}\n      })()\n\n      let transformers = {}\n\n      if (typeof transform === 'function') {\n        transformers.DEFAULT = transform\n      }\n\n      if (typeof transform === 'object' && transform !== null) {\n        Object.assign(transformers, transform)\n      }\n\n      return transformers\n    })(),\n  }\n\n  // Validate globs to prevent bogus globs.\n  // E.g.: `./src/*.{html}` is invalid, the `{html}` should just be `html`\n  for (let file of config.content.files) {\n    if (typeof file === 'string' && /{([^,]*?)}/g.test(file)) {\n      log.warn('invalid-glob-braces', [\n        `The glob pattern ${dim(file)} in your Tailwind CSS configuration is invalid.`,\n        `Update it to ${dim(file.replace(/{([^,]*?)}/g, '$1'))} to silence this warning.`,\n        // TODO: Add https://tw.wtf/invalid-glob-braces\n      ])\n      break\n    }\n  }\n\n  return config\n}\n", "export function cloneDeep(value) {\n  if (Array.isArray(value)) {\n    return value.map((child) => cloneDeep(child))\n  }\n\n  if (typeof value === 'object' && value !== null) {\n    return Object.fromEntries(Object.entries(value).map(([k, v]) => [k, cloneDeep(v)]))\n  }\n\n  return value\n}\n", "import negateValue from './negateValue'\nimport corePluginList from '../corePluginList'\nimport configurePlugins from './configurePlugins'\nimport colors from '../public/colors'\nimport { defaults } from './defaults'\nimport { toPath } from './toPath'\nimport { normalizeConfig } from './normalizeConfig'\nimport isPlainObject from './isPlainObject'\nimport { cloneDeep } from './cloneDeep'\nimport { parseColorFormat } from './pluginUtils'\nimport { withAlphaValue } from './withAlphaVariable'\nimport toColorValue from './toColorValue'\n\nfunction isFunction(input) {\n  return typeof input === 'function'\n}\n\nfunction mergeWith(target, ...sources) {\n  let customizer = sources.pop()\n\n  for (let source of sources) {\n    for (let k in source) {\n      let merged = customizer(target[k], source[k])\n\n      if (merged === undefined) {\n        if (isPlainObject(target[k]) && isPlainObject(source[k])) {\n          target[k] = mergeWith({}, target[k], source[k], customizer)\n        } else {\n          target[k] = source[k]\n        }\n      } else {\n        target[k] = merged\n      }\n    }\n  }\n\n  return target\n}\n\nconst configUtils = {\n  colors,\n  negative(scale) {\n    // TODO: Log that this function isn't really needed anymore?\n    return Object.keys(scale)\n      .filter((key) => scale[key] !== '0')\n      .reduce((negativeScale, key) => {\n        let negativeValue = negateValue(scale[key])\n\n        if (negativeValue !== undefined) {\n          negativeScale[`-${key}`] = negativeValue\n        }\n\n        return negativeScale\n      }, {})\n  },\n  breakpoints(screens) {\n    return Object.keys(screens)\n      .filter((key) => typeof screens[key] === 'string')\n      .reduce(\n        (breakpoints, key) => ({\n          ...breakpoints,\n          [`screen-${key}`]: screens[key],\n        }),\n        {}\n      )\n  },\n}\n\nfunction value(valueToResolve, ...args) {\n  return isFunction(valueToResolve) ? valueToResolve(...args) : valueToResolve\n}\n\nfunction collectExtends(items) {\n  return items.reduce((merged, { extend }) => {\n    return mergeWith(merged, extend, (mergedValue, extendValue) => {\n      if (mergedValue === undefined) {\n        return [extendValue]\n      }\n\n      if (Array.isArray(mergedValue)) {\n        return [extendValue, ...mergedValue]\n      }\n\n      return [extendValue, mergedValue]\n    })\n  }, {})\n}\n\nfunction mergeThemes(themes) {\n  return {\n    ...themes.reduce((merged, theme) => defaults(merged, theme), {}),\n\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes),\n  }\n}\n\nfunction mergeExtensionCustomizer(merged, value) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && isPlainObject(merged[0])) {\n    return merged.concat(value)\n  }\n\n  // When the incoming value is an array, and the existing config is an object, prepend the existing object\n  if (Array.isArray(value) && isPlainObject(value[0]) && isPlainObject(merged)) {\n    return [merged, ...value]\n  }\n\n  // Override arrays (for example for font-families, box-shadows, ...)\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  // Execute default behaviour\n  return undefined\n}\n\nfunction mergeExtensions({ extend, ...theme }) {\n  return mergeWith(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!isFunction(themeValue) && !extensions.some(isFunction)) {\n      return mergeWith({}, themeValue, ...extensions, mergeExtensionCustomizer)\n    }\n\n    return (resolveThemePath, utils) =>\n      mergeWith(\n        {},\n        ...[themeValue, ...extensions].map((e) => value(e, resolveThemePath, utils)),\n        mergeExtensionCustomizer\n      )\n  })\n}\n\n/**\n *\n * @param {string} key\n * @return {Iterable<string[] & {alpha: string | undefined}>}\n */\nfunction* toPaths(key) {\n  let path = toPath(key)\n\n  if (path.length === 0) {\n    return\n  }\n\n  yield path\n\n  if (Array.isArray(key)) {\n    return\n  }\n\n  let pattern = /^(.*?)\\s*\\/\\s*([^/]+)$/\n  let matches = key.match(pattern)\n\n  if (matches !== null) {\n    let [, prefix, alpha] = matches\n\n    let newPath = toPath(prefix)\n    newPath.alpha = alpha\n\n    yield newPath\n  }\n}\n\nfunction resolveFunctionKeys(object) {\n  // theme('colors.red.500 / 0.5') -> ['colors', 'red', '500 / 0', '5]\n\n  const resolvePath = (key, defaultValue) => {\n    for (const path of toPaths(key)) {\n      let index = 0\n      let val = object\n\n      while (val !== undefined && val !== null && index < path.length) {\n        val = val[path[index++]]\n\n        let shouldResolveAsFn =\n          isFunction(val) && (path.alpha === undefined || index <= path.length - 1)\n\n        val = shouldResolveAsFn ? val(resolvePath, configUtils) : val\n      }\n\n      if (val !== undefined) {\n        if (path.alpha !== undefined) {\n          let normalized = parseColorFormat(val)\n\n          return withAlphaValue(normalized, path.alpha, toColorValue(normalized))\n        }\n\n        if (isPlainObject(val)) {\n          return cloneDeep(val)\n        }\n\n        return val\n      }\n    }\n\n    return defaultValue\n  }\n\n  Object.assign(resolvePath, {\n    theme: resolvePath,\n    ...configUtils,\n  })\n\n  return Object.keys(object).reduce((resolved, key) => {\n    resolved[key] = isFunction(object[key]) ? object[key](resolvePath, configUtils) : object[key]\n\n    return resolved\n  }, {})\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = []\n\n  configs.forEach((config) => {\n    allConfigs = [...allConfigs, config]\n\n    const plugins = config?.plugins ?? []\n\n    if (plugins.length === 0) {\n      return\n    }\n\n    plugins.forEach((plugin) => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin()\n      }\n      allConfigs = [...allConfigs, ...extractPluginConfigs([plugin?.config ?? {}])]\n    })\n  })\n\n  return allConfigs\n}\n\nfunction resolveCorePlugins(corePluginConfigs) {\n  const result = [...corePluginConfigs].reduceRight((resolved, corePluginConfig) => {\n    if (isFunction(corePluginConfig)) {\n      return corePluginConfig({ corePlugins: resolved })\n    }\n    return configurePlugins(corePluginConfig, resolved)\n  }, corePluginList)\n\n  return result\n}\n\nfunction resolvePluginLists(pluginLists) {\n  const result = [...pluginLists].reduceRight((resolved, pluginList) => {\n    return [...resolved, ...pluginList]\n  }, [])\n\n  return result\n}\n\nexport default function resolveConfig(configs) {\n  let allConfigs = [\n    ...extractPluginConfigs(configs),\n    {\n      prefix: '',\n      important: false,\n      separator: ':',\n    },\n  ]\n\n  return normalizeConfig(\n    defaults(\n      {\n        theme: resolveFunctionKeys(\n          mergeExtensions(mergeThemes(allConfigs.map((t) => t?.theme ?? {})))\n        ),\n        corePlugins: resolveCorePlugins(allConfigs.map((c) => c.corePlugins)),\n        plugins: resolvePluginLists(configs.map((c) => c?.plugins ?? [])),\n      },\n      ...allConfigs\n    )\n  )\n}\n", "import defaultFullConfig from '../../stubs/config.full.js'\nimport { flagEnabled } from '../featureFlags'\n\nexport default function getAllConfigs(config) {\n  const configs = (config?.presets ?? [defaultFullConfig])\n    .slice()\n    .reverse()\n    .flatMap((preset) => getAllConfigs(preset instanceof Function ? preset() : preset))\n\n  const features = {\n    // Add experimental configs here...\n    respectDefaultRingColorOpacity: {\n      theme: {\n        ringColor: ({ theme }) => ({\n          DEFAULT: '#3b82f67f',\n          ...theme('colors'),\n        }),\n      },\n    },\n\n    disableColorOpacityUtilitiesByDefault: {\n      corePlugins: {\n        backgroundOpacity: false,\n        borderOpacity: false,\n        divideOpacity: false,\n        placeholderOpacity: false,\n        ringOpacity: false,\n        textOpacity: false,\n      },\n    },\n  }\n\n  const experimentals = Object.keys(features)\n    .filter((feature) => flagEnabled(config, feature))\n    .map((feature) => features[feature])\n\n  return [config, ...experimentals, ...configs]\n}\n", "import resolveConfigObjects from '../util/resolveConfig'\nimport getAllConfigs from '../util/getAllConfigs'\n\nexport default function resolveConfig(...configs) {\n  let [, ...defaultConfigs] = getAllConfigs(configs[0])\n  return resolveConfigObjects([...configs, ...defaultConfigs])\n}\n"],
  "mappings": "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",
  "names": ["cache", "value", "value", "escape", "max", "max", "value", "value", "length", "value", "postcss", "postcss", "selectorParser", "value", "prefix", "value", "color", "color", "shadow", "value", "value", "isRoot", "char", "result", "keyword", "value", "value", "value", "color", "types", "parser", "parser", "sel", "node", "prefix", "value", "postcss", "selectorParser", "postcss", "value", "postcss", "postcss", "value", "obj", "screen", "SPACE", "value", "color", "number", "value", "max", "postcss", "prefix", "value", "quotes", "max", "breakpoint", "corePlugins", "shadow", "value", "list", "max", "prefix", "types", "type", "list", "value", "parser", "selectorParser", "postcss", "api", "value", "util", "pattern", "cls", "postcss", "rule", "selectorParser", "result", "parser", "parser", "sel", "selectorParser", "prefix", "postcss", "value", "isArbitraryValue", "rule", "variantFunction", "cache", "url", "matches", "list", "node", "pattern", "prefix", "env", "LRU", "postcss", "parser", "postcss", "parser", "classes", "prefix", "cache", "list", "node", "sel", "applyCandidates", "root", "dlv", "dlv", "value", "parseValue", "path", "postcss", "selectorParser", "selectorParser", "node", "postcss", "declarations", "expandApplyAtRules", "expandApplyAtRules", "version", "defaults", "value", "defaultExtractor", "value", "defaults", "value", "toPaths", "pattern", "prefix", "resolvePath", "defaultFullConfig", "resolveConfig", "postcss", "resolveConfig"]
}
